Namespace(env_class='ML1MEnvironment_GPU', policy_class='SASRec', critic_class='GeneralCritic', agent_class='HAC', facade_class='OneStageFacade_HyperAction')
Loading environment
Environment arguments: 
Namespace(seed=19, batch_size=128, lr=0.001, epoch=2, model_path='output/ml1m/env/ml1m_user_env_lr0.001_reg0.0003.model', loss='bce', l2_coef=0.0003, feature_dim=16, attn_n_head=2, hidden_dims=[256], dropout_rate=0.2, train_file='dataset/ml1m/ml1m_b_train.csv', val_file='dataset/ml1m/ml1m_b_test.csv', test_file='', n_worker=0, data_separator='@', user_meta_file='dataset/ml1m/user_info.npy', item_meta_file='dataset/ml1m/item_info.npy', max_seq_len=50, meta_data_separator=' ')
Loading raw data
init ml1m reader
Loading data filesLoad item meta data
Loading user response model
{'length': 7504, 'n_item': 1682, 'item_vec_size': 19, 'user_portrait_len': 24, 'max_seq_len': 50}
Load (checkpoint) from output/ml1m/env/ml1m_user_env_lr0.001_reg0.0003.model.checkpoint
Setup policy:
SASRec(
  (item_map): Linear(in_features=19, out_features=32, bias=True)
  (pos_emb): Embedding(50, 32)
  (emb_dropout): Dropout(p=0.1, inplace=False)
  (emb_norm): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
  (transformer): TransformerEncoder(
    (layers): ModuleList(
      (0-1): 2 x TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=32, out_features=32, bias=True)
        )
        (linear1): Linear(in_features=32, out_features=64, bias=True)
        (dropout): Dropout(p=0.1, inplace=False)
        (linear2): Linear(in_features=64, out_features=32, bias=True)
        (norm1): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.1, inplace=False)
        (dropout2): Dropout(p=0.1, inplace=False)
      )
    )
  )
)
Setup critic:
GeneralCritic(
  (net): DNN(
    (layers): Sequential(
      (0): Linear(in_features=64, out_features=256, bias=True)
      (1): ReLU()
      (2): Dropout(p=0.2, inplace=False)
      (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (4): Linear(in_features=256, out_features=64, bias=True)
      (5): ReLU()
      (6): Dropout(p=0.2, inplace=False)
      (7): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
      (8): Linear(in_features=64, out_features=1, bias=True)
    )
  )
)
Setup agent with data-specific facade
Namespace(seed=11, cuda=-1, env_path='output/ml1m/env/ml1m_user_env_lr0.001_reg0.0003.env', reward_func='mean_with_cost', max_step_per_episode=20, initial_temper=20, urm_log_path='output/ml1m/env/log/ml1m_user_env_lr0.001_reg0.0003.model.log', temper_sweet_point=0.9, temper_prob_lag=100, sasrec_n_layer=2, sasrec_d_model=32, sasrec_d_forward=64, sasrec_n_head=4, sasrec_dropout=0.1, critic_hidden_dims=[256, 64], critic_dropout_rate=0.2, gamma=0.9, n_iter=[50000], train_every_n_step=1, initial_greedy_epsilon=0.0, final_greedy_epsilon=0.0, elbow_greedy=0.1, check_episode=10, with_eval=False, save_path='output/ml1m/agents/hac_SASRec_actor0.0001_critic0.001_behave0_hacoef0.1_niter50000_reg0.00001_ep0_noise0.1_bs64_epbs32_step20_topk1_seed11/model', episode_batch_size=32, batch_size=64, actor_lr=0.0001, critic_lr=0.001, actor_decay=1e-05, critic_decay=1e-05, target_mitigate_coef=0.01, behavior_lr=0.0, behavior_decay=1e-05, hyper_actor_coef=0.1, slate_size=9, buffer_size=100000, start_timestamp=2000, noise_var=0.1, q_laplace_smoothness=0.5, topk_rate=1.0, empty_start_rate=0.0, device='cpu')
Run procedures before training
Facade Parameters:
device: cpu
env: <env.ML1MEnvironment_GPU.ML1MEnvironment_GPU object at 0x7f70675d6220>
actor: SASRec(
  (item_map): Linear(in_features=19, out_features=32, bias=True)
  (pos_emb): Embedding(50, 32)
  (emb_dropout): Dropout(p=0.1, inplace=False)
  (emb_norm): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
  (transformer): TransformerEncoder(
    (layers): ModuleList(
      (0-1): 2 x TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=32, out_features=32, bias=True)
        )
        (linear1): Linear(in_features=32, out_features=64, bias=True)
        (dropout): Dropout(p=0.1, inplace=False)
        (linear2): Linear(in_features=64, out_features=32, bias=True)
        (norm1): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.1, inplace=False)
        (dropout2): Dropout(p=0.1, inplace=False)
      )
    )
  )
)
critic: GeneralCritic(
  (net): DNN(
    (layers): Sequential(
      (0): Linear(in_features=64, out_features=256, bias=True)
      (1): ReLU()
      (2): Dropout(p=0.2, inplace=False)
      (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (4): Linear(in_features=256, out_features=64, bias=True)
      (5): ReLU()
      (6): Dropout(p=0.2, inplace=False)
      (7): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
      (8): Linear(in_features=64, out_features=1, bias=True)
    )
  )
)
slate_size: 9
noise_var: 0.1
noise_decay: 2e-06
q_laplace_smoothness: 0.5
topk_rate: 1.0
empty_start_rate: 0.0
n_item: 1682
candidate_iids: tensor([   1,    2,    3,  ..., 1680, 1681, 1682])
candidate_features: tensor([[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.9485, 0.9485,  ..., 0.9485, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.9485, 0.0000, 0.0000],
        ...,
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]])
buffer_size: 100000
start_timestamp: 2000
buffer: {'user_profile': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]]), 'history': tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        ...,
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]]), 'next_history': tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        ...,
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]]), 'state_emb': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]]), 'action_emb': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]]), 'action': tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        ...,
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]]), 'reward': tensor([0., 0., 0.,  ..., 0., 0., 0.]), 'feedback': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]]), 'done': tensor([False, False, False,  ..., False, False, False])}
buffer_head: 0
current_buffer_size: 0
n_stream_record: 0
is_training_available: False
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True, False, False,  True,  True, False, False,  True,  True, False,
         True, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False,  True,  True, False, False,  True, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True, False, False,  True,  True,  True, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False,  True,  True, False, False, False, False,  True, False,  True,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([ True,  True, False,  True,  True, False,  True, False,  True,  True,
         True,  True, False,  True, False,  True, False, False,  True,  True,
        False, False, False,  True,  True,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False,  True, False,  True, False, False,  True, False, False,
         True,  True,  True, False, False, False, False,  True, False,  True,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([ True,  True, False, False,  True, False,  True, False,  True,  True,
         True,  True, False,  True, False,  True, False,  True,  True,  True,
        False, False, False,  True,  True,  True, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False,  True, False,  True, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
         True,  True,  True, False, False, False, False,  True, False,  True,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([ True,  True, False, False,  True,  True,  True, False,  True,  True,
         True,  True, False,  True, False,  True, False,  True, False,  True,
        False, False,  True,  True,  True,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False,  True, False, False, False,  True, False,
         True,  True, False, False, False, False, False,  True, False,  True,
        False,  True])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True,  True, False, False,  True,  True,  True, False,  True,  True,
         True, False, False,  True, False,  True, False,  True, False,  True,
        False, False,  True,  True,  True,  True, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False,  True, False, False, False,  True, False,
        False,  True, False, False, False, False, False,  True, False,  True,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True,  True, False,  True,  True,  True, False, False,  True,  True,
         True, False, False,  True, False,  True, False,  True, False,  True,
        False, False,  True,  True,  True,  True, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False,  True, False,  True, False, False, False,  True, False,
        False,  True, False, False, False, False, False,  True, False,  True,
        False,  True])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True,  True, False, False,  True,  True, False, False,  True, False,
        False, False, False,  True, False,  True, False,  True, False,  True,
         True, False,  True,  True, False,  True, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False, False,  True,  True, False,  True,
         True, False,  True, False,  True, False, False, False,  True, False,
        False,  True, False, False,  True, False, False,  True, False,  True,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([ True,  True, False, False,  True,  True, False, False,  True, False,
        False, False, False,  True, False, False, False,  True, False,  True,
         True, False,  True,  True, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False,  True,
         True, False,  True, False, False,  True, False, False,  True, False,
        False,  True, False, False,  True, False, False,  True, False,  True,
         True, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False,  True, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([ True,  True, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False,  True,
        False,  True,  True,  True, False,  True, False,  True,  True, False,
        False, False])
tensor([False, False, False, False,  True, False,  True,  True,  True,  True,
         True, False,  True, False, False,  True, False, False,  True, False,
         True, False, False, False, False, False, False, False, False,  True,
         True,  True])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False,  True, False, False,  True, False,  True,  True, False, False,
        False,  True, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([ True,  True, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False,  True,  True, False,  True, False,  True,  True, False,
        False, False])
tensor([False, False, False, False,  True, False,  True,  True, False,  True,
         True, False,  True, False, False, False, False,  True,  True, False,
         True, False, False, False, False, False, False, False, False,  True,
         True,  True])
tensor([False, False,  True,  True, False, False, False, False,  True, False,
        False,  True, False, False,  True,  True, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False,  True,
        False, False,  True,  True, False,  True,  True,  True,  True, False,
        False, False])
tensor([False,  True, False, False,  True, False,  True,  True, False,  True,
         True, False,  True, False, False, False, False,  True,  True, False,
         True, False, False, False, False, False, False, False, False,  True,
         True,  True])
tensor([False, False,  True,  True, False, False, False, False,  True, False,
        False,  True, False, False,  True,  True, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False,  True,
        False, False,  True,  True, False,  True,  True,  True,  True,  True,
        False, False])
tensor([ True, False, False, False,  True, False,  True,  True, False,  True,
         True, False,  True, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False,  True, False,  True, False, False, False, False,  True, False,
        False,  True, False, False,  True,  True, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False, False])
tensor([False, False, False, False,  True, False,  True,  True, False, False,
         True, False, False, False, False, False, False,  True, False, False,
         True, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([ True,  True, False,  True, False, False, False, False, False,  True,
        False, False,  True, False,  True,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False,  True, False,  True,  True, False,
        False,  True, False,  True, False, False,  True, False, False,  True,
        False,  True,  True,  True, False, False,  True,  True,  True,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
         True, False, False, False,  True,  True, False, False, False, False,
         True, False])
tensor([ True,  True, False,  True,  True, False, False, False, False, False,
        False, False,  True, False,  True,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False,  True, False,  True,  True,  True,
        False,  True, False,  True, False, False,  True, False, False,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True,  True, False,  True,  True, False, False, False, False, False,
        False, False,  True, False,  True,  True,  True, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True,  True,  True,
        False,  True, False,  True, False, False, False, False, False,  True,
        False,  True,  True,  True, False, False,  True,  True, False, False,
         True,  True])
tensor([False,  True,  True, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
         True, False, False, False,  True, False, False, False,  True,  True,
        False, False])
tensor([ True, False, False,  True,  True, False, False, False, False, False,
        False, False,  True, False,  True,  True,  True, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True,  True,  True,
        False,  True, False,  True, False, False, False, False, False, False,
        False,  True,  True,  True, False, False,  True,  True, False, False,
         True,  True])
tensor([ True,  True,  True, False,  True, False,  True, False, False, False,
         True, False, False, False, False,  True, False,  True, False,  True,
         True, False, False, False,  True, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False,  True, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False,  True,  True,  True,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False,  True,  True,  True, False,  True,  True, False, False,
         True,  True])
tensor([ True,  True,  True, False,  True, False,  True, False, False, False,
         True, False, False, False,  True, False, False,  True, False,  True,
         True,  True, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True,  True,  True,
        False,  True, False,  True, False, False, False, False,  True, False,
        False,  True,  True,  True,  True, False,  True,  True, False, False,
         True,  True])
Total 63 prepare steps
Training:
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 0, time diff 0.17316651344299316, total time dif 0.0)
step: 0 @ episode report: {'average_total_reward': np.float64(0.0), 'reward_variance': np.float64(0.0), 'max_total_reward': np.float64(0.0), 'min_total_reward': np.float64(0.0), 'average_n_step': np.float64(0.0), 'max_n_step': np.float64(0.0), 'min_n_step': np.float64(0.0), 'buffer_size': 2048} @ step loss: {'critic_loss': np.float64(0.9357399344444275), 'actor_loss': np.float64(-0.3305632174015045), 'hyper_actor_loss': np.float64(0.09130162000656128), 'behavior_loss': np.float64(0.7144851684570312)}

tensor([False, False, False,  True, False, False, False, False, False,  True,
         True, False, False, False, False,  True, False, False,  True,  True,
        False, False, False, False, False,  True,  True,  True, False, False,
        False, False])
tensor([ True,  True,  True, False,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True, False,  True,  True, False, False,
         True,  True,  True,  True,  True, False, False, False,  True,  True,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True,  True, False,  True,  True,  True, False,  True,
        False, False, False, False, False, False, False,  True, False,  True,
        False,  True, False,  True, False,  True,  True,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False,  True,  True,  True,  True,  True,  True, False,  True, False,
         True, False,  True, False,  True, False, False, False,  True,  True,
         True,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True, False, False,  True,  True,  True, False,  True,
         True,  True,  True,  True, False, False,  True,  True, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False,  True, False,  True,  True, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False,  True,  True,
         True, False])
tensor([False, False, False,  True,  True, False,  True,  True, False, False,
        False, False,  True, False, False,  True, False,  True, False,  True,
         True, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([ True, False,  True, False, False,  True, False, False,  True,  True,
         True,  True, False,  True, False, False,  True, False, False, False,
        False,  True,  True,  True, False, False, False,  True,  True, False,
        False,  True])
Episode step 10, time diff 0.666114330291748, total time dif 0.17316651344299316)
step: 10 @ episode report: {'average_total_reward': np.float32(0.22666664), 'reward_variance': np.float32(0.06536297), 'max_total_reward': np.float32(0.67777777), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.5), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 2368} @ step loss: {'critic_loss': np.float64(0.4038107693195343), 'actor_loss': np.float64(-0.13619580026715994), 'hyper_actor_loss': np.float64(0.09159088656306266), 'behavior_loss': np.float64(0.8650044441223145)}

tensor([False,  True, False,  True,  True, False,  True,  True, False, False,
        False, False,  True, False,  True, False, False,  True,  True, False,
        False, False, False, False,  True, False,  True, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False,  True,
         True, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([ True, False,  True,  True, False,  True,  True, False,  True, False,
         True,  True, False,  True, False, False,  True,  True, False, False,
        False,  True,  True,  True, False, False, False, False,  True, False,
         True,  True])
tensor([False,  True, False, False,  True, False, False,  True, False,  True,
        False, False,  True, False,  True,  True, False, False,  True, False,
        False, False, False, False,  True, False,  True, False, False,  True,
        False, False])
tensor([ True, False, False, False, False,  True,  True, False, False, False,
        False, False, False,  True, False, False,  True, False, False,  True,
         True, False,  True, False, False,  True, False,  True, False, False,
         True, False])
tensor([False, False,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True, False,  True,  True, False,  True,  True, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False,  True])
tensor([ True,  True, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True,  True, False,  True, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False,  True, False, False,  True,  True,  True,  True,
         True, False, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([False,  True,  True,  True, False, False, False,  True, False,  True,
        False,  True,  True, False,  True,  True, False, False, False, False,
        False,  True,  True, False, False, False, False,  True, False, False,
        False,  True])
tensor([ True, False, False, False,  True,  True,  True, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True,  True,  True,  True, False,  True,  True,
         True, False])
Episode step 20, time diff 0.6582784652709961, total time dif 0.8392808437347412)
step: 20 @ episode report: {'average_total_reward': np.float32(0.27777776), 'reward_variance': np.float32(0.06671605), 'max_total_reward': np.float32(0.6777778), 'min_total_reward': np.float32(-0.077777795), 'average_n_step': np.float32(2.6), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 2688} @ step loss: {'critic_loss': np.float64(0.20846762359142304), 'actor_loss': np.float64(-0.3238071665167809), 'hyper_actor_loss': np.float64(0.09186493903398514), 'behavior_loss': np.float64(0.9450193166732788)}

tensor([False,  True, False,  True, False, False, False,  True,  True, False,
        False, False,  True,  True, False, False,  True, False,  True,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False,  True, False, False, False,  True,
        False,  True, False, False,  True,  True, False, False, False, False,
        False,  True,  True, False, False,  True, False,  True, False, False,
        False,  True])
tensor([False,  True, False,  True,  True, False,  True,  True, False, False,
         True, False, False,  True, False, False,  True,  True, False, False,
        False, False, False,  True,  True, False,  True, False,  True,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True,  True, False,  True, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True,  True,  True, False,  True,  True, False,  True, False,  True,
        False, False, False, False, False,  True, False, False,  True, False,
        False,  True,  True, False,  True,  True, False,  True, False, False,
         True, False])
tensor([False, False, False,  True, False, False,  True, False,  True, False,
         True, False, False,  True, False, False,  True,  True, False, False,
         True, False, False,  True, False, False,  True, False,  True,  True,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False,  True,  True, False,  True,  True, False, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False,  True, False, False, False, False,  True, False,  True,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False,  True,  True,  True,  True, False, False,
         True, False])
tensor([False, False, False,  True,  True, False,  True, False,  True, False,
         True,  True, False, False, False, False,  True, False, False, False,
         True, False,  True, False, False, False, False, False,  True,  True,
        False, False])
tensor([False,  True,  True, False, False,  True, False, False, False, False,
        False, False,  True, False,  True, False, False, False,  True,  True,
        False,  True, False,  True, False,  True,  True, False, False, False,
        False,  True])
Episode step 30, time diff 0.6634631156921387, total time dif 1.4975593090057373)
step: 30 @ episode report: {'average_total_reward': np.float32(0.55111116), 'reward_variance': np.float32(0.1418568), 'max_total_reward': np.float32(1.0444444), 'min_total_reward': np.float32(0.044444427), 'average_n_step': np.float32(2.8), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 3008} @ step loss: {'critic_loss': np.float64(0.1419698104262352), 'actor_loss': np.float64(-0.1887485295534134), 'hyper_actor_loss': np.float64(0.09139888361096382), 'behavior_loss': np.float64(1.022834300994873)}

tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False,  True, False,  True, False,  True, False, False,
        False, False, False, False,  True, False, False,  True, False,  True,
         True, False])
tensor([ True, False,  True,  True,  True,  True,  True, False,  True, False,
        False,  True, False, False,  True, False,  True, False, False,  True,
        False, False,  True, False, False, False,  True, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False,  True,
         True, False,  True, False, False, False, False, False,  True, False,
         True,  True, False,  True,  True,  True, False, False, False,  True,
        False,  True])
tensor([ True, False, False,  True, False,  True, False, False, False, False,
        False, False, False,  True, False,  True,  True,  True, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
         True, False])
tensor([False,  True, False, False,  True, False,  True, False,  True, False,
        False,  True, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
         True, False,  True, False, False, False, False, False,  True, False,
         True,  True, False,  True, False,  True, False, False,  True,  True,
        False,  True])
tensor([ True, False, False,  True, False,  True, False,  True, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
         True, False])
tensor([False,  True,  True, False,  True, False, False, False,  True,  True,
        False,  True, False, False,  True,  True,  True, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False,  True,  True,  True,  True,
        False,  True])
tensor([ True, False, False,  True,  True,  True, False,  True, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False,  True, False,  True,  True, False, False, False, False,
         True, False])
Episode step 40, time diff 0.6691515445709229, total time dif 2.161022424697876)
step: 40 @ episode report: {'average_total_reward': np.float32(0.65333337), 'reward_variance': np.float32(0.34634078), 'max_total_reward': np.float32(2.0444446), 'min_total_reward': np.float32(-0.07777779), 'average_n_step': np.float32(3.0), 'max_n_step': np.float32(4.0), 'min_n_step': np.float32(2.0), 'buffer_size': 3328} @ step loss: {'critic_loss': np.float64(0.12055148109793663), 'actor_loss': np.float64(-0.3200840950012207), 'hyper_actor_loss': np.float64(0.09161259904503823), 'behavior_loss': np.float64(1.0667215883731842)}

tensor([False,  True,  True, False, False, False, False, False,  True,  True,
        False,  True, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
         True, False,  True, False, False, False, False, False, False, False,
         True,  True, False,  True, False, False, False,  True, False, False,
        False,  True])
tensor([ True, False,  True,  True,  True,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False,  True,  True, False, False, False,  True,
         True, False])
tensor([False,  True, False, False, False, False, False, False,  True,  True,
         True,  True, False,  True,  True, False, False,  True, False, False,
        False, False,  True,  True, False, False,  True, False,  True, False,
        False,  True])
tensor([False, False,  True, False, False, False,  True,  True, False, False,
        False, False,  True, False, False, False,  True, False, False,  True,
        False, False, False, False,  True, False, False,  True, False,  True,
        False, False])
tensor([ True, False, False,  True,  True,  True, False, False,  True, False,
        False, False, False, False, False,  True, False,  True,  True, False,
         True,  True, False,  True, False,  True, False, False,  True, False,
         True, False])
tensor([False,  True, False, False, False, False,  True,  True, False, False,
         True,  True, False,  True,  True, False, False, False, False,  True,
        False, False,  True, False,  True, False,  True, False, False, False,
        False,  True])
tensor([False, False,  True,  True, False, False, False, False, False,  True,
        False, False,  True, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False, False,  True, False,
        False, False])
tensor([ True, False, False, False,  True,  True,  True, False, False, False,
        False,  True, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
Episode step 50, time diff 0.6599137783050537, total time dif 2.830173969268799)
step: 50 @ episode report: {'average_total_reward': np.float32(0.5877778), 'reward_variance': np.float32(0.3178877), 'max_total_reward': np.float32(1.9222223), 'min_total_reward': np.float32(0.044444427), 'average_n_step': np.float32(2.8), 'max_n_step': np.float32(4.0), 'min_n_step': np.float32(2.0), 'buffer_size': 3648} @ step loss: {'critic_loss': np.float64(0.09944088831543922), 'actor_loss': np.float64(-0.3277919411659241), 'hyper_actor_loss': np.float64(0.09186504632234574), 'behavior_loss': np.float64(1.066200602054596)}

tensor([False,  True,  True,  True, False, False, False, False, False,  True,
         True, False,  True, False, False, False,  True,  True, False,  True,
         True, False, False, False, False,  True, False,  True,  True,  True,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False,  True, False, False, False,  True, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False,  True,  True, False, False,  True, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False,  True,  True, False, False,
         True, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True,  True,  True, False,
        False,  True])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
         True, False, False,  True,  True,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True,  True, False,  True,  True, False,
        False,  True, False, False,  True, False, False,  True, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False,  True,
         True, False,  True, False, False,  True,  True, False, False, False,
         True, False, False, False, False, False, False,  True,  True, False,
        False,  True])
tensor([False,  True,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False,  True, False, False, False,  True,
         True, False])
tensor([False, False, False, False,  True,  True, False,  True, False, False,
         True,  True, False,  True,  True, False, False, False,  True, False,
        False, False,  True, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False,  True, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 60, time diff 0.6536636352539062, total time dif 3.4900877475738525)
step: 60 @ episode report: {'average_total_reward': np.float32(1.5733335), 'reward_variance': np.float32(1.0530422), 'max_total_reward': np.float32(3.4111114), 'min_total_reward': np.float32(0.5555555), 'average_n_step': np.float32(3.7), 'max_n_step': np.float32(5.0), 'min_n_step': np.float32(3.0), 'buffer_size': 3968} @ step loss: {'critic_loss': np.float64(0.09918990209698678), 'actor_loss': np.float64(-0.35055322349071505), 'hyper_actor_loss': np.float64(0.09219832867383956), 'behavior_loss': np.float64(1.067037570476532)}

tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False,  True, False,  True, False, False,  True, False, False, False,
         True, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True,  True,
        False,  True])
tensor([False, False,  True, False,  True, False, False,  True, False, False,
         True,  True, False, False,  True, False, False,  True,  True,  True,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([ True,  True, False,  True, False, False, False, False,  True,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False,  True,  True, False, False,  True,  True, False,  True, False,
        False,  True])
tensor([False, False,  True, False,  True, False, False,  True, False, False,
        False,  True, False,  True, False, False, False, False, False,  True,
         True, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False,  True, False, False, False, False,  True,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False,  True, False, False, False, False,  True,  True,  True,
         True,  True])
Episode step 70, time diff 0.7718892097473145, total time dif 4.143751382827759)
step: 70 @ episode report: {'average_total_reward': np.float32(1.758889), 'reward_variance': np.float32(0.7232853), 'max_total_reward': np.float32(3.0444448), 'min_total_reward': np.float32(0.06666666), 'average_n_step': np.float32(3.8), 'max_n_step': np.float32(5.0), 'min_n_step': np.float32(3.0), 'buffer_size': 4288} @ step loss: {'critic_loss': np.float64(0.07958543822169303), 'actor_loss': np.float64(-0.5018069952726364), 'hyper_actor_loss': np.float64(0.09184374287724495), 'behavior_loss': np.float64(0.9659858405590057)}

tensor([False, False,  True, False, False, False, False,  True, False, False,
         True, False,  True,  True,  True, False, False, False,  True, False,
         True, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False,  True,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True,  True, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False,  True, False,  True, False, False, False,
         True, False, False, False,  True, False,  True, False,  True, False,
        False, False,  True,  True, False, False, False,  True,  True,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False,  True, False,  True,
         True,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True,  True,  True,  True,  True, False,  True,  True, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False,  True,  True,
        False,  True])
tensor([ True, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False,  True, False,  True,  True,
         True, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
Episode step 80, time diff 0.7844743728637695, total time dif 4.915640592575073)
step: 80 @ episode report: {'average_total_reward': np.float32(2.1244445), 'reward_variance': np.float32(1.3772545), 'max_total_reward': np.float32(3.9222224), 'min_total_reward': np.float32(-0.07777779), 'average_n_step': np.float32(4.3), 'max_n_step': np.float32(6.0), 'min_n_step': np.float32(2.0), 'buffer_size': 4608} @ step loss: {'critic_loss': np.float64(0.07924445010721684), 'actor_loss': np.float64(-0.7505188047885895), 'hyper_actor_loss': np.float64(0.0910140685737133), 'behavior_loss': np.float64(0.9243849217891693)}

tensor([False,  True, False,  True, False,  True, False, False, False, False,
        False,  True,  True, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
         True, False])
tensor([ True, False,  True, False,  True, False, False,  True,  True, False,
        False, False, False,  True,  True, False, False,  True, False, False,
        False, False, False, False,  True,  True,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False,  True,
         True, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False,  True, False,  True, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False,  True, False,  True, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False,  True,  True, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
         True,  True, False, False,  True,  True, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True,  True,  True,  True,
        False,  True])
tensor([False,  True, False,  True,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True,  True,  True,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False,  True,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False,  True,  True,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
Episode step 90, time diff 0.7950620651245117, total time dif 5.700114965438843)
step: 90 @ episode report: {'average_total_reward': np.float32(2.0466666), 'reward_variance': np.float32(1.8136991), 'max_total_reward': np.float32(4.044445), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(4.1), 'max_n_step': np.float32(6.0), 'min_n_step': np.float32(2.0), 'buffer_size': 4928} @ step loss: {'critic_loss': np.float64(0.07981461137533188), 'actor_loss': np.float64(-0.9956329822540283), 'hyper_actor_loss': np.float64(0.08910114616155625), 'behavior_loss': np.float64(0.9378503918647766)}

tensor([ True, False, False, False, False,  True, False, False,  True, False,
         True,  True, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
         True, False])
tensor([False,  True, False,  True,  True, False, False,  True, False,  True,
        False, False, False,  True,  True, False, False,  True, False, False,
         True, False,  True, False, False, False,  True, False,  True, False,
        False,  True])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False,  True, False, False,  True, False, False,  True,  True,
        False,  True, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True,  True, False,
         True, False])
tensor([ True,  True, False, False, False, False, False,  True,  True, False,
         True, False,  True,  True,  True, False,  True,  True, False, False,
         True, False,  True,  True, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False,  True, False, False, False,  True, False, False,  True,  True,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True,  True,  True, False, False,  True, False,  True, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False,  True, False, False,
         True, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False,  True,  True, False,  True, False,
        False, False, False,  True,  True, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
Episode step 100, time diff 0.8130686283111572, total time dif 6.4951770305633545)
step: 100 @ episode report: {'average_total_reward': np.float32(2.0855556), 'reward_variance': np.float32(0.73479146), 'max_total_reward': np.float32(3.166667), 'min_total_reward': np.float32(0.3111111), 'average_n_step': np.float32(4.2), 'max_n_step': np.float32(5.0), 'min_n_step': np.float32(3.0), 'buffer_size': 5248} @ step loss: {'critic_loss': np.float64(0.08637914881110191), 'actor_loss': np.float64(-1.1480409860610963), 'hyper_actor_loss': np.float64(0.08701936975121498), 'behavior_loss': np.float64(0.9397008299827576)}

tensor([False,  True, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False,  True, False,  True, False, False, False,  True, False, False,
         True,  True])
tensor([ True, False,  True, False, False, False, False,  True, False,  True,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False,  True, False, False,  True,  True, False, False,  True,
        False, False])
tensor([False, False, False,  True, False,  True, False, False,  True, False,
         True, False,  True, False, False, False, False, False, False,  True,
         True, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False,  True, False, False,  True, False, False, False,  True, False,
        False,  True, False,  True, False, False, False,  True, False, False,
        False,  True])
tensor([ True, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False,  True,  True,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False,  True, False, False, False, False,
         True, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False,  True, False, False, False,
         True, False])
Episode step 110, time diff 0.8283135890960693, total time dif 7.308245658874512)
step: 110 @ episode report: {'average_total_reward': np.float32(2.158889), 'reward_variance': np.float32(1.1777791), 'max_total_reward': np.float32(3.4111114), 'min_total_reward': np.float32(0.18888892), 'average_n_step': np.float32(4.2), 'max_n_step': np.float32(5.0), 'min_n_step': np.float32(3.0), 'buffer_size': 5568} @ step loss: {'critic_loss': np.float64(0.10184299573302269), 'actor_loss': np.float64(-1.1110630631446838), 'hyper_actor_loss': np.float64(0.08563350290060043), 'behavior_loss': np.float64(1.0064953923225404)}

tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False,  True,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
         True, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([ True, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False,  True,  True, False, False, False,
        False,  True,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False,  True,  True, False,  True,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False,  True,  True,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False,  True, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 120, time diff 0.8016641139984131, total time dif 8.136559247970581)
step: 120 @ episode report: {'average_total_reward': np.float32(3.3666668), 'reward_variance': np.float32(0.55646914), 'max_total_reward': np.float32(4.288889), 'min_total_reward': np.float32(2.1666667), 'average_n_step': np.float32(5.2), 'max_n_step': np.float32(6.0), 'min_n_step': np.float32(4.0), 'buffer_size': 5888} @ step loss: {'critic_loss': np.float64(0.09757117182016373), 'actor_loss': np.float64(-1.1296491503715516), 'hyper_actor_loss': np.float64(0.08528344556689263), 'behavior_loss': np.float64(0.9644186794757843)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True,  True,  True,  True, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([ True,  True, False, False,  True, False,  True,  True, False,  True,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False,  True, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True,  True, False, False, False,  True,  True,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True,  True, False, False,  True, False,  True, False, False,  True,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False,  True, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
         True,  True])
Episode step 130, time diff 0.7868738174438477, total time dif 8.938223361968994)
step: 130 @ episode report: {'average_total_reward': np.float32(4.1255555), 'reward_variance': np.float32(0.7623224), 'max_total_reward': np.float32(5.2888894), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(5.8), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 6208} @ step loss: {'critic_loss': np.float64(0.10432712435722351), 'actor_loss': np.float64(-1.2312726855278016), 'hyper_actor_loss': np.float64(0.08503082394599915), 'behavior_loss': np.float64(0.9768395125865936)}

tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False,  True,  True,  True,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False,  True,  True, False, False, False,  True,
        False, False])
tensor([ True,  True, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False,  True, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True,  True,  True,  True,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False,  True, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
Episode step 140, time diff 0.8036327362060547, total time dif 9.725097179412842)
step: 140 @ episode report: {'average_total_reward': np.float32(4.7133336), 'reward_variance': np.float32(0.8507112), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 6528} @ step loss: {'critic_loss': np.float64(0.13100871965289115), 'actor_loss': np.float64(-1.2368519306182861), 'hyper_actor_loss': np.float64(0.08442043513059616), 'behavior_loss': np.float64(0.946960163116455)}

tensor([False, False, False, False, False, False,  True, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False,  True])
tensor([ True,  True, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True,  True,
        False,  True, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 150, time diff 0.7813661098480225, total time dif 10.528729915618896)
step: 150 @ episode report: {'average_total_reward': np.float32(3.8622222), 'reward_variance': np.float32(0.87005436), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(2.1666667), 'average_n_step': np.float32(5.5), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 6848} @ step loss: {'critic_loss': np.float64(0.12827495932579042), 'actor_loss': np.float64(-1.1953094363212586), 'hyper_actor_loss': np.float64(0.08378503322601319), 'behavior_loss': np.float64(0.946091628074646)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True,  True, False,  True,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True,  True, False, False, False,  True, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True,  True, False,  True,  True, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False,  True, False, False,  True,  True,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([ True, False,  True,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
Episode step 160, time diff 0.7888748645782471, total time dif 11.310096025466919)
step: 160 @ episode report: {'average_total_reward': np.float32(4.5499997), 'reward_variance': np.float32(0.9766728), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(6.2), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 7168} @ step loss: {'critic_loss': np.float64(0.16913414597511292), 'actor_loss': np.float64(-1.3466293454170226), 'hyper_actor_loss': np.float64(0.08332943469285965), 'behavior_loss': np.float64(0.9603238344192505)}

tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False,  True,  True, False, False, False, False, False, False,  True,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False,  True, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False,  True,
        False,  True])
tensor([ True,  True, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
Episode step 170, time diff 0.7709238529205322, total time dif 12.098970890045166)
step: 170 @ episode report: {'average_total_reward': np.float32(3.988889), 'reward_variance': np.float32(0.655358), 'max_total_reward': np.float32(5.4111114), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(5.7), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 7488} @ step loss: {'critic_loss': np.float64(0.18819041103124617), 'actor_loss': np.float64(-1.2343845129013062), 'hyper_actor_loss': np.float64(0.08281417414546013), 'behavior_loss': np.float64(0.9755196273326874)}

tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False,  True,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False,  True,  True,
        False, False, False,  True,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True,  True,
        False,  True, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False,  True, False, False, False,  True,  True, False, False,
         True, False,  True, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False,  True,  True, False, False, False,
        False,  True])
tensor([ True,  True, False, False,  True, False, False, False,  True, False,
        False,  True, False, False, False,  True, False,  True,  True,  True,
        False, False, False,  True, False, False, False, False,  True,  True,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 180, time diff 0.9645848274230957, total time dif 12.869894742965698)
step: 180 @ episode report: {'average_total_reward': np.float32(3.8011117), 'reward_variance': np.float32(0.5423322), 'max_total_reward': np.float32(4.533334), 'min_total_reward': np.float32(2.1666667), 'average_n_step': np.float32(5.5), 'max_n_step': np.float32(6.0), 'min_n_step': np.float32(4.0), 'buffer_size': 7808} @ step loss: {'critic_loss': np.float64(0.1960991472005844), 'actor_loss': np.float64(-1.1365093469619751), 'hyper_actor_loss': np.float64(0.08279499188065528), 'behavior_loss': np.float64(0.9509574413299561)}

tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True,  True])
tensor([ True,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True,  True,  True,
         True,  True, False,  True, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
         True,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True,  True,
        False, False, False, False, False,  True, False, False,  True, False,
         True,  True, False, False, False, False, False,  True,  True, False,
        False, False])
Episode step 190, time diff 0.8167617321014404, total time dif 13.834479570388794)
step: 190 @ episode report: {'average_total_reward': np.float32(4.201112), 'reward_variance': np.float32(0.57608515), 'max_total_reward': np.float32(5.4111114), 'min_total_reward': np.float32(3.1666667), 'average_n_step': np.float32(5.9), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 8128} @ step loss: {'critic_loss': np.float64(0.18447531312704085), 'actor_loss': np.float64(-1.1150094151496888), 'hyper_actor_loss': np.float64(0.08258770033717155), 'behavior_loss': np.float64(0.9784605622291564)}

tensor([False, False,  True, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True,  True])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True,  True,
         True, False, False, False,  True, False, False,  True,  True, False,
        False, False])
tensor([ True, False, False, False,  True, False, False,  True,  True,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False,  True, False,  True, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False,  True, False, False, False, False,  True, False, False,
         True, False])
tensor([False,  True, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
Episode step 200, time diff 0.8521080017089844, total time dif 14.651241302490234)
step: 200 @ episode report: {'average_total_reward': np.float32(3.6133335), 'reward_variance': np.float32(0.7852297), 'max_total_reward': np.float32(5.0444446), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(5.3), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 8448} @ step loss: {'critic_loss': np.float64(0.21012045592069625), 'actor_loss': np.float64(-1.166182851791382), 'hyper_actor_loss': np.float64(0.0822260208427906), 'behavior_loss': np.float64(0.9507532000541687)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True,  True,  True, False,
        False,  True, False,  True, False,  True, False, False,  True, False,
        False, False])
tensor([ True, False,  True, False, False, False, False,  True,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False,  True, False,  True, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False,  True,
        False, False])
tensor([ True,  True, False, False, False, False, False,  True, False,  True,
        False,  True, False, False, False, False,  True, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
         True, False,  True, False, False,  True,  True, False, False, False,
        False, False])
Episode step 210, time diff 0.8095674514770508, total time dif 15.503349304199219)
step: 210 @ episode report: {'average_total_reward': np.float32(4.2255564), 'reward_variance': np.float32(0.46651977), 'max_total_reward': np.float32(5.4111114), 'min_total_reward': np.float32(3.1666667), 'average_n_step': np.float32(5.9), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 8768} @ step loss: {'critic_loss': np.float64(0.21672988533973694), 'actor_loss': np.float64(-1.1662827968597411), 'hyper_actor_loss': np.float64(0.0817500226199627), 'behavior_loss': np.float64(0.9761234641075134)}

tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
         True, False])
tensor([ True, False,  True,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False,  True, False,  True,
         True, False, False,  True, False,  True,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False,  True,  True, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
Episode step 220, time diff 0.8177027702331543, total time dif 16.31291675567627)
step: 220 @ episode report: {'average_total_reward': np.float32(4.0133333), 'reward_variance': np.float32(0.50582236), 'max_total_reward': np.float32(5.533334), 'min_total_reward': np.float32(3.1666667), 'average_n_step': np.float32(5.7), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 9088} @ step loss: {'critic_loss': np.float64(0.2073153853416443), 'actor_loss': np.float64(-1.183414840698242), 'hyper_actor_loss': np.float64(0.08204564526677131), 'behavior_loss': np.float64(0.9406711280345916)}

tensor([ True,  True, False, False,  True, False,  True,  True, False, False,
         True, False, False,  True,  True, False,  True, False, False, False,
        False, False, False,  True, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False,  True, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False,  True, False, False, False, False, False,
         True, False, False,  True,  True,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
Episode step 230, time diff 0.8103761672973633, total time dif 17.130619525909424)
step: 230 @ episode report: {'average_total_reward': np.float32(4.027778), 'reward_variance': np.float32(0.7313148), 'max_total_reward': np.float32(5.5333333), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(5.8), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 9408} @ step loss: {'critic_loss': np.float64(0.20554858446121216), 'actor_loss': np.float64(-1.2414085030555726), 'hyper_actor_loss': np.float64(0.08287666216492653), 'behavior_loss': np.float64(0.9433182179927826)}

tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False,  True, False, False,  True, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False,  True,  True,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False,  True,  True,  True, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False,  True,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
Episode step 240, time diff 0.8302123546600342, total time dif 17.940995693206787)
step: 240 @ episode report: {'average_total_reward': np.float32(4.35), 'reward_variance': np.float32(0.7224259), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(6.0), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 9728} @ step loss: {'critic_loss': np.float64(0.20502836406230926), 'actor_loss': np.float64(-1.2548854112625123), 'hyper_actor_loss': np.float64(0.08436720371246338), 'behavior_loss': np.float64(0.918336009979248)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False,  True,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([ True, False, False, False,  True,  True,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False,  True,
         True, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
         True,  True, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False,  True, False, False, False,  True,  True, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
Episode step 250, time diff 0.8330190181732178, total time dif 18.77120804786682)
step: 250 @ episode report: {'average_total_reward': np.float32(4.486667), 'reward_variance': np.float32(1.0893037), 'max_total_reward': np.float32(6.5333333), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(6.1), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 10048} @ step loss: {'critic_loss': np.float64(0.21024979501962662), 'actor_loss': np.float64(-1.374324667453766), 'hyper_actor_loss': np.float64(0.08641015142202377), 'behavior_loss': np.float64(0.842924827337265)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
         True, False])
tensor([False, False,  True, False,  True, False,  True, False, False, False,
        False,  True, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False,  True,  True, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
         True,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True,  True, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
Episode step 260, time diff 0.7837753295898438, total time dif 19.60422706604004)
step: 260 @ episode report: {'average_total_reward': np.float32(4.3766665), 'reward_variance': np.float32(0.34756666), 'max_total_reward': np.float32(5.533334), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.1), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 10368} @ step loss: {'critic_loss': np.float64(0.20725591480731964), 'actor_loss': np.float64(-1.2422799348831177), 'hyper_actor_loss': np.float64(0.08859465643763542), 'behavior_loss': np.float64(0.816242516040802)}

tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False,  True,
        False, False, False,  True, False, False,  True, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
         True, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False,  True, False,  True, False,  True,  True,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False,  True,  True, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
         True, False,  True, False, False, False, False, False,  True,  True,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 270, time diff 0.8209314346313477, total time dif 20.388002395629883)
step: 270 @ episode report: {'average_total_reward': np.float32(3.8622222), 'reward_variance': np.float32(0.54185677), 'max_total_reward': np.float32(5.4111114), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(5.5), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 10688} @ step loss: {'critic_loss': np.float64(0.216921865940094), 'actor_loss': np.float64(-1.3179258942604064), 'hyper_actor_loss': np.float64(0.0907473161816597), 'behavior_loss': np.float64(0.78936927318573)}

tensor([False, False, False, False,  True, False, False, False, False, False,
         True,  True, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False,  True, False, False, False,
        False, False,  True, False, False,  True, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False,  True, False, False, False,  True,  True,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False,  True, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False,  True, False,  True,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
         True,  True])
Episode step 280, time diff 0.8102726936340332, total time dif 21.20893383026123)
step: 280 @ episode report: {'average_total_reward': np.float32(4.713333), 'reward_variance': np.float32(0.48313063), 'max_total_reward': np.float32(6.411111), 'min_total_reward': np.float32(3.9222226), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 11008} @ step loss: {'critic_loss': np.float64(0.2071751818060875), 'actor_loss': np.float64(-1.3096871256828309), 'hyper_actor_loss': np.float64(0.0922227568924427), 'behavior_loss': np.float64(0.7475287854671478)}

tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False,  True,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True,  True, False,  True, False, False, False,  True,
         True, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False,  True, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False,  True, False, False,  True,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False])
tensor([False,  True,  True, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False,  True,  True,  True, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False,  True])
Episode step 290, time diff 0.7891688346862793, total time dif 22.019206523895264)
step: 290 @ episode report: {'average_total_reward': np.float32(3.4666667), 'reward_variance': np.float32(1.4762719), 'max_total_reward': np.float32(5.533334), 'min_total_reward': np.float32(1.1666667), 'average_n_step': np.float32(5.3), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(3.0), 'buffer_size': 11328} @ step loss: {'critic_loss': np.float64(0.20497404634952546), 'actor_loss': np.float64(-1.2747867584228516), 'hyper_actor_loss': np.float64(0.09258789792656899), 'behavior_loss': np.float64(0.724661934375763)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False,  True,  True, False,
        False, False,  True, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False,  True, False,  True,  True, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False,  True, False,  True, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False,  True, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True,  True,  True, False,  True,  True,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False,  True,  True, False, False, False,  True, False, False,
        False,  True, False,  True, False,  True, False, False, False,  True,
        False,  True,  True, False, False, False, False, False, False, False,
        False,  True])
Episode step 300, time diff 0.8302733898162842, total time dif 22.808375358581543)
step: 300 @ episode report: {'average_total_reward': np.float32(2.8055558), 'reward_variance': np.float32(0.8837099), 'max_total_reward': np.float32(4.288889), 'min_total_reward': np.float32(1.3111112), 'average_n_step': np.float32(4.7), 'max_n_step': np.float32(6.0), 'min_n_step': np.float32(4.0), 'buffer_size': 11648} @ step loss: {'critic_loss': np.float64(0.20101739913225175), 'actor_loss': np.float64(-1.440380835533142), 'hyper_actor_loss': np.float64(0.09309111088514328), 'behavior_loss': np.float64(0.7252231001853943)}

tensor([False, False, False, False,  True, False, False, False,  True,  True,
        False, False,  True, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False,  True,  True,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
         True, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False,  True, False,  True, False, False, False, False, False,  True,
         True, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False,  True, False, False, False, False, False,  True,
        False, False,  True,  True,  True,  True,  True, False,  True, False,
         True, False,  True, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False,  True, False, False, False,  True,
         True, False])
tensor([False, False,  True, False, False,  True, False,  True, False,  True,
        False, False, False, False, False, False, False,  True,  True,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([ True, False, False,  True, False, False, False, False,  True, False,
         True,  True,  True, False, False,  True,  True, False, False, False,
         True, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False,  True, False,  True, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False,  True,  True,  True, False, False,  True,
         True, False])
Episode step 310, time diff 0.8036108016967773, total time dif 23.638648748397827)
step: 310 @ episode report: {'average_total_reward': np.float32(2.1466668), 'reward_variance': np.float32(0.409921), 'max_total_reward': np.float32(3.0444446), 'min_total_reward': np.float32(0.92222226), 'average_n_step': np.float32(4.2), 'max_n_step': np.float32(5.0), 'min_n_step': np.float32(3.0), 'buffer_size': 11968} @ step loss: {'critic_loss': np.float64(0.19243587851524352), 'actor_loss': np.float64(-1.4343106865882873), 'hyper_actor_loss': np.float64(0.09331694468855858), 'behavior_loss': np.float64(0.7015317499637603)}

tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False,  True,
        False,  True, False,  True, False, False, False,  True,  True, False,
        False,  True])
tensor([ True, False, False,  True, False,  True,  True,  True,  True, False,
        False,  True, False, False, False,  True,  True, False,  True, False,
         True, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False,  True,  True, False, False, False,  True, False, False,
        False, False, False, False, False,  True,  True, False, False,  True,
         True, False])
tensor([False, False, False, False,  True,  True, False,  True,  True, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False,  True, False, False, False, False, False,  True,  True, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True,  True, False, False, False,  True,  True, False, False,  True,
         True, False, False,  True,  True, False, False, False, False, False,
         True, False])
tensor([ True,  True, False,  True, False, False,  True, False, False,  True,
        False, False,  True,  True, False, False, False,  True, False, False,
        False,  True,  True, False, False,  True,  True,  True,  True,  True,
        False, False])
tensor([False, False, False, False,  True,  True, False,  True,  True, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([ True,  True,  True, False, False, False, False, False, False, False,
         True, False, False,  True, False,  True,  True,  True, False,  True,
         True,  True, False,  True, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False,  True,  True, False,  True,  True, False,  True,
        False,  True,  True, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False,  True,  True,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False,  True])
Episode step 320, time diff 0.8136715888977051, total time dif 24.442259550094604)
step: 320 @ episode report: {'average_total_reward': np.float32(0.45333332), 'reward_variance': np.float32(0.14500743), 'max_total_reward': np.float32(1.0444446), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.8), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 12288} @ step loss: {'critic_loss': np.float64(0.23972332179546357), 'actor_loss': np.float64(-1.4719491958618165), 'hyper_actor_loss': np.float64(0.09338637739419937), 'behavior_loss': np.float64(0.7120764553546906)}

tensor([ True, False,  True, False, False, False, False,  True, False,  True,
         True, False,  True,  True, False,  True, False,  True, False,  True,
         True,  True,  True,  True, False,  True, False, False, False, False,
         True, False])
tensor([False,  True, False,  True,  True, False,  True, False,  True, False,
        False,  True, False, False,  True, False, False, False,  True, False,
        False, False, False, False,  True, False,  True,  True,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False,  True,
         True, False, False,  True, False, False,  True,  True, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([ True, False,  True,  True, False, False, False, False,  True, False,
        False, False,  True, False, False,  True, False, False, False,  True,
        False,  True,  True,  True,  True,  True, False, False, False, False,
         True, False])
tensor([False,  True, False, False,  True, False,  True,  True, False, False,
        False,  True, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False,  True,  True,  True, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False,  True,
         True, False,  True,  True, False,  True,  True,  True, False, False,
         True,  True,  True, False,  True, False, False, False, False,  True,
        False,  True])
tensor([False, False,  True,  True,  True, False,  True, False,  True, False,
        False,  True, False, False,  True, False, False, False, False,  True,
        False, False, False,  True, False,  True,  True,  True, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
         True, False,  True, False, False,  True,  True, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False,  True, False, False, False,  True, False, False,
         True,  True,  True, False,  True, False,  True, False, False,  True,
        False,  True])
tensor([False,  True,  True,  True, False, False, False, False,  True, False,
        False,  True, False, False,  True,  True, False, False, False,  True,
        False, False, False,  True, False,  True, False,  True,  True, False,
        False, False])
Episode step 330, time diff 0.7815687656402588, total time dif 25.25593113899231)
step: 330 @ episode report: {'average_total_reward': np.float32(0.3211111), 'reward_variance': np.float32(0.035393827), 'max_total_reward': np.float32(0.8), 'min_total_reward': np.float32(0.044444434), 'average_n_step': np.float32(2.9), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 12608} @ step loss: {'critic_loss': np.float64(0.23108032196760178), 'actor_loss': np.float64(-1.334119689464569), 'hyper_actor_loss': np.float64(0.09312610402703285), 'behavior_loss': np.float64(0.738522058725357)}

tensor([ True, False, False, False, False,  True,  True,  True, False,  True,
         True, False,  True,  True, False, False,  True,  True,  True, False,
         True,  True, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False,  True, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False,  True,
        False, False,  True,  True,  True,  True, False, False, False,  True,
        False,  True])
tensor([ True, False,  True,  True, False,  True, False,  True,  True, False,
        False, False, False,  True,  True, False, False, False, False, False,
         True,  True, False, False, False, False, False,  True,  True, False,
         True, False])
tensor([False, False, False, False,  True, False,  True, False, False,  True,
         True, False,  True, False, False,  True,  True,  True,  True, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False,  True,  True, False, False,  True, False, False, False, False,
        False,  True, False,  True,  True, False, False, False, False,  True,
         True,  True,  True,  True, False,  True, False, False,  True,  True,
        False,  True])
tensor([ True, False, False,  True,  True, False, False,  True,  True,  True,
         True, False,  True, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False,  True,  True, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False,  True,  True, False,  True,  True, False, False,
        False,  True,  True, False,  True, False, False, False,  True, False,
        False, False])
tensor([ True,  True,  True, False,  True,  True, False,  True, False,  True,
         True, False,  True, False, False, False, False, False, False,  True,
         True, False, False,  True, False,  True, False, False, False,  True,
         True,  True])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False,  True, False,  True, False,  True,  True, False,  True, False,
        False, False,  True, False, False, False,  True,  True, False, False,
        False, False])
tensor([ True,  True, False, False,  True,  True,  True,  True, False,  True,
        False, False,  True, False,  True, False, False,  True, False,  True,
         True,  True, False, False,  True, False, False, False,  True, False,
        False,  True])
Episode step 340, time diff 0.7846453189849854, total time dif 26.03749990463257)
step: 340 @ episode report: {'average_total_reward': np.float32(0.38000003), 'reward_variance': np.float32(0.1774272), 'max_total_reward': np.float32(1.4333334), 'min_total_reward': np.float32(-0.077777795), 'average_n_step': np.float32(2.8), 'max_n_step': np.float32(4.0), 'min_n_step': np.float32(2.0), 'buffer_size': 12928} @ step loss: {'critic_loss': np.float64(0.2341234043240547), 'actor_loss': np.float64(-1.2609211444854735), 'hyper_actor_loss': np.float64(0.09292568862438202), 'behavior_loss': np.float64(0.7713101267814636)}

tensor([False, False,  True,  True, False, False, False, False,  True, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False,  True, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False,  True,  True,  True, False,  True,
        False,  True, False,  True,  True,  True, False,  True,  True, False,
        False,  True,  True, False,  True, False,  True,  True, False, False,
        False, False])
tensor([ True,  True,  True,  True,  True, False, False, False,  True, False,
        False, False,  True, False, False, False,  True, False, False,  True,
         True, False, False, False, False,  True, False, False,  True,  True,
        False,  True])
tensor([False, False, False, False, False, False,  True,  True, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False,  True,  True,  True,  True, False,  True,  True, False, False,
         True, False])
tensor([ True,  True,  True, False, False,  True, False, False, False,  True,
        False,  True, False,  True,  True,  True,  True,  True, False, False,
        False, False, False, False, False,  True, False, False,  True,  True,
        False, False])
tensor([False, False, False,  True,  True, False, False,  True,  True, False,
        False, False,  True, False, False, False, False, False, False,  True,
         True,  True,  True, False, False, False,  True, False, False, False,
         True,  True])
tensor([ True,  True, False, False, False,  True,  True, False, False, False,
         True,  True, False,  True, False,  True,  True, False,  True, False,
        False, False, False,  True,  True, False, False,  True, False,  True,
        False, False])
tensor([False, False,  True,  True,  True, False, False,  True, False,  True,
        False, False,  True, False,  True, False, False,  True, False, False,
        False, False,  True, False, False,  True,  True, False,  True, False,
        False,  True])
tensor([ True,  True, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False,  True, False, False, False,  True,
         True,  True, False,  True, False, False, False,  True, False, False,
         True, False])
tensor([False, False, False,  True, False,  True,  True,  True, False,  True,
         True,  True,  True, False,  True, False,  True,  True,  True, False,
        False, False,  True, False,  True, False, False, False,  True,  True,
        False,  True])
Episode step 350, time diff 0.7836799621582031, total time dif 26.822145223617554)
step: 350 @ episode report: {'average_total_reward': np.float32(0.26555553), 'reward_variance': np.float32(0.088702455), 'max_total_reward': np.float32(0.92222214), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.6), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 13248} @ step loss: {'critic_loss': np.float64(0.24566114991903304), 'actor_loss': np.float64(-1.1825877249240875), 'hyper_actor_loss': np.float64(0.09281059950590134), 'behavior_loss': np.float64(0.7999669134616851)}

tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True,  True,  True, False, False,
        False, False])
tensor([ True,  True, False,  True, False,  True, False, False,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False, False, False, False,  True,
         True,  True])
tensor([False, False,  True, False,  True, False,  True,  True, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False,  True, False, False,  True,  True,  True, False, False,  True,
         True,  True, False, False, False, False, False,  True, False, False,
         True, False])
tensor([ True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True, False,  True,  True, False, False, False,  True,  True, False,
        False, False,  True,  True,  True,  True, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True,  True,  True, False, False, False,
         True,  True, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False,  True,  True, False,  True,  True, False,  True, False, False,
        False,  True, False,  True, False, False, False,  True,  True,  True,
        False, False,  True,  True,  True, False, False,  True, False,  True,
         True, False])
tensor([ True, False, False,  True, False, False,  True, False,  True, False,
         True, False,  True, False, False, False,  True, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False,  True, False, False,  True,  True, False, False, False,  True,
        False, False, False,  True,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True,  True,
        False, False])
tensor([ True, False,  True,  True, False, False, False,  True,  True, False,
        False,  True,  True, False, False, False, False, False,  True, False,
         True, False,  True, False,  True, False, False, False, False, False,
         True,  True])
Episode step 360, time diff 0.7811157703399658, total time dif 27.605825185775757)
step: 360 @ episode report: {'average_total_reward': np.float32(0.104444444), 'reward_variance': np.float32(0.040375307), 'max_total_reward': np.float32(0.43333328), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.5), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 13568} @ step loss: {'critic_loss': np.float64(0.2303178757429123), 'actor_loss': np.float64(-0.8909304797649383), 'hyper_actor_loss': np.float64(0.09287857264280319), 'behavior_loss': np.float64(0.84677854180336)}

tensor([False,  True, False, False, False,  True,  True, False, False,  True,
         True, False, False,  True, False, False,  True,  True, False,  True,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False,  True,  True, False, False, False,  True, False,
        False,  True,  True, False,  True,  True, False, False,  True, False,
         True,  True,  True, False, False, False,  True,  True,  True,  True,
         True, False])
tensor([False, False,  True, False, False, False, False,  True, False,  True,
        False, False, False,  True, False, False, False,  True, False,  True,
        False, False, False,  True,  True, False, False, False, False, False,
        False,  True])
tensor([ True,  True, False, False,  True,  True,  True, False,  True, False,
         True,  True, False, False, False,  True,  True, False, False, False,
        False, False,  True, False, False,  True,  True, False, False,  True,
         True, False])
tensor([False, False, False,  True, False, False, False,  True, False, False,
        False, False,  True, False,  True, False, False, False,  True,  True,
         True,  True, False,  True, False, False, False,  True,  True, False,
        False, False])
tensor([ True,  True,  True, False, False,  True, False, False, False,  True,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False,  True,  True,  True, False, False,  True,
         True,  True])
tensor([False, False, False,  True,  True, False,  True, False,  True, False,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True, False, False, False,  True,  True, False,
        False, False])
tensor([ True, False,  True, False, False,  True, False,  True, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
         True,  True])
tensor([False,  True, False, False,  True, False, False, False,  True,  True,
         True,  True,  True, False, False,  True,  True, False, False, False,
        False, False,  True,  True,  True,  True, False, False,  True, False,
        False, False])
tensor([False, False,  True,  True, False,  True,  True, False, False, False,
        False, False, False, False,  True, False, False,  True,  True,  True,
         True,  True, False, False, False, False,  True,  True, False,  True,
        False,  True])
Episode step 370, time diff 0.7989470958709717, total time dif 28.386940956115723)
step: 370 @ episode report: {'average_total_reward': np.float32(0.089999974), 'reward_variance': np.float32(0.026776543), 'max_total_reward': np.float32(0.4333333), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.4), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 13888} @ step loss: {'critic_loss': np.float64(0.24074997901916503), 'actor_loss': np.float64(-1.1312293529510498), 'hyper_actor_loss': np.float64(0.09293846562504768), 'behavior_loss': np.float64(0.8550071477890014)}

tensor([ True, False, False, False,  True, False, False,  True, False, False,
         True,  True, False,  True, False,  True, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False,  True, False,  True,  True,
        False, False,  True, False,  True, False,  True,  True, False, False,
         True,  True, False, False,  True,  True,  True,  True,  True, False,
        False, False])
tensor([ True, False,  True,  True, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False,  True,  True,
        False, False,  True, False, False, False, False, False, False,  True,
        False,  True])
tensor([False,  True, False, False,  True, False,  True,  True,  True, False,
        False,  True, False,  True,  True,  True, False,  True, False, False,
        False,  True, False,  True, False,  True, False, False,  True, False,
         True, False])
tensor([False, False,  True,  True, False, False, False, False, False,  True,
         True, False,  True, False, False, False,  True, False, False, False,
         True, False,  True, False,  True, False,  True,  True, False, False,
        False,  True])
tensor([ True, False, False, False, False,  True, False, False,  True, False,
        False,  True, False,  True,  True, False, False, False,  True,  True,
        False,  True, False,  True, False,  True, False, False,  True,  True,
        False, False])
tensor([False,  True,  True, False,  True, False,  True,  True, False,  True,
        False, False,  True, False, False,  True, False,  True, False, False,
        False, False,  True, False,  True, False, False,  True, False, False,
         True,  True])
tensor([ True, False, False,  True, False,  True, False, False,  True, False,
         True,  True, False, False, False, False,  True, False, False, False,
         True,  True, False, False, False,  True,  True, False,  True,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False,  True,  True,  True, False, False,  True,  True,  True,
        False, False,  True,  True,  True, False, False, False, False, False,
         True,  True])
tensor([ True,  True,  True, False, False, False,  True,  True,  True, False,
         True,  True, False, False, False,  True, False, False, False, False,
         True,  True, False, False, False,  True,  True,  True, False, False,
        False, False])
Episode step 380, time diff 0.7998080253601074, total time dif 29.185888051986694)
step: 380 @ episode report: {'average_total_reward': np.float32(0.021111097), 'reward_variance': np.float32(0.023788888), 'max_total_reward': np.float32(0.3111111), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.6), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 14208} @ step loss: {'critic_loss': np.float64(0.2539698451757431), 'actor_loss': np.float64(-1.041708731651306), 'hyper_actor_loss': np.float64(0.09277070537209511), 'behavior_loss': np.float64(0.9100651264190673)}

tensor([False, False, False,  True,  True,  True, False, False, False,  True,
        False, False,  True,  True,  True, False,  True, False,  True,  True,
        False, False,  True, False,  True, False, False, False,  True,  True,
        False,  True])
tensor([ True,  True,  True, False, False, False,  True, False,  True, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False,  True, False,  True, False,  True,  True,  True, False, False,
         True, False])
tensor([False, False, False,  True,  True, False, False,  True, False,  True,
         True, False, False, False, False,  True, False, False, False,  True,
         True, False,  True, False, False, False, False, False, False,  True,
        False,  True])
tensor([ True, False,  True, False, False,  True,  True, False,  True, False,
        False,  True,  True,  True,  True, False,  True,  True,  True, False,
        False,  True, False, False,  True, False,  True, False,  True, False,
        False, False])
tensor([False,  True, False,  True, False, False, False,  True, False,  True,
         True, False, False, False, False,  True, False, False, False,  True,
         True, False,  True,  True, False,  True, False,  True, False, False,
         True,  True])
tensor([ True, False,  True, False,  True, False,  True, False,  True, False,
        False, False,  True,  True,  True, False,  True, False,  True, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False,  True, False,  True, False,  True, False,  True, False, False,
        False,  True, False, False, False,  True, False,  True, False,  True,
        False,  True, False, False,  True,  True, False,  True,  True, False,
        False, False])
tensor([ True, False,  True, False,  True, False, False, False, False,  True,
         True, False,  True,  True,  True, False, False, False,  True, False,
         True, False,  True,  True, False, False,  True, False, False, False,
         True,  True])
tensor([False, False, False,  True, False,  True,  True,  True,  True, False,
        False,  True, False, False, False,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True,  True,  True,
        False, False])
tensor([False,  True,  True, False,  True, False, False, False, False, False,
        False, False, False,  True,  True, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False, False, False,
         True, False])
Episode step 390, time diff 0.7922155857086182, total time dif 29.9856960773468)
step: 390 @ episode report: {'average_total_reward': np.float32(0.10666667), 'reward_variance': np.float32(0.036622234), 'max_total_reward': np.float32(0.43333346), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.6), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 14528} @ step loss: {'critic_loss': np.float64(0.23436219841241837), 'actor_loss': np.float64(-0.9886006355285645), 'hyper_actor_loss': np.float64(0.09278163462877273), 'behavior_loss': np.float64(0.9286268830299378)}

tensor([ True, False, False, False, False, False,  True, False,  True,  True,
         True,  True,  True, False, False,  True,  True, False, False, False,
        False, False, False, False,  True, False, False,  True,  True,  True,
        False,  True])
tensor([False,  True, False,  True,  True,  True, False,  True, False, False,
        False, False, False, False, False, False, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False,  True, False,  True, False,
        False,  True,  True,  True,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([ True,  True, False, False,  True,  True, False, False, False,  True,
         True, False, False, False, False,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False])
tensor([False, False, False,  True, False, False, False,  True,  True, False,
        False,  True,  True, False,  True, False,  True,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True,  True,  True, False,  True, False,  True, False, False,  True,
        False, False, False,  True, False,  True, False, False, False,  True,
        False,  True, False,  True,  True,  True,  True, False, False,  True,
        False,  True])
tensor([False, False, False, False, False,  True, False,  True,  True, False,
         True,  True,  True, False, False, False,  True,  True,  True, False,
         True, False,  True, False, False, False, False, False,  True, False,
         True, False])
tensor([ True, False,  True,  True,  True, False,  True, False, False,  True,
        False, False, False,  True,  True, False, False, False, False,  True,
        False, False, False,  True,  True,  True, False,  True, False,  True,
        False, False])
tensor([False,  True, False, False, False,  True, False,  True,  True, False,
        False,  True,  True, False, False,  True, False,  True,  True, False,
        False,  True,  True, False, False, False,  True, False,  True, False,
         True,  True])
tensor([False, False,  True,  True, False, False, False, False, False,  True,
         True, False, False,  True,  True, False,  True, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 400, time diff 0.7937324047088623, total time dif 30.77791166305542)
step: 400 @ episode report: {'average_total_reward': np.float32(0.06777777), 'reward_variance': np.float32(0.02835679), 'max_total_reward': np.float32(0.31111115), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.5), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 14848} @ step loss: {'critic_loss': np.float64(0.2371976226568222), 'actor_loss': np.float64(-0.9397647619247437), 'hyper_actor_loss': np.float64(0.09258374944329262), 'behavior_loss': np.float64(0.9732142448425293)}

tensor([ True,  True, False, False,  True,  True,  True,  True,  True, False,
        False,  True,  True, False, False,  True, False,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False])
tensor([ True,  True, False,  True,  True,  True, False,  True,  True, False,
         True,  True, False,  True, False,  True, False,  True, False,  True,
         True,  True, False, False, False,  True, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False,  True, False, False, False,  True, False,
        False, False,  True,  True,  True, False,  True, False, False,  True,
         True, False])
tensor([ True,  True,  True,  True, False,  True, False, False,  True,  True,
        False, False, False,  True, False,  True,  True,  True, False,  True,
         True,  True, False, False, False, False, False,  True,  True, False,
        False,  True])
tensor([False, False, False, False,  True, False, False,  True, False, False,
         True,  True, False, False, False, False, False, False,  True, False,
        False, False,  True, False,  True,  True, False, False, False,  True,
         True, False])
tensor([ True, False,  True,  True, False,  True,  True, False,  True, False,
        False, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True, False, False,  True,  True, False, False,
        False,  True])
tensor([False,  True, False, False,  True, False, False,  True, False,  True,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False,  True, False,  True, False, False, False,  True,  True,
         True, False])
tensor([ True, False, False, False, False,  True,  True, False,  True, False,
         True, False, False,  True,  True,  True,  True,  True, False,  True,
         True,  True, False, False, False,  True,  True, False, False, False,
        False,  True])
tensor([False,  True,  True,  True, False, False, False,  True, False,  True,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False,  True,  True, False,
         True, False])
Episode step 410, time diff 0.9581997394561768, total time dif 31.571644067764282)
step: 410 @ episode report: {'average_total_reward': np.float32(-0.026666677), 'reward_variance': np.float32(0.010474074), 'max_total_reward': np.float32(0.18888888), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.1), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 15168} @ step loss: {'critic_loss': np.float64(0.24520318508148192), 'actor_loss': np.float64(-0.8352498412132263), 'hyper_actor_loss': np.float64(0.09207332655787467), 'behavior_loss': np.float64(0.9586745440959931)}

tensor([ True, False, False, False,  True,  True,  True, False,  True, False,
         True, False, False,  True, False, False, False,  True,  True,  True,
         True,  True,  True, False, False, False, False, False, False,  True,
        False,  True])
tensor([False,  True,  True,  True, False, False, False, False, False,  True,
        False,  True,  True, False,  True,  True,  True, False, False, False,
        False, False, False, False,  True,  True,  True,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
         True,  True, False,  True, False, False, False, False,  True,  True,
         True,  True])
tensor([False, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False,  True, False,  True,  True, False,  True, False,
        False, False,  True, False,  True,  True,  True,  True, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False,  True, False, False,
        False, False,  True, False,  True, False, False, False, False,  True,
         True,  True, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False,  True, False, False,  True,  True,  True, False,
        False, False,  True, False,  True, False,  True, False,  True,  True,
         True, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False,  True, False,  True,  True, False, False, False, False,
        False,  True, False,  True, False,  True, False,  True, False, False,
        False,  True])
tensor([ True, False,  True, False,  True,  True,  True, False,  True,  True,
         True, False, False, False, False, False, False, False,  True,  True,
         True, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False,  True, False, False,
        False,  True,  True,  True,  True,  True,  True,  True, False, False,
        False,  True, False,  True,  True, False, False,  True,  True,  True,
         True,  True])
tensor([ True, False,  True, False, False,  True,  True, False,  True,  True,
         True, False, False, False, False, False, False, False,  True,  True,
         True, False,  True, False, False,  True,  True, False, False, False,
        False, False])
Episode step 420, time diff 0.8334860801696777, total time dif 32.52984380722046)
step: 420 @ episode report: {'average_total_reward': np.float32(-0.0388889), 'reward_variance': np.float32(0.032080248), 'max_total_reward': np.float32(0.4333333), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.1), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 15488} @ step loss: {'critic_loss': np.float64(0.22363486289978027), 'actor_loss': np.float64(-0.8686359226703644), 'hyper_actor_loss': np.float64(0.09185541793704033), 'behavior_loss': np.float64(1.0725706458091735)}

tensor([False,  True, False,  True,  True, False, False,  True, False, False,
        False,  True,  True,  True,  True,  True,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True,  True])
tensor([ True, False,  True, False, False,  True,  True, False, False,  True,
         True, False, False, False, False, False, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False, False])
tensor([False,  True, False, False,  True, False, False, False,  True, False,
        False,  True,  True,  True, False,  True,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True,  True])
tensor([ True, False, False,  True, False,  True,  True,  True, False, False,
         True, False, False, False,  True, False, False,  True, False,  True,
         True,  True,  True,  True, False,  True, False, False,  True,  True,
        False, False])
tensor([False,  True,  True, False,  True, False, False, False,  True,  True,
        False,  True,  True,  True, False,  True,  True, False,  True, False,
        False, False, False, False,  True, False,  True,  True, False, False,
         True, False])
tensor([ True, False, False, False, False,  True, False,  True, False, False,
         True, False, False, False,  True, False, False,  True, False,  True,
        False,  True, False,  True, False,  True, False, False,  True, False,
        False,  True])
tensor([False, False,  True,  True,  True, False,  True, False,  True,  True,
        False, False,  True,  True, False,  True,  True, False,  True, False,
         True, False,  True, False,  True, False,  True,  True, False,  True,
         True, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
         True,  True, False, False,  True, False, False,  True, False,  True,
        False,  True, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([ True, False,  True,  True,  True,  True,  True, False,  True,  True,
        False, False,  True, False, False,  True,  True, False,  True, False,
         True, False, False,  True,  True, False, False,  True,  True, False,
         True, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
         True,  True, False,  True,  True, False, False,  True, False,  True,
        False, False,  True, False, False,  True,  True, False, False,  True,
        False,  True])
Episode step 430, time diff 0.7980728149414062, total time dif 33.36332988739014)
step: 430 @ episode report: {'average_total_reward': np.float32(-0.012222238), 'reward_variance': np.float32(0.017393827), 'max_total_reward': np.float32(0.3111111), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.2), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 15808} @ step loss: {'critic_loss': np.float64(0.20266690850257874), 'actor_loss': np.float64(-0.851690948009491), 'hyper_actor_loss': np.float64(0.09104427024722099), 'behavior_loss': np.float64(1.1125411629676818)}

tensor([ True, False, False,  True,  True,  True, False, False, False,  True,
        False, False,  True, False, False,  True,  True, False,  True, False,
         True,  True, False, False,  True, False, False,  True,  True, False,
         True, False])
tensor([False,  True,  True, False, False, False,  True,  True,  True, False,
         True,  True, False, False, False, False, False,  True, False,  True,
        False, False, False,  True, False, False,  True, False, False,  True,
        False,  True])
tensor([ True, False, False,  True, False,  True, False, False, False,  True,
        False, False,  True,  True,  True,  True,  True, False,  True, False,
        False,  True,  True, False, False,  True, False,  True,  True, False,
         True, False])
tensor([False,  True,  True, False,  True, False,  True,  True,  True, False,
         True, False, False, False, False, False, False,  True, False, False,
         True, False, False,  True,  True, False,  True, False, False,  True,
        False,  True])
tensor([ True, False, False,  True, False,  True, False, False, False,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True, False, False,  True, False,  True,  True, False,
         True, False])
tensor([False,  True,  True, False, False, False,  True,  True,  True, False,
         True, False, False, False, False, False, False,  True, False, False,
         True, False, False, False,  True, False,  True, False, False,  True,
        False,  True])
tensor([ True, False, False,  True,  True,  True, False, False, False,  True,
        False,  True,  True, False,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True, False,  True, False,  True,  True, False,
         True, False])
tensor([False,  True,  True, False, False, False,  True,  True,  True, False,
         True, False, False,  True, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False,  True,
        False,  True])
tensor([ True, False, False,  True,  True,  True, False, False, False,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True, False, False, False,  True,  True,  True,  True, False,
         True, False])
tensor([False,  True,  True, False, False, False,  True,  True,  True, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False,  True,  True,  True, False, False, False, False,  True,
        False,  True])
Episode step 440, time diff 0.8137607574462891, total time dif 34.16140270233154)
step: 440 @ episode report: {'average_total_reward': np.float32(-0.06555557), 'reward_variance': np.float32(0.0043320986), 'max_total_reward': np.float32(0.044444434), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 16128} @ step loss: {'critic_loss': np.float64(0.2086652174592018), 'actor_loss': np.float64(-0.9876028895378113), 'hyper_actor_loss': np.float64(0.08995705768465996), 'behavior_loss': np.float64(1.1933363914489745)}

tensor([ True, False, False,  True,  True,  True, False, False, False,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True, False,
         True, False, False, False, False,  True,  True,  True,  True, False,
         True, False])
tensor([False,  True,  True, False, False, False,  True,  True,  True, False,
         True, False, False,  True, False, False, False, False, False,  True,
        False,  True,  True,  True,  True, False, False, False, False, False,
        False,  True])
tensor([ True, False, False,  True, False,  True, False, False, False,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True, False,
         True, False, False, False, False,  True,  True,  True,  True,  True,
         True, False])
tensor([False,  True,  True, False,  True, False,  True,  True,  True, False,
         True, False, False,  True, False, False, False, False, False,  True,
        False,  True,  True, False,  True, False, False, False, False, False,
        False,  True])
tensor([ True, False, False,  True, False,  True, False, False, False,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True, False,
         True, False, False,  True, False,  True,  True,  True,  True,  True,
         True, False])
tensor([False, False,  True, False,  True, False,  True,  True,  True, False,
         True, False, False,  True, False, False, False, False, False,  True,
        False,  True,  True, False,  True, False, False, False, False, False,
        False,  True])
tensor([ True,  True, False,  True, False,  True, False, False, False,  True,
        False,  True,  True, False, False,  True, False,  True,  True, False,
         True, False, False,  True, False, False,  True, False,  True,  True,
         True, False])
tensor([False, False,  True, False,  True, False,  True,  True,  True, False,
         True, False, False,  True,  True, False,  True, False, False,  True,
        False,  True,  True, False,  True,  True, False,  True, False, False,
        False,  True])
tensor([False, False, False,  True, False,  True, False, False, False,  True,
        False,  True,  True, False, False,  True, False,  True,  True, False,
         True, False, False,  True, False, False, False, False,  True,  True,
         True, False])
tensor([ True,  True,  True, False,  True, False,  True,  True,  True, False,
        False, False, False,  True,  True, False,  True, False, False,  True,
        False,  True,  True, False,  True, False,  True,  True, False, False,
        False,  True])
Episode step 450, time diff 0.872356653213501, total time dif 34.97516345977783)
step: 450 @ episode report: {'average_total_reward': np.float32(-0.10222223), 'reward_variance': np.float32(0.008365434), 'max_total_reward': np.float32(0.044444446), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 16448} @ step loss: {'critic_loss': np.float64(0.16946592330932617), 'actor_loss': np.float64(-0.9209574103355408), 'hyper_actor_loss': np.float64(0.0890158049762249), 'behavior_loss': np.float64(1.2707332253456116)}

tensor([False, False, False,  True, False,  True, False, False, False,  True,
         True,  True,  True, False, False,  True, False,  True,  True, False,
        False, False, False,  True, False,  True, False, False, False,  True,
         True, False])
tensor([ True,  True,  True, False,  True, False,  True,  True,  True, False,
        False, False, False,  True,  True, False,  True, False, False,  True,
         True,  True,  True, False,  True, False,  True,  True,  True, False,
        False,  True])
tensor([False, False, False,  True, False,  True, False, False, False,  True,
        False,  True,  True, False, False,  True, False,  True,  True, False,
        False, False, False,  True, False,  True, False, False, False,  True,
         True, False])
tensor([ True,  True,  True, False,  True, False,  True,  True,  True, False,
         True, False, False,  True,  True, False,  True, False, False,  True,
         True,  True, False, False, False, False,  True,  True,  True, False,
        False,  True])
tensor([False, False, False,  True, False,  True, False, False, False,  True,
        False,  True,  True, False, False,  True, False,  True,  True, False,
        False, False,  True,  True,  True,  True, False, False, False,  True,
        False, False])
tensor([ True,  True,  True, False,  True, False,  True,  True, False, False,
         True, False, False,  True,  True, False,  True, False, False,  True,
         True,  True, False, False, False, False, False,  True,  True, False,
         True,  True])
tensor([False, False, False,  True, False,  True, False, False,  True,  True,
        False,  True,  True, False, False,  True, False,  True,  True, False,
        False, False,  True,  True,  True,  True,  True, False, False,  True,
        False, False])
tensor([False,  True,  True, False,  True, False,  True, False, False, False,
         True, False, False, False,  True, False,  True, False, False,  True,
         True,  True, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([ True, False, False,  True, False,  True, False,  True,  True,  True,
        False,  True,  True,  True, False,  True, False,  True,  True, False,
        False, False,  True,  True,  True, False,  True, False, False,  True,
         True,  True])
tensor([False,  True,  True, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False,  True,
        False,  True, False, False, False,  True, False,  True,  True, False,
        False, False])
Episode step 460, time diff 0.7903790473937988, total time dif 35.84752011299133)
step: 460 @ episode report: {'average_total_reward': np.float32(-0.100000024), 'reward_variance': np.float32(0.018567901), 'max_total_reward': np.float32(0.18888888), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.1), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 16768} @ step loss: {'critic_loss': np.float64(0.1759785979986191), 'actor_loss': np.float64(-0.952558958530426), 'hyper_actor_loss': np.float64(0.0881025105714798), 'behavior_loss': np.float64(1.401579487323761)}

tensor([ True, False, False,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True, False,
         True, False,  True,  True,  True, False,  True, False, False,  True,
        False,  True])
tensor([False,  True,  True, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False,  True, False, False, False,  True, False,  True,  True, False,
         True, False])
tensor([ True, False, False,  True, False, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False, False,  True,  True, False,  True, False, False,  True,
        False, False])
tensor([False,  True,  True, False,  True,  True,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False,  True,  True, False, False,  True, False,  True,  True, False,
         True,  True])
tensor([ True, False, False,  True, False, False, False,  True,  True,  True,
         True,  True, False,  True,  True,  True, False, False,  True, False,
         True, False, False,  True,  True, False,  True, False, False,  True,
        False, False])
tensor([False,  True,  True, False,  True, False,  True, False, False, False,
        False, False,  True, False, False, False,  True,  True, False,  True,
        False,  True,  True, False, False,  True, False,  True,  True, False,
         True,  True])
tensor([ True, False, False,  True, False,  True, False,  True,  True, False,
         True,  True, False,  True,  True,  True, False, False,  True, False,
         True, False, False,  True, False, False,  True, False, False,  True,
        False, False])
tensor([False,  True,  True, False,  True, False,  True, False, False,  True,
        False, False, False, False, False, False,  True,  True, False,  True,
        False,  True,  True, False,  True,  True, False,  True,  True, False,
         True,  True])
tensor([ True, False, False,  True, False,  True, False,  True,  True, False,
         True,  True,  True,  True,  True, False, False, False,  True, False,
         True, False, False,  True, False, False,  True, False, False,  True,
        False, False])
tensor([False,  True,  True, False,  True, False,  True, False, False,  True,
        False, False, False, False, False,  True,  True,  True, False,  True,
        False,  True,  True, False,  True,  True, False, False,  True, False,
         True,  True])
Episode step 470, time diff 0.8302953243255615, total time dif 36.63789916038513)
step: 470 @ episode report: {'average_total_reward': np.float32(-0.110000014), 'reward_variance': np.float32(0.010603704), 'max_total_reward': np.float32(0.06666665), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.2), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 17088} @ step loss: {'critic_loss': np.float64(0.18368649035692214), 'actor_loss': np.float64(-0.8743170738220215), 'hyper_actor_loss': np.float64(0.08710504695773125), 'behavior_loss': np.float64(1.558937406539917)}

tensor([ True, False, False, False, False, False, False,  True,  True, False,
        False,  True,  True, False,  True, False, False, False, False, False,
         True, False, False,  True, False, False,  True,  True, False,  True,
        False, False])
tensor([False,  True, False,  True,  True,  True,  True, False, False,  True,
         True, False, False,  True, False,  True, False,  True,  True,  True,
        False,  True,  True, False,  True,  True, False, False,  True, False,
         True,  True])
tensor([ True, False,  True, False, False, False, False,  True,  True, False,
        False,  True,  True, False,  True, False,  True, False, False, False,
         True, False, False,  True, False, False,  True,  True, False,  True,
        False, False])
tensor([False,  True, False,  True, False,  True,  True, False, False,  True,
         True, False, False,  True, False, False, False,  True,  True,  True,
        False,  True,  True, False,  True,  True, False, False,  True, False,
         True,  True])
tensor([ True, False,  True, False,  True, False, False,  True,  True, False,
        False, False,  True, False,  True,  True,  True, False, False, False,
         True, False, False,  True, False, False,  True,  True, False,  True,
        False, False])
tensor([False,  True, False,  True, False,  True,  True, False, False,  True,
         True,  True, False,  True, False, False, False,  True,  True,  True,
        False,  True,  True, False,  True,  True, False, False,  True, False,
         True,  True])
tensor([ True, False,  True, False,  True, False, False,  True,  True, False,
        False, False,  True, False,  True,  True, False, False, False, False,
         True, False, False, False, False, False,  True,  True, False,  True,
        False, False])
tensor([False,  True, False,  True, False,  True,  True, False, False,  True,
         True,  True, False,  True, False, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False, False,  True, False,
         True, False])
tensor([ True, False,  True, False,  True, False, False, False, False, False,
        False, False,  True, False,  True,  True, False, False, False, False,
         True, False, False, False, False, False,  True,  True, False,  True,
        False,  True])
tensor([False,  True, False,  True, False,  True,  True,  True,  True, False,
         True,  True, False, False, False, False,  True,  True,  True,  True,
        False,  True, False, False,  True,  True, False, False,  True, False,
         True, False])
Episode step 480, time diff 0.8318889141082764, total time dif 37.46819448471069)
step: 480 @ episode report: {'average_total_reward': np.float32(-0.08777778), 'reward_variance': np.float32(0.03648025), 'max_total_reward': np.float32(0.43333334), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.1), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 17408} @ step loss: {'critic_loss': np.float64(0.16561299711465835), 'actor_loss': np.float64(-0.7738505661487579), 'hyper_actor_loss': np.float64(0.08625458627939224), 'behavior_loss': np.float64(1.5567315101623536)}

tensor([ True, False,  True, False,  True, False, False, False, False,  True,
        False, False,  True,  True, False,  True, False, False, False, False,
         True, False,  True,  True, False, False,  True,  True, False,  True,
        False,  True])
tensor([False,  True, False, False, False,  True,  True, False,  True, False,
         True,  True, False, False,  True, False,  True,  True,  True,  True,
        False,  True, False, False, False, False, False, False,  True, False,
         True, False])
tensor([ True, False,  True,  True,  True, False, False,  True, False,  True,
        False, False,  True,  True, False,  True, False, False, False, False,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True])
tensor([False,  True, False, False, False,  True,  True, False,  True, False,
         True,  True, False, False,  True, False,  True,  True,  True,  True,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False,  True,  True,  True, False, False,  True, False,  True,
        False, False,  True,  True, False,  True, False, False, False, False,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True])
tensor([False,  True, False, False, False,  True,  True, False, False, False,
         True,  True, False, False,  True, False,  True,  True,  True,  True,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False,  True,  True,  True, False, False,  True,  True, False,
        False, False,  True,  True, False,  True, False, False, False, False,
         True, False,  True, False,  True,  True,  True,  True, False,  True,
        False,  True])
tensor([False,  True, False, False, False,  True,  True, False, False,  True,
         True,  True, False, False, False, False,  True,  True,  True,  True,
        False,  True, False,  True, False, False, False, False,  True, False,
         True, False])
tensor([ True, False,  True,  True,  True, False, False,  True,  True, False,
        False, False,  True,  True,  True,  True, False, False, False, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
        False,  True])
tensor([False,  True, False, False, False,  True,  True, False, False,  True,
        False,  True, False, False, False, False,  True,  True,  True, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
         True, False])
Episode step 490, time diff 0.8155162334442139, total time dif 38.30008339881897)
step: 490 @ episode report: {'average_total_reward': np.float32(-0.06333335), 'reward_variance': np.float32(0.007853086), 'max_total_reward': np.float32(0.06666663), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.1), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 17728} @ step loss: {'critic_loss': np.float64(0.14335243105888368), 'actor_loss': np.float64(-0.6740314066410065), 'hyper_actor_loss': np.float64(0.0855521209537983), 'behavior_loss': np.float64(1.6644769430160522)}

tensor([ True, False,  True,  True,  True, False, False,  True,  True, False,
         True, False,  True, False,  True,  True, False, False, False,  True,
         True, False,  True, False,  True, False, False,  True, False, False,
        False,  True])
tensor([False,  True, False, False, False,  True,  True, False, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True, False,
        False,  True, False,  True, False,  True,  True, False,  True,  True,
         True, False])
tensor([ True, False,  True,  True, False, False, False,  True, False, False,
         True, False, False, False,  True,  True, False, False, False,  True,
         True, False,  True, False,  True, False, False,  True, False, False,
        False,  True])
tensor([False,  True, False, False,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True, False, False, False,  True,  True, False,
        False,  True, False,  True, False,  True,  True, False,  True,  True,
        False, False])
tensor([ True, False,  True,  True, False, False, False,  True, False, False,
         True, False, False, False,  True, False,  True, False, False,  True,
         True, False,  True, False,  True, False, False,  True, False, False,
         True,  True])
tensor([False,  True, False, False,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True, False,  True, False,  True,  True, False,
        False,  True, False,  True, False,  True,  True, False,  True,  True,
        False, False])
tensor([ True, False,  True,  True, False, False, False,  True, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
         True, False,  True, False,  True, False, False,  True, False, False,
         True,  True])
tensor([False,  True, False, False,  True,  True, False, False,  True,  True,
        False, False,  True,  True, False, False, False,  True,  True,  True,
        False,  True, False,  True, False,  True,  True, False,  True,  True,
        False, False])
tensor([ True, False,  True,  True, False, False,  True,  True, False, False,
         True,  True, False, False,  True,  True,  True, False, False, False,
         True, False,  True, False,  True, False, False,  True, False, False,
        False,  True])
tensor([False,  True, False, False,  True,  True, False, False,  True,  True,
        False, False,  True,  True, False, False, False,  True,  True,  True,
        False,  True, False,  True, False,  True,  True, False,  True,  True,
         True, False])
Episode step 500, time diff 0.7913742065429688, total time dif 39.115599632263184)
step: 500 @ episode report: {'average_total_reward': np.float32(-0.10000001), 'reward_variance': np.float32(0.0120493835), 'max_total_reward': np.float32(0.06666665), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.1), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 18048} @ step loss: {'critic_loss': np.float64(0.1333935186266899), 'actor_loss': np.float64(-0.7030419111251831), 'hyper_actor_loss': np.float64(0.08523212969303132), 'behavior_loss': np.float64(1.707631027698517)}

tensor([ True, False,  True,  True, False, False, False,  True, False, False,
        False,  True, False, False,  True,  True,  True, False, False, False,
         True, False,  True, False,  True, False, False,  True, False, False,
        False,  True])
tensor([False,  True, False, False,  True,  True,  True, False,  True,  True,
         True, False,  True,  True, False, False, False,  True,  True,  True,
        False,  True, False,  True, False,  True,  True, False,  True,  True,
         True, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False,  True,  True,  True, False, False, False,
        False, False,  True, False,  True, False, False,  True, False, False,
        False,  True])
tensor([False,  True,  True,  True,  True, False,  True, False,  True,  True,
         True, False,  True,  True, False, False, False,  True,  True,  True,
         True,  True, False,  True, False,  True,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False,  True, False,  True, False, False,
        False,  True, False, False,  True, False,  True, False, False, False,
        False, False,  True, False,  True, False, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True, False,  True, False,  True, False,  True,  True,
         True, False,  True,  True, False,  True, False,  True, False,  True,
         True,  True, False,  True, False,  True,  True, False,  True, False,
        False, False])
tensor([ True, False, False,  True, False, False, False,  True, False, False,
        False,  True, False, False,  True, False,  True, False,  True, False,
        False, False,  True, False,  True, False, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True, False, False,  True,  True, False,  True,  True,
         True, False,  True,  True, False,  True, False,  True, False,  True,
         True,  True, False,  True, False,  True, False, False,  True, False,
        False, False])
tensor([ True, False, False,  True,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False,  True, False,  True,  True, False,  True,
         True,  True])
tensor([False,  True,  True, False, False,  True,  True, False,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True, False,  True, False,  True, False, False,  True, False,
        False, False])
Episode step 510, time diff 0.8097789287567139, total time dif 39.90697383880615)
step: 510 @ episode report: {'average_total_reward': np.float32(-0.10222224), 'reward_variance': np.float32(0.008365432), 'max_total_reward': np.float32(0.044444412), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 18368} @ step loss: {'critic_loss': np.float64(0.12825207263231278), 'actor_loss': np.float64(-0.7068509578704834), 'hyper_actor_loss': np.float64(0.08491379991173745), 'behavior_loss': np.float64(1.7335684895515442)}

tensor([ True, False, False,  True,  True, False, False,  True, False, False,
         True, False, False,  True, False, False, False, False,  True, False,
        False, False,  True, False,  True, False,  True,  True, False,  True,
         True,  True])
tensor([False,  True,  True, False, False,  True,  True, False,  True, False,
        False,  True,  True, False, False,  True,  True,  True, False,  True,
         True,  True, False,  True, False,  True, False, False,  True, False,
        False, False])
tensor([ True, False, False, False,  True, False, False,  True, False,  True,
         True, False, False,  True,  True, False, False, False,  True, False,
        False, False,  True, False,  True, False,  True,  True, False,  True,
        False,  True])
tensor([False,  True,  True,  True, False,  True,  True, False,  True, False,
        False,  True,  True, False, False,  True,  True,  True, False,  True,
         True,  True, False,  True, False,  True, False, False, False, False,
         True, False])
tensor([ True, False, False, False,  True, False, False,  True, False,  True,
         True, False, False,  True,  True, False, False, False,  True, False,
        False, False,  True, False,  True, False,  True, False,  True,  True,
        False,  True])
tensor([False,  True, False,  True, False,  True,  True, False,  True, False,
        False, False,  True, False, False,  True,  True,  True, False,  True,
         True,  True, False, False, False,  True, False,  True, False, False,
         True, False])
tensor([False, False,  True, False,  True, False, False,  True, False,  True,
         True,  True, False,  True,  True, False, False, False,  True, False,
        False, False,  True,  True,  True, False, False, False,  True,  True,
        False,  True])
tensor([ True,  True, False,  True, False,  True,  True, False,  True, False,
        False, False,  True, False, False,  True,  True,  True, False,  True,
         True,  True, False, False, False,  True,  True,  True, False, False,
         True, False])
tensor([False, False,  True, False,  True, False, False,  True, False,  True,
         True,  True, False,  True, False, False, False, False,  True, False,
        False, False,  True,  True,  True, False, False, False,  True,  True,
        False,  True])
tensor([ True,  True, False,  True, False,  True, False, False, False, False,
        False, False,  True, False,  True,  True,  True,  True, False,  True,
         True,  True, False, False, False,  True,  True,  True, False, False,
         True, False])
Episode step 520, time diff 0.794525146484375, total time dif 40.716752767562866)
step: 520 @ episode report: {'average_total_reward': np.float32(-0.08777779), 'reward_variance': np.float32(0.023986418), 'max_total_reward': np.float32(0.3111111), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.1), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 18688} @ step loss: {'critic_loss': np.float64(0.12281357944011688), 'actor_loss': np.float64(-0.5347188413143158), 'hyper_actor_loss': np.float64(0.08441308736801148), 'behavior_loss': np.float64(1.7563526272773742)}

tensor([False, False,  True, False,  True, False,  True,  True,  True,  True,
         True,  True, False,  True, False, False, False, False,  True, False,
        False, False,  True,  True,  True, False, False, False,  True,  True,
        False, False])
tensor([ True,  True, False,  True, False,  True, False, False, False, False,
        False, False,  True, False, False,  True,  True,  True, False,  True,
        False,  True, False, False, False,  True,  True,  True, False, False,
         True,  True])
tensor([False, False,  True, False,  True, False,  True,  True,  True,  True,
         True, False, False,  True,  True, False, False, False,  True, False,
         True, False, False,  True, False, False, False, False,  True,  True,
        False, False])
tensor([ True,  True, False,  True, False,  True, False, False, False, False,
        False,  True, False, False, False,  True,  True,  True, False, False,
        False,  True,  True, False,  True,  True,  True,  True, False, False,
         True,  True])
tensor([False, False,  True, False,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True, False, False, False,  True,  True,
         True, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([ True,  True, False,  True, False,  True, False, False, False, False,
        False,  True, False, False, False,  True,  True,  True, False, False,
        False,  True,  True, False,  True,  True, False, False, False,  True,
         True,  True])
tensor([False, False,  True, False,  True, False,  True,  True,  True,  True,
        False, False, False, False,  True, False, False, False,  True,  True,
         True, False, False,  True, False, False,  True,  True,  True, False,
        False, False])
tensor([ True,  True, False,  True, False,  True, False, False, False, False,
         True,  True,  True,  True, False,  True,  True,  True, False, False,
        False,  True, False, False, False,  True, False, False, False,  True,
        False,  True])
tensor([False, False, False, False,  True, False,  True,  True,  True,  True,
        False, False, False, False,  True, False, False, False, False,  True,
         True, False,  True,  True,  True, False,  True,  True,  True, False,
         True, False])
tensor([ True,  True,  True,  True, False,  True, False, False, False, False,
         True,  True,  True,  True, False,  True,  True, False,  True, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False,  True])
Episode step 530, time diff 0.814638614654541, total time dif 41.51127791404724)
step: 530 @ episode report: {'average_total_reward': np.float32(-0.07333334), 'reward_variance': np.float32(0.02017778), 'max_total_reward': np.float32(0.18888889), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.2), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 19008} @ step loss: {'critic_loss': np.float64(0.11823455542325974), 'actor_loss': np.float64(-0.5198300510644913), 'hyper_actor_loss': np.float64(0.08396226465702057), 'behavior_loss': np.float64(1.7906309723854066)}

tensor([False, False, False, False,  True, False,  True, False, False,  True,
        False, False, False, False,  True, False, False,  True, False,  True,
         True, False,  True,  True,  True,  True, False,  True,  True, False,
         True, False])
tensor([ True, False,  True,  True, False,  True, False,  True,  True, False,
        False, False,  True,  True, False,  True,  True, False,  True, False,
        False,  True, False, False, False, False,  True, False, False,  True,
        False,  True])
tensor([False,  True, False, False,  True, False,  True, False, False,  True,
         True,  True, False, False,  True, False, False,  True, False,  True,
         True, False,  True,  True,  True, False, False,  True, False, False,
         True, False])
tensor([ True, False,  True,  True, False,  True, False,  True,  True, False,
        False, False,  True,  True, False,  True,  True, False,  True, False,
        False,  True, False, False, False,  True,  True, False,  True,  True,
        False,  True])
tensor([False,  True, False, False,  True, False,  True, False, False,  True,
         True, False, False, False,  True, False, False,  True, False,  True,
         True, False, False,  True,  True, False, False,  True, False, False,
         True, False])
tensor([ True, False,  True,  True, False,  True, False,  True,  True, False,
        False,  True,  True,  True, False,  True, False, False,  True, False,
        False,  True,  True, False, False,  True,  True, False,  True,  True,
        False,  True])
tensor([False,  True, False, False,  True, False,  True, False, False,  True,
         True, False, False, False, False, False,  True,  True, False,  True,
         True, False, False,  True,  True, False, False,  True, False, False,
         True, False])
tensor([ True, False, False,  True, False,  True, False,  True,  True, False,
        False,  True,  True,  True,  True,  True, False, False,  True, False,
        False,  True,  True, False, False,  True,  True, False,  True,  True,
        False,  True])
tensor([False,  True,  True, False,  True, False, False, False, False,  True,
         True, False, False, False, False, False,  True,  True, False,  True,
         True, False, False,  True,  True, False, False,  True, False, False,
         True, False])
tensor([False, False, False,  True, False,  True,  True,  True,  True, False,
        False,  True, False, False,  True, False, False, False,  True, False,
        False,  True,  True, False, False,  True, False, False,  True,  True,
        False,  True])
Episode step 540, time diff 0.8051908016204834, total time dif 42.32591652870178)
step: 540 @ episode report: {'average_total_reward': np.float32(-0.1388889), 'reward_variance': np.float32(0.006722222), 'max_total_reward': np.float32(0.044444412), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 19328} @ step loss: {'critic_loss': np.float64(0.10558036416769027), 'actor_loss': np.float64(-0.4239001452922821), 'hyper_actor_loss': np.float64(0.0836810365319252), 'behavior_loss': np.float64(1.8766858220100402)}

tensor([ True,  True,  True, False,  True, False, False, False, False,  True,
         True, False,  True,  True, False,  True, False,  True, False,  True,
         True, False, False,  True,  True, False,  True,  True, False, False,
         True, False])
tensor([False, False, False,  True, False,  True, False, False,  True, False,
        False,  True, False, False,  True, False,  True, False,  True, False,
        False,  True,  True, False, False,  True, False, False,  True,  True,
        False,  True])
tensor([ True,  True,  True, False, False, False,  True,  True, False,  True,
         True, False,  True,  True, False,  True, False,  True, False,  True,
        False, False, False,  True,  True, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False,  True, False,
        False,  True, False, False,  True, False,  True, False,  True, False,
         True,  True,  True, False, False,  True, False, False, False,  True,
         True,  True])
tensor([ True,  True,  True,  True, False, False,  True,  True, False,  True,
         True, False,  True,  True, False,  True, False,  True, False,  True,
        False, False, False,  True,  True, False,  True,  True,  True, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False,  True, False,
        False,  True, False, False,  True, False, False, False,  True, False,
         True,  True,  True, False, False,  True, False, False, False,  True,
         True,  True])
tensor([ True,  True,  True,  True, False, False,  True,  True, False,  True,
         True, False,  True,  True, False, False,  True,  True, False,  True,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False,  True, False, False,  True,  True, False, False,  True, False,
         True,  True,  True, False,  True,  True, False,  True, False,  True,
        False,  True])
tensor([False, False,  True,  True,  True, False,  True,  True, False,  True,
         True, False,  True,  True, False, False, False,  True, False,  True,
        False, False, False,  True, False, False,  True, False,  True, False,
         True, False])
tensor([ True,  True, False, False, False,  True, False, False,  True, False,
        False,  True, False, False,  True,  True,  True, False,  True, False,
         True,  True, False, False,  True,  True, False,  True, False, False,
        False,  True])
Episode step 550, time diff 0.7975459098815918, total time dif 43.131107330322266)
step: 550 @ episode report: {'average_total_reward': np.float32(-0.03666668), 'reward_variance': np.float32(0.02298889), 'max_total_reward': np.float32(0.3111111), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.2), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 19648} @ step loss: {'critic_loss': np.float64(0.0955867700278759), 'actor_loss': np.float64(-0.4176755130290985), 'hyper_actor_loss': np.float64(0.08302351906895637), 'behavior_loss': np.float64(1.8719105958938598)}

tensor([False, False,  True,  True,  True, False,  True,  True, False,  True,
         True, False,  True,  True, False, False, False,  True, False,  True,
        False, False,  True,  True, False, False,  True, False,  True,  True,
         True, False])
tensor([ True,  True, False, False, False,  True, False, False,  True, False,
        False,  True, False, False, False,  True, False, False,  True, False,
         True,  True, False, False,  True,  True, False,  True, False, False,
        False,  True])
tensor([False, False,  True,  True,  True, False,  True,  True, False,  True,
         True, False,  True,  True,  True, False,  True,  True, False,  True,
        False, False,  True,  True, False, False,  True, False, False, False,
         True, False])
tensor([ True,  True, False, False, False,  True, False, False,  True, False,
        False,  True, False, False, False,  True, False, False, False, False,
         True,  True, False, False,  True,  True, False,  True,  True,  True,
        False,  True])
tensor([False, False,  True, False, False, False,  True,  True, False,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
        False, False,  True,  True, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False,  True,  True,  True, False, False,  True, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False,  True, False, False,  True,  True, False,  True,  True,  True,
         True,  True])
tensor([ True, False,  True, False, False, False,  True,  True, False,  True,
        False, False,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False,  True, False, False, False,  True, False,
         True,  True, False, False, False,  True, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False,  True,
         True,  True])
tensor([ True, False,  True,  True, False,  True,  True,  True, False,  True,
        False, False,  True, False,  True, False,  True,  True,  True,  True,
        False, False,  True, False, False,  True,  True,  True,  True, False,
        False, False])
tensor([False,  True, False, False,  True, False, False, False,  True, False,
        False, False, False,  True, False,  True, False, False, False, False,
         True,  True, False,  True,  True, False, False, False, False,  True,
        False,  True])
Episode step 560, time diff 0.808809757232666, total time dif 43.92865324020386)
step: 560 @ episode report: {'average_total_reward': np.float32(-0.051111124), 'reward_variance': np.float32(0.005856789), 'max_total_reward': np.float32(0.06666663), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.1), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 19968} @ step loss: {'critic_loss': np.float64(0.09012364968657494), 'actor_loss': np.float64(-0.3777307659387589), 'hyper_actor_loss': np.float64(0.08242464140057564), 'behavior_loss': np.float64(1.8196155428886414)}

tensor([ True, False,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True, False,  True, False,  True, False,  True,  True,
        False, False,  True, False, False,  True,  True,  True,  True, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False,  True, False,  True, False, False,
         True,  True, False,  True,  True, False, False, False, False,  True,
        False,  True])
tensor([ True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False, False, False,  True, False,  True, False,
        False, False,  True, False, False,  True, False,  True, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True,  True, False,  True, False,  True,
         True,  True, False,  True,  True, False,  True, False,  True,  True,
        False,  True])
tensor([ True, False,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True, False, False, False, False, False,  True, False,
        False, False,  True, False, False,  True, False,  True, False, False,
         True, False])
tensor([False,  True, False, False, False, False,  True, False, False, False,
         True, False, False,  True, False, False,  True,  True, False,  True,
         True,  True, False,  True,  True, False,  True, False,  True, False,
        False,  True])
tensor([ True, False,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True, False,  True,  True, False, False, False, False,
        False, False,  True, False, False,  True, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False,  True, False,  True,  True,
         True,  True, False,  True,  True, False, False, False,  True, False,
         True,  True])
tensor([ True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False,  True,  True,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False,  True,  True, False,  True, False, False,  True,  True,
         True,  True,  True,  True,  True, False, False, False,  True, False,
         True,  True])
Episode step 570, time diff 0.8341841697692871, total time dif 44.73746299743652)
step: 570 @ episode report: {'average_total_reward': np.float32(-0.012222236), 'reward_variance': np.float32(0.010875308), 'max_total_reward': np.float32(0.18888886), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.2), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 20288} @ step loss: {'critic_loss': np.float64(0.08230569809675217), 'actor_loss': np.float64(-0.3583836376667023), 'hyper_actor_loss': np.float64(0.08211214989423751), 'behavior_loss': np.float64(1.894847857952118)}

tensor([ True,  True,  True,  True,  True, False, False,  True, False,  True,
         True,  True, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False,  True,  True,  True, False,  True,
        False, False])
tensor([False, False, False, False, False,  True,  True, False,  True, False,
        False, False,  True,  True,  True, False, False, False,  True, False,
         True, False,  True,  True,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True,  True, False, False,  True, False,  True,
         True,  True, False, False, False,  True, False,  True, False,  True,
        False,  True, False, False, False,  True,  True,  True,  True,  True,
        False,  True])
tensor([ True,  True,  True, False, False, False,  True, False,  True, False,
        False, False, False,  True,  True, False,  True, False,  True, False,
         True, False,  True, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False,  True, False,  True, False,  True,
         True,  True,  True, False, False,  True, False,  True, False,  True,
        False,  True, False,  True, False,  True,  True,  True,  True,  True,
        False,  True])
tensor([ True,  True, False, False,  True, False, False, False,  True, False,
        False, False, False,  True,  True, False,  True, False, False, False,
         True, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False,  True,  True,  True, False, False,
         True,  True,  True, False, False, False, False,  True,  True,  True,
        False,  True, False, False, False,  True,  True,  True,  True,  True,
         True,  True])
tensor([ True,  True, False, False,  True, False, False, False,  True,  True,
        False, False, False,  True,  True,  True,  True, False, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False,  True,  True, False, False, False,
         True, False,  True, False, False, False, False,  True,  True,  True,
         True,  True, False, False, False,  True,  True,  True,  True,  True,
         True, False])
tensor([ True,  True, False, False,  True, False, False,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True, False, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False,  True])
Episode step 580, time diff 0.8241152763366699, total time dif 45.57164716720581)
step: 580 @ episode report: {'average_total_reward': np.float32(-0.0488889), 'reward_variance': np.float32(0.02235062), 'max_total_reward': np.float32(0.31111112), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.2), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 20608} @ step loss: {'critic_loss': np.float64(0.07503059171140194), 'actor_loss': np.float64(-0.3282199174165726), 'hyper_actor_loss': np.float64(0.08169927075505257), 'behavior_loss': np.float64(2.032861280441284)}

tensor([False, False,  True,  True, False, False,  True, False, False, False,
         True, False,  True, False, False, False, False,  True,  True,  True,
         True,  True, False, False, False,  True,  True,  True, False,  True,
         True, False])
tensor([ True, False, False, False,  True,  True, False,  True,  True,  True,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False,  True,  True,  True, False, False, False,  True, False,
        False,  True])
tensor([False,  True,  True,  True, False, False,  True, False, False, False,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True, False, False, False,  True,  True,  True, False,  True,
         True, False])
tensor([ True, False, False, False,  True,  True, False,  True,  True,  True,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False,  True,  True,  True, False, False, False,  True, False,
        False,  True])
tensor([False,  True, False,  True, False, False, False, False, False, False,
         True, False,  True,  True,  True, False, False,  True,  True,  True,
         True, False, False, False, False,  True,  True,  True, False,  True,
         True, False])
tensor([ True, False,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True, False, False, False,  True,  True, False, False, False,
        False,  True,  True,  True,  True, False, False, False,  True, False,
        False,  True])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False,  True,  True,  True, False, False,  True, False,  True,
         True, False, False, False, False,  True,  True,  True, False,  True,
         True, False])
tensor([ True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False, False, False,  True, False, False,  True, False,
        False,  True,  True, False,  True, False, False, False,  True, False,
        False,  True])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False,  True,  True,  True, False,  True,  True, False,  True,
         True, False, False,  True, False, False,  True,  True, False,  True,
         True, False])
tensor([ True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False, False, False,  True, False, False,  True, False,
        False,  True, False, False, False,  True, False, False,  True, False,
        False,  True])
Episode step 590, time diff 0.8152384757995605, total time dif 46.39576244354248)
step: 590 @ episode report: {'average_total_reward': np.float32(-0.07777779), 'reward_variance': np.float32(0.005975309), 'max_total_reward': np.float32(0.044444446), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 20928} @ step loss: {'critic_loss': np.float64(0.06411769203841686), 'actor_loss': np.float64(-0.38273953199386596), 'hyper_actor_loss': np.float64(0.08142192959785462), 'behavior_loss': np.float64(1.9296015977859498)}

tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False,  True,  True,  True, False,  True,  True, False, False,
         True, False,  True,  True,  True, False,  True,  True, False, False,
         True, False])
tensor([False, False, False, False,  True,  True,  True,  True,  True,  True,
         True,  True, False, False, False,  True, False, False,  True,  True,
        False,  True, False, False, False,  True, False, False,  True,  True,
        False,  True])
tensor([ True,  True,  True,  True, False, False, False, False, False, False,
        False, False,  True,  True,  True, False,  True,  True, False, False,
         True, False,  True,  True,  True, False,  True,  True, False, False,
         True, False])
tensor([False, False, False, False,  True,  True,  True,  True,  True, False,
         True,  True, False, False, False,  True, False, False,  True,  True,
        False,  True, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([ True,  True,  True,  True, False, False, False, False, False,  True,
        False, False,  True,  True,  True, False,  True,  True, False, False,
         True, False, False,  True, False, False,  True,  True, False,  True,
         True,  True])
tensor([False, False, False, False,  True,  True,  True,  True,  True, False,
         True,  True, False, False, False,  True, False, False, False,  True,
        False,  True,  True, False,  True,  True, False, False,  True, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False,  True,
        False, False,  True,  True,  True, False,  True,  True,  True, False,
         True, False, False,  True, False, False,  True, False, False,  True,
         True,  True])
tensor([ True,  True, False, False,  True,  True, False,  True,  True, False,
         True,  True, False, False, False,  True, False, False, False,  True,
        False,  True,  True, False,  True,  True, False,  True,  True, False,
        False, False])
tensor([False, False,  True,  True, False, False,  True, False, False,  True,
        False, False,  True,  True,  True, False,  True,  True,  True, False,
         True, False, False,  True, False, False,  True, False, False,  True,
        False, False])
tensor([ True,  True, False, False,  True,  True, False,  True, False, False,
         True, False, False, False, False,  True, False, False, False,  True,
        False,  True, False, False,  True,  True, False,  True,  True, False,
         True,  True])
Episode step 600, time diff 0.8399088382720947, total time dif 47.21100091934204)
step: 600 @ episode report: {'average_total_reward': np.float32(-0.01222223), 'reward_variance': np.float32(0.010875309), 'max_total_reward': np.float32(0.18888888), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.2), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 21248} @ step loss: {'critic_loss': np.float64(0.06470964066684246), 'actor_loss': np.float64(-0.4295656830072403), 'hyper_actor_loss': np.float64(0.08142942860722542), 'behavior_loss': np.float64(1.9199880599975585)}

tensor([False, False,  True, False, False, False,  True, False,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True, False,
         True, False,  True,  True, False, False, False, False, False,  True,
        False, False])
tensor([ True,  True, False,  True,  True, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False,  True, False, False,  True,  True,  True,  True,  True, False,
        False,  True])
tensor([False, False,  True, False, False,  True,  True, False, False,  True,
         True, False, False,  True,  True, False,  True,  True,  True, False,
         True, False,  True,  True, False, False, False, False, False,  True,
         True, False])
tensor([ True,  True, False,  True,  True, False, False,  True,  True, False,
        False,  True,  True, False, False,  True, False, False, False,  True,
        False,  True, False, False,  True,  True,  True,  True,  True, False,
        False,  True])
tensor([False, False,  True, False, False,  True, False, False, False,  True,
        False, False, False,  True,  True, False,  True,  True,  True, False,
         True, False,  True,  True, False, False, False, False, False,  True,
         True, False])
tensor([ True,  True, False,  True,  True, False,  True,  True, False, False,
         True,  True,  True, False, False,  True, False, False, False,  True,
        False,  True, False, False,  True,  True,  True,  True,  True, False,
        False,  True])
tensor([False, False,  True, False, False,  True, False, False,  True,  True,
        False, False, False,  True,  True, False,  True,  True, False, False,
         True, False,  True,  True, False, False, False, False, False,  True,
         True, False])
tensor([ True,  True, False, False,  True, False,  True, False, False, False,
         True,  True, False, False, False, False, False, False,  True,  True,
        False,  True, False, False,  True,  True, False,  True,  True, False,
        False,  True])
tensor([False, False,  True,  True, False,  True, False,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True, False, False,
         True, False,  True,  True, False, False,  True, False, False,  True,
         True, False])
tensor([ True,  True, False, False, False, False,  True, False, False, False,
         True,  True, False, False, False, False, False, False,  True,  True,
        False, False, False, False,  True, False, False,  True,  True, False,
        False,  True])
Episode step 610, time diff 0.8273894786834717, total time dif 48.050909757614136)
step: 610 @ episode report: {'average_total_reward': np.float32(-0.07555558), 'reward_variance': np.float32(0.019599998), 'max_total_reward': np.float32(0.31111106), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.1), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 21568} @ step loss: {'critic_loss': np.float64(0.061397361755371097), 'actor_loss': np.float64(-0.37376241087913514), 'hyper_actor_loss': np.float64(0.08194940239191055), 'behavior_loss': np.float64(1.7311739563941955)}

tensor([False, False,  True,  True,  True,  True, False,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True, False,  True,  True, False, False,  True,
         True, False])
tensor([ True,  True, False, False, False, False,  True, False, False, False,
         True,  True, False, False, False, False, False, False,  True,  True,
        False, False, False, False,  True, False, False,  True,  True, False,
        False,  True])
tensor([False, False,  True, False,  True,  True, False,  True,  True,  True,
        False, False,  True, False,  True,  True, False,  True, False, False,
         True, False,  True, False, False,  True,  True, False, False,  True,
         True, False])
tensor([ True, False, False,  True, False, False,  True, False, False, False,
         True,  True, False,  True, False, False,  True, False,  True,  True,
        False,  True, False,  True, False, False, False,  True,  True, False,
        False,  True])
tensor([False,  True,  True, False,  True,  True, False,  True, False,  True,
        False, False,  True, False,  True, False, False,  True, False, False,
         True, False,  True, False,  True, False,  True, False, False,  True,
         True, False])
tensor([False, False, False,  True, False, False,  True, False,  True, False,
         True,  True, False,  True, False,  True, False, False,  True,  True,
        False,  True, False,  True, False,  True, False,  True,  True, False,
        False,  True])
tensor([ True,  True, False, False,  True, False, False,  True, False,  True,
        False, False,  True, False,  True, False,  True,  True, False, False,
         True, False,  True, False,  True, False, False, False, False,  True,
         True, False])
tensor([False, False,  True,  True, False,  True, False, False,  True, False,
         True,  True, False, False, False,  True, False, False, False,  True,
        False,  True, False,  True, False,  True,  True,  True,  True, False,
        False, False])
tensor([ True,  True, False, False,  True, False,  True,  True, False,  True,
        False, False,  True,  True,  True, False,  True,  True,  True, False,
        False, False,  True, False,  True, False, False, False, False,  True,
        False,  True])
tensor([False, False, False,  True, False,  True, False, False,  True, False,
         True,  True, False, False, False,  True, False, False, False, False,
         True,  True, False, False, False,  True,  True, False,  True, False,
         True, False])
Episode step 620, time diff 0.8601102828979492, total time dif 48.87829923629761)
step: 620 @ episode report: {'average_total_reward': np.float32(-0.061111115), 'reward_variance': np.float32(0.04042592), 'max_total_reward': np.float32(0.43333328), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.2), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 21888} @ step loss: {'critic_loss': np.float64(0.056341014429926874), 'actor_loss': np.float64(-0.4603686660528183), 'hyper_actor_loss': np.float64(0.08222236931324005), 'behavior_loss': np.float64(1.805038857460022)}

tensor([False,  True,  True, False,  True, False, False,  True, False,  True,
        False, False, False,  True,  True, False,  True, False,  True,  True,
        False, False,  True,  True,  True, False, False,  True, False, False,
        False,  True])
tensor([ True, False, False,  True, False,  True,  True, False,  True, False,
         True,  True,  True, False, False,  True, False,  True, False, False,
         True,  True, False, False, False,  True,  True, False,  True,  True,
         True, False])
tensor([False,  True, False, False,  True, False, False,  True, False,  True,
        False, False, False,  True,  True, False,  True, False,  True,  True,
        False, False, False,  True,  True, False, False,  True, False, False,
        False,  True])
tensor([ True, False,  True,  True, False,  True,  True, False,  True, False,
         True, False, False, False, False,  True, False,  True, False, False,
         True,  True,  True, False, False,  True, False, False,  True,  True,
         True, False])
tensor([False,  True, False, False,  True, False, False,  True, False,  True,
        False,  True,  True,  True,  True, False,  True, False,  True, False,
        False, False, False,  True,  True, False,  True,  True, False, False,
        False,  True])
tensor([ True, False,  True,  True, False,  True,  True, False,  True, False,
         True, False, False, False, False,  True, False, False, False,  True,
         True,  True,  True, False, False, False, False, False,  True,  True,
         True, False])
tensor([False,  True, False, False,  True, False, False,  True, False,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True, False,
        False, False, False,  True,  True,  True,  True,  True, False, False,
        False,  True])
tensor([ True, False,  True,  True, False,  True,  True, False,  True, False,
        False, False, False, False, False,  True, False, False, False,  True,
         True, False,  True, False, False, False, False, False,  True,  True,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
         True,  True,  True,  True,  True, False,  True, False,  True, False,
        False,  True, False,  True,  True,  True,  True,  True, False, False,
        False,  True])
tensor([ True, False, False,  True,  True, False,  True,  True,  True, False,
        False, False, False, False, False,  True, False,  True, False,  True,
         True, False, False, False, False, False, False, False,  True,  True,
         True, False])
Episode step 630, time diff 0.8184247016906738, total time dif 49.73840951919556)
step: 630 @ episode report: {'average_total_reward': np.float32(-0.04111112), 'reward_variance': np.float32(0.009112347), 'max_total_reward': np.float32(0.04444445), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 22208} @ step loss: {'critic_loss': np.float64(0.05071381479501724), 'actor_loss': np.float64(-0.6083616435527801), 'hyper_actor_loss': np.float64(0.08238282799720764), 'behavior_loss': np.float64(1.7863554120063783)}

tensor([False,  True,  True, False, False,  True, False, False, False, False,
         True,  True,  True,  True,  True, False,  True, False,  True, False,
        False,  True,  True,  True,  True,  True, False,  True, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False,  True, False,  True, False, False,
         True, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False,  True,  True,  True,  True,  True, False,  True, False,
         True, False,  True,  True, False, False, False, False,  True,  True,
        False,  True, False,  True,  True,  True, False,  True, False,  True,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False,  True, False, False,  True, False,  True, False, False, False,
         True, False,  True, False, False, False, False, False,  True, False,
        False,  True])
tensor([ True, False,  True,  True,  True, False, False,  True, False, False,
         True, False, False,  True, False,  True, False,  True,  True, False,
        False,  True, False,  True, False, False,  True, False, False,  True,
        False, False])
tensor([False,  True, False, False, False,  True,  True, False,  True, False,
        False, False,  True, False,  True, False, False, False, False,  True,
         True, False, False, False,  True,  True, False,  True,  True, False,
         True,  True])
tensor([False, False, False,  True,  True, False, False,  True, False,  True,
         True,  True, False, False, False,  True,  True,  True, False, False,
        False,  True,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False,  True, False, False,  True, False, False,  True, False,
        False, False,  True,  True, False, False, False, False,  True, False,
         True, False, False,  True, False,  True, False, False,  True,  True,
        False, False])
tensor([False,  True, False, False,  True, False,  True,  True, False, False,
        False,  True, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True, False, False,  True, False, False,
         True,  True])
tensor([ True, False, False,  True, False, False, False, False, False,  True,
         True, False, False, False, False, False, False,  True,  True, False,
        False,  True,  True, False, False,  True,  True, False, False,  True,
        False, False])
Episode step 640, time diff 0.8021848201751709, total time dif 50.55683422088623)
step: 640 @ episode report: {'average_total_reward': np.float32(0.102222204), 'reward_variance': np.float32(0.043032102), 'max_total_reward': np.float32(0.5555556), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.4), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 22528} @ step loss: {'critic_loss': np.float64(0.05068296231329441), 'actor_loss': np.float64(-0.7098278999328613), 'hyper_actor_loss': np.float64(0.08170738890767097), 'behavior_loss': np.float64(1.731331503391266)}

tensor([False,  True,  True, False,  True,  True, False,  True,  True, False,
        False, False,  True,  True,  True,  True, False, False, False,  True,
         True, False, False,  True,  True, False, False, False,  True, False,
        False,  True])
tensor([ True, False, False,  True, False, False,  True, False, False,  True,
        False,  True, False, False, False, False,  True, False,  True, False,
        False, False,  True, False, False, False,  True,  True, False, False,
         True, False])
tensor([False,  True, False, False,  True, False, False, False, False, False,
         True, False,  True, False, False, False, False,  True, False, False,
        False,  True, False,  True, False,  True, False, False, False,  True,
        False, False])
tensor([ True, False,  True, False, False,  True, False,  True,  True,  True,
        False, False, False,  True,  True,  True, False, False,  True,  True,
         True, False, False, False,  True, False,  True, False,  True, False,
        False,  True])
tensor([False,  True, False,  True, False, False,  True, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False,  True, False,  True, False, False,
         True, False])
tensor([ True, False,  True, False,  True, False, False, False, False, False,
         True, False,  True,  True,  True,  True, False,  True, False, False,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
tensor([False, False, False, False, False,  True, False,  True,  True,  True,
        False, False, False, False, False, False, False, False,  True,  True,
         True, False,  True, False,  True, False, False, False, False, False,
         True,  True])
tensor([False,  True,  True,  True, False, False,  True, False, False, False,
         True,  True, False, False, False,  True,  True,  True, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([ True, False, False, False,  True, False, False,  True, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
         True,  True, False,  True,  True, False,  True, False,  True,  True,
        False, False])
tensor([False, False,  True, False, False,  True,  True, False,  True,  True,
        False, False, False, False, False,  True,  True, False,  True,  True,
        False, False,  True, False, False, False, False, False, False, False,
         True,  True])
Episode step 650, time diff 1.0001261234283447, total time dif 51.3590190410614)
step: 650 @ episode report: {'average_total_reward': np.float32(0.36999997), 'reward_variance': np.float32(0.023062963), 'max_total_reward': np.float32(0.5555556), 'min_total_reward': np.float32(0.044444427), 'average_n_step': np.float32(2.9), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 22848} @ step loss: {'critic_loss': np.float64(0.044999727979302406), 'actor_loss': np.float64(-0.7022684395313263), 'hyper_actor_loss': np.float64(0.08065904080867767), 'behavior_loss': np.float64(1.8233789801597595)}

tensor([ True,  True, False,  True, False, False, False, False, False, False,
         True,  True, False, False,  True, False, False,  True, False, False,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False, False])
tensor([False, False, False, False,  True,  True, False,  True, False,  True,
        False, False,  True,  True, False, False,  True, False,  True, False,
         True,  True, False,  True, False, False,  True, False,  True, False,
        False,  True])
tensor([ True, False,  True, False, False, False,  True, False,  True, False,
         True, False, False, False,  True,  True, False, False, False,  True,
        False, False,  True, False,  True, False, False, False, False, False,
         True, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False,  True, False,  True, False, False,  True,  True, False, False,
         True, False, False, False, False,  True, False,  True, False,  True,
        False, False])
tensor([False, False, False, False,  True,  True,  True,  True, False,  True,
        False, False,  True, False, False,  True, False, False,  True, False,
        False,  True,  True,  True, False, False,  True, False,  True, False,
        False,  True])
tensor([ True, False,  True, False, False, False, False, False,  True, False,
         True, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False,  True, False,  True, False, False,  True, False, False, False,
        False,  True, False,  True, False, False,  True, False, False, False,
         True, False, False, False, False,  True, False,  True, False,  True,
        False, False])
tensor([ True, False,  True, False,  True,  True, False,  True, False,  True,
         True, False,  True, False, False,  True, False,  True,  True, False,
        False,  True,  True,  True, False, False,  True, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False,  True, False, False,
         True, False])
tensor([False,  True, False,  True, False, False,  True,  True, False, False,
        False,  True, False,  True, False, False,  True, False, False, False,
         True,  True, False, False, False, False, False, False, False,  True,
        False, False])
Episode step 660, time diff 0.804664134979248, total time dif 52.359145164489746)
step: 660 @ episode report: {'average_total_reward': np.float32(0.34333333), 'reward_variance': np.float32(0.04156667), 'max_total_reward': np.float32(0.6777778), 'min_total_reward': np.float32(0.044444438), 'average_n_step': np.float32(2.8), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 23168} @ step loss: {'critic_loss': np.float64(0.04423954673111439), 'actor_loss': np.float64(-0.7032000541687011), 'hyper_actor_loss': np.float64(0.07986452281475068), 'behavior_loss': np.float64(1.8703802227973938)}

tensor([ True, False,  True, False,  True,  True, False, False, False,  True,
         True, False,  True, False,  True,  True, False,  True,  True,  True,
        False, False,  True,  True, False,  True,  True, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False,  True, False, False,
         True, False])
tensor([False,  True, False,  True, False, False,  True,  True, False,  True,
        False,  True, False,  True, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False,  True, False,  True,  True, False, False, False, False,
         True, False,  True, False,  True,  True, False,  True,  True,  True,
        False, False,  True,  True, False, False,  True, False,  True, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True,  True, False,  True, False, False,
        False, False])
tensor([False,  True, False,  True, False, False,  True,  True, False,  True,
        False,  True, False,  True, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False,  True,  True, False, False, False, False,
         True, False,  True, False,  True,  True, False,  True,  True,  True,
        False, False,  True,  True, False, False,  True, False,  True, False,
         True,  True])
tensor([ True, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True,  True, False,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False,  True,  True, False,  True,
        False,  True, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False,  True,  True, False, False, False, False,
         True, False,  True,  True, False,  True, False,  True, False, False,
        False, False, False,  True, False, False,  True, False,  True, False,
         True,  True])
Episode step 670, time diff 0.8110668659210205, total time dif 53.163809299468994)
step: 670 @ episode report: {'average_total_reward': np.float32(0.64111114), 'reward_variance': np.float32(0.05990247), 'max_total_reward': np.float32(1.0444444), 'min_total_reward': np.float32(0.31111106), 'average_n_step': np.float32(3.0), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(3.0), 'buffer_size': 23488} @ step loss: {'critic_loss': np.float64(0.04837443232536316), 'actor_loss': np.float64(-0.6459007143974305), 'hyper_actor_loss': np.float64(0.07863995879888534), 'behavior_loss': np.float64(1.8747066020965577)}

tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False,  True,  True, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True,  True,  True,  True,
        False,  True, False, False,  True, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False,  True,  True, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
         True,  True, False,  True, False, False,  True, False,  True,  True,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False,  True,  True,  True,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False,  True, False,  True,
        False, False, False, False,  True, False,  True, False, False,  True,
        False, False])
tensor([ True, False,  True, False,  True,  True, False, False, False, False,
        False, False,  True,  True, False, False,  True, False, False, False,
         True,  True, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False,  True,  True,  True,
         True, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False,  True,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False,  True, False, False,  True,
        False, False])
Episode step 680, time diff 0.8167486190795898, total time dif 53.974876165390015)
step: 680 @ episode report: {'average_total_reward': np.float32(1.551111), 'reward_variance': np.float32(0.5214864), 'max_total_reward': np.float32(2.8), 'min_total_reward': np.float32(0.5555555), 'average_n_step': np.float32(3.8), 'max_n_step': np.float32(5.0), 'min_n_step': np.float32(3.0), 'buffer_size': 23808} @ step loss: {'critic_loss': np.float64(0.048642539978027345), 'actor_loss': np.float64(-0.7908846199512481), 'hyper_actor_loss': np.float64(0.07695204690098763), 'behavior_loss': np.float64(1.7834723949432374)}

tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False,  True,  True,  True, False,  True, False, False,  True,
        False, False, False, False, False, False, False,  True,  True, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False,  True, False, False, False,  True, False, False,  True, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False,  True, False,  True,
         True, False])
tensor([ True, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False,  True,  True, False,  True,
        False,  True, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False,  True,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False,  True, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False,  True, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False,  True, False,  True,  True, False, False,
         True,  True, False, False, False, False,  True, False,  True,  True,
        False, False])
tensor([ True,  True, False, False,  True, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
Episode step 690, time diff 0.8345730304718018, total time dif 54.791624784469604)
step: 690 @ episode report: {'average_total_reward': np.float32(2.5300002), 'reward_variance': np.float32(0.69039625), 'max_total_reward': np.float32(4.288889), 'min_total_reward': np.float32(1.1666667), 'average_n_step': np.float32(4.4), 'max_n_step': np.float32(6.0), 'min_n_step': np.float32(3.0), 'buffer_size': 24128} @ step loss: {'critic_loss': np.float64(0.050871605053544044), 'actor_loss': np.float64(-0.8340898394584656), 'hyper_actor_loss': np.float64(0.0757572554051876), 'behavior_loss': np.float64(1.9204723715782166)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False,  True, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False,  True,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False,  True, False,  True, False,  True, False,
         True, False,  True,  True, False, False,  True, False, False, False,
         True, False, False, False, False, False,  True, False,  True, False,
         True, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True,  True, False, False, False,  True,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False,  True, False,  True, False, False,  True, False,
         True, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
         True, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 700, time diff 0.891671895980835, total time dif 55.626197814941406)
step: 700 @ episode report: {'average_total_reward': np.float32(2.7788892), 'reward_variance': np.float32(0.58122116), 'max_total_reward': np.float32(4.533334), 'min_total_reward': np.float32(2.0444446), 'average_n_step': np.float32(4.6), 'max_n_step': np.float32(6.0), 'min_n_step': np.float32(4.0), 'buffer_size': 24448} @ step loss: {'critic_loss': np.float64(0.0627368874847889), 'actor_loss': np.float64(-0.8605305194854737), 'hyper_actor_loss': np.float64(0.07468379959464073), 'behavior_loss': np.float64(1.8718968629837036)}

tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False,  True,
        False,  True, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([ True, False,  True, False,  True, False, False, False,  True, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True, False,  True, False,  True, False, False, False, False,
        False, False,  True, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False,  True, False, False, False,  True,
        False,  True])
Episode step 710, time diff 0.845512866973877, total time dif 56.51786971092224)
step: 710 @ episode report: {'average_total_reward': np.float32(4.1744447), 'reward_variance': np.float32(0.86716205), 'max_total_reward': np.float32(5.533334), 'min_total_reward': np.float32(2.2888887), 'average_n_step': np.float32(5.8), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 24768} @ step loss: {'critic_loss': np.float64(0.0721896082162857), 'actor_loss': np.float64(-0.9046469330787659), 'hyper_actor_loss': np.float64(0.07366273552179337), 'behavior_loss': np.float64(1.8279767990112306)}

tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False,  True, False,
        False, False])
tensor([False,  True, False, False,  True, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False,  True, False, False, False,  True,  True, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False,  True])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False,  True, False,
        False, False])
tensor([ True,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
         True,  True])
Episode step 720, time diff 0.8310790061950684, total time dif 57.36338257789612)
step: 720 @ episode report: {'average_total_reward': np.float32(4.1011114), 'reward_variance': np.float32(0.5531965), 'max_total_reward': np.float32(5.166667), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(5.8), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 25088} @ step loss: {'critic_loss': np.float64(0.08096866197884083), 'actor_loss': np.float64(-0.9442058861255646), 'hyper_actor_loss': np.float64(0.07269906029105186), 'behavior_loss': np.float64(1.7567095160484314)}

tensor([False, False, False, False, False,  True, False, False,  True,  True,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([ True,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False,  True, False, False,  True,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False, False,  True,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False,  True, False,  True, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
Episode step 730, time diff 0.8208835124969482, total time dif 58.19446158409119)
step: 730 @ episode report: {'average_total_reward': np.float32(4.001111), 'reward_variance': np.float32(1.0634927), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(5.7), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 25408} @ step loss: {'critic_loss': np.float64(0.0935850389301777), 'actor_loss': np.float64(-0.9289253652095795), 'hyper_actor_loss': np.float64(0.07183983847498894), 'behavior_loss': np.float64(1.8407879590988159)}

tensor([ True,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False,  True,  True,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False,  True,  True, False, False, False, False,  True, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([ True,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 740, time diff 0.8157732486724854, total time dif 59.015345096588135)
step: 740 @ episode report: {'average_total_reward': np.float32(4.8966665), 'reward_variance': np.float32(0.95177925), 'max_total_reward': np.float32(5.655556), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 25728} @ step loss: {'critic_loss': np.float64(0.10197139903903008), 'actor_loss': np.float64(-0.9852943599224091), 'hyper_actor_loss': np.float64(0.07091362103819847), 'behavior_loss': np.float64(1.75054270029068)}

tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False,  True, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 750, time diff 0.8085002899169922, total time dif 59.83111834526062)
step: 750 @ episode report: {'average_total_reward': np.float32(5.1111116), 'reward_variance': np.float32(2.8319755), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(2.9222221), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 26048} @ step loss: {'critic_loss': np.float64(0.10593677833676338), 'actor_loss': np.float64(-0.8960479915142059), 'hyper_actor_loss': np.float64(0.07027753442525864), 'behavior_loss': np.float64(1.7599928379058838)}

tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False,  True,  True, False,
        False, False, False,  True, False, False,  True,  True, False, False,
         True, False])
tensor([ True, False, False,  True, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
Episode step 760, time diff 0.8138256072998047, total time dif 60.63961863517761)
step: 760 @ episode report: {'average_total_reward': np.float32(4.884444), 'reward_variance': np.float32(0.5161036), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(3.4111116), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 26368} @ step loss: {'critic_loss': np.float64(0.12337376326322555), 'actor_loss': np.float64(-0.9369320690631866), 'hyper_actor_loss': np.float64(0.06944471299648285), 'behavior_loss': np.float64(1.8386993169784547)}

tensor([ True,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False,  True, False, False,  True,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True,  True, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False,  True])
tensor([ True,  True, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
Episode step 770, time diff 0.8307843208312988, total time dif 61.45344424247742)
step: 770 @ episode report: {'average_total_reward': np.float32(5.3477783), 'reward_variance': np.float32(2.171804), 'max_total_reward': np.float32(7.533334), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 26688} @ step loss: {'critic_loss': np.float64(0.12319276183843612), 'actor_loss': np.float64(-0.9203956484794616), 'hyper_actor_loss': np.float64(0.06883317753672599), 'behavior_loss': np.float64(1.783497941493988)}

tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True,  True, False,
        False,  True, False, False,  True, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True, False, False,  True,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False,  True,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True,  True,
        False, False,  True,  True, False, False, False, False, False, False,
         True, False])
Episode step 780, time diff 0.829291820526123, total time dif 62.284228563308716)
step: 780 @ episode report: {'average_total_reward': np.float32(5.7355556), 'reward_variance': np.float32(1.2201678), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(4.2888894), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 27008} @ step loss: {'critic_loss': np.float64(0.11564739421010017), 'actor_loss': np.float64(-0.9597561359405518), 'hyper_actor_loss': np.float64(0.06812239214777946), 'behavior_loss': np.float64(1.7250799417495728)}

tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False,  True, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 790, time diff 0.8214268684387207, total time dif 63.11352038383484)
step: 790 @ episode report: {'average_total_reward': np.float32(5.1233335), 'reward_variance': np.float32(1.1323816), 'max_total_reward': np.float32(6.655556), 'min_total_reward': np.float32(4.0444446), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 27328} @ step loss: {'critic_loss': np.float64(0.12322188317775726), 'actor_loss': np.float64(-1.0163166046142578), 'hyper_actor_loss': np.float64(0.06764831393957138), 'behavior_loss': np.float64(1.7272189140319825)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False,  True, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False,  True, False,  True, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
         True, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 800, time diff 0.8119981288909912, total time dif 63.93494725227356)
step: 800 @ episode report: {'average_total_reward': np.float32(5.9455557), 'reward_variance': np.float32(0.9657397), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(4.533334), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 27648} @ step loss: {'critic_loss': np.float64(0.13482899218797684), 'actor_loss': np.float64(-0.9731628656387329), 'hyper_actor_loss': np.float64(0.06701444759964943), 'behavior_loss': np.float64(1.7105080962181092)}

tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False,  True, False, False,  True, False,  True, False, False, False,
         True, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False,  True,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([ True, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
Episode step 810, time diff 0.8239662647247314, total time dif 64.74694538116455)
step: 810 @ episode report: {'average_total_reward': np.float32(5.8822227), 'reward_variance': np.float32(1.2466223), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(4.2888894), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 27968} @ step loss: {'critic_loss': np.float64(0.12707162722945214), 'actor_loss': np.float64(-0.9942474603652954), 'hyper_actor_loss': np.float64(0.06651923209428787), 'behavior_loss': np.float64(1.6996025562286377)}

tensor([False, False, False,  True, False, False,  True, False,  True, False,
        False, False,  True,  True, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False,  True, False, False, False,  True, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False,  True, False, False, False,  True, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True,  True])
Episode step 820, time diff 0.8136885166168213, total time dif 65.57091164588928)
step: 820 @ episode report: {'average_total_reward': np.float32(5.8722224), 'reward_variance': np.float32(1.0985992), 'max_total_reward': np.float32(7.5333343), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 28288} @ step loss: {'critic_loss': np.float64(0.14275018572807313), 'actor_loss': np.float64(-0.9785480082035065), 'hyper_actor_loss': np.float64(0.06631804704666137), 'behavior_loss': np.float64(1.6322949409484864)}

tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False,  True, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([ True, False, False,  True, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False,  True, False, False, False, False,  True, False,
        False, False])
Episode step 830, time diff 0.8174788951873779, total time dif 66.3846001625061)
step: 830 @ episode report: {'average_total_reward': np.float32(6.3700004), 'reward_variance': np.float32(0.9408659), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(4.5333333), 'average_n_step': np.float32(7.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 28608} @ step loss: {'critic_loss': np.float64(0.14222519248723983), 'actor_loss': np.float64(-1.092032516002655), 'hyper_actor_loss': np.float64(0.06600988805294036), 'behavior_loss': np.float64(1.640166985988617)}

tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True,  True, False,  True, False, False, False, False, False, False,
        False, False,  True, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False,  True, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
         True,  True, False,  True, False, False, False, False, False, False,
        False,  True, False, False,  True,  True, False, False, False, False,
        False, False])
Episode step 840, time diff 0.8201639652252197, total time dif 67.20207905769348)
step: 840 @ episode report: {'average_total_reward': np.float32(5.8844447), 'reward_variance': np.float32(1.2592399), 'max_total_reward': np.float32(7.533334), 'min_total_reward': np.float32(4.0444446), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 28928} @ step loss: {'critic_loss': np.float64(0.14876062273979188), 'actor_loss': np.float64(-1.0178934037685394), 'hyper_actor_loss': np.float64(0.06554941609501838), 'behavior_loss': np.float64(1.6285051345825194)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
         True, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False,  True,  True,  True, False, False, False,
        False, False, False,  True, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
Episode step 850, time diff 0.7889688014984131, total time dif 68.0222430229187)
step: 850 @ episode report: {'average_total_reward': np.float32(5.9844446), 'reward_variance': np.float32(1.2545736), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.5), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 29248} @ step loss: {'critic_loss': np.float64(0.14486565813422203), 'actor_loss': np.float64(-1.0070095598697661), 'hyper_actor_loss': np.float64(0.06514340192079544), 'behavior_loss': np.float64(1.6708368420600892)}

tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False,  True, False, False,
        False, False,  True,  True, False,  True,  True, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False,  True, False,  True, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False,  True,  True, False,
        False, False, False, False, False, False,  True,  True, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
Episode step 860, time diff 0.7971699237823486, total time dif 68.81121182441711)
step: 860 @ episode report: {'average_total_reward': np.float32(6.5433335), 'reward_variance': np.float32(2.0305789), 'max_total_reward': np.float32(8.900001), 'min_total_reward': np.float32(4.533334), 'average_n_step': np.float32(7.9), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 29568} @ step loss: {'critic_loss': np.float64(0.1735812470316887), 'actor_loss': np.float64(-1.0045735538005829), 'hyper_actor_loss': np.float64(0.06461643576622009), 'behavior_loss': np.float64(1.69394793510437)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False,  True,
         True,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False,  True, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False,  True, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
Episode step 870, time diff 0.8059067726135254, total time dif 69.60838174819946)
step: 870 @ episode report: {'average_total_reward': np.float32(5.6333337), 'reward_variance': np.float32(1.4486172), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 29888} @ step loss: {'critic_loss': np.float64(0.15868043005466462), 'actor_loss': np.float64(-1.0280214369297027), 'hyper_actor_loss': np.float64(0.06440644860267639), 'behavior_loss': np.float64(1.7409473299980163)}

tensor([False, False, False, False, False, False,  True, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False,  True,  True, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False,  True, False,  True,  True, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 880, time diff 1.0045855045318604, total time dif 70.41428852081299)
step: 880 @ episode report: {'average_total_reward': np.float32(5.5211115), 'reward_variance': np.float32(2.695666), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(2.1666667), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(4.0), 'buffer_size': 30208} @ step loss: {'critic_loss': np.float64(0.15729752108454703), 'actor_loss': np.float64(-0.9682610630989075), 'hyper_actor_loss': np.float64(0.06412600725889206), 'behavior_loss': np.float64(1.7950805068016051)}

tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False,  True,  True, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 890, time diff 0.8394575119018555, total time dif 71.41887402534485)
step: 890 @ episode report: {'average_total_reward': np.float32(5.745556), 'reward_variance': np.float32(0.66618407), 'max_total_reward': np.float32(6.655556), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 30528} @ step loss: {'critic_loss': np.float64(0.159711492061615), 'actor_loss': np.float64(-0.9913512468338013), 'hyper_actor_loss': np.float64(0.06426626518368721), 'behavior_loss': np.float64(1.8288167595863343)}

tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False,  True, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True,  True, False,
         True, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True,  True, False, False,  True, False,  True, False, False,
        False, False])
Episode step 900, time diff 0.8177931308746338, total time dif 72.2583315372467)
step: 900 @ episode report: {'average_total_reward': np.float32(5.708889), 'reward_variance': np.float32(0.93377304), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 30848} @ step loss: {'critic_loss': np.float64(0.15407488271594047), 'actor_loss': np.float64(-1.0365586161613465), 'hyper_actor_loss': np.float64(0.06377698555588722), 'behavior_loss': np.float64(1.7571274161338806)}

tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False,  True,  True, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False,  True, False, False, False,
        False, False,  True, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False,  True,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([ True, False, False, False,  True, False, False,  True,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
Episode step 910, time diff 0.8474221229553223, total time dif 73.07612466812134)
step: 910 @ episode report: {'average_total_reward': np.float32(5.908889), 'reward_variance': np.float32(1.2923657), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 31168} @ step loss: {'critic_loss': np.float64(0.16613849252462387), 'actor_loss': np.float64(-1.0449729323387147), 'hyper_actor_loss': np.float64(0.06330499872565269), 'behavior_loss': np.float64(1.7738708138465882)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False,  True,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False,  True,  True, False, False, False,
         True, False])
tensor([ True, False, False, False, False,  True,  True, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False,  True, False, False,  True,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False,  True, False, False,
        False,  True])
Episode step 920, time diff 0.8290505409240723, total time dif 73.92354679107666)
step: 920 @ episode report: {'average_total_reward': np.float32(6.0822225), 'reward_variance': np.float32(1.9952643), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(7.5), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 31488} @ step loss: {'critic_loss': np.float64(0.16399702206254005), 'actor_loss': np.float64(-0.989623749256134), 'hyper_actor_loss': np.float64(0.06290358006954193), 'behavior_loss': np.float64(1.7732337355613708)}

tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
         True,  True])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 930, time diff 0.8874518871307373, total time dif 74.75259733200073)
step: 930 @ episode report: {'average_total_reward': np.float32(6.1577783), 'reward_variance': np.float32(0.84646446), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.5333333), 'average_n_step': np.float32(7.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 31808} @ step loss: {'critic_loss': np.float64(0.17843203842639924), 'actor_loss': np.float64(-1.0444644927978515), 'hyper_actor_loss': np.float64(0.06271627098321915), 'behavior_loss': np.float64(1.759281575679779)}

tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False,  True, False,  True,  True,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False,  True,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 940, time diff 0.8331000804901123, total time dif 75.64004921913147)
step: 940 @ episode report: {'average_total_reward': np.float32(6.27), 'reward_variance': np.float32(2.1219518), 'max_total_reward': np.float32(8.777778), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.7), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 32128} @ step loss: {'critic_loss': np.float64(0.15675086975097657), 'actor_loss': np.float64(-0.9783677339553833), 'hyper_actor_loss': np.float64(0.06254911459982396), 'behavior_loss': np.float64(1.7886650204658507)}

tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False,  True,
         True, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False,  True,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False,  True,
         True, False])
Episode step 950, time diff 0.8175821304321289, total time dif 76.47314929962158)
step: 950 @ episode report: {'average_total_reward': np.float32(6.2333336), 'reward_variance': np.float32(0.90723485), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 32448} @ step loss: {'critic_loss': np.float64(0.16481704115867615), 'actor_loss': np.float64(-1.0555796027183533), 'hyper_actor_loss': np.float64(0.062269338965415956), 'behavior_loss': np.float64(1.6668851971626282)}

tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
Episode step 960, time diff 0.8289141654968262, total time dif 77.29073143005371)
step: 960 @ episode report: {'average_total_reward': np.float32(5.708889), 'reward_variance': np.float32(0.8479456), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 32768} @ step loss: {'critic_loss': np.float64(0.16657757237553597), 'actor_loss': np.float64(-1.0472815454006195), 'hyper_actor_loss': np.float64(0.061870700865983966), 'behavior_loss': np.float64(1.69155592918396)}

tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False,  True, False,  True,
         True, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False,  True,  True, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
Episode step 970, time diff 0.8364064693450928, total time dif 78.11964559555054)
step: 970 @ episode report: {'average_total_reward': np.float32(5.3966665), 'reward_variance': np.float32(1.3651125), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 33088} @ step loss: {'critic_loss': np.float64(0.15880258977413178), 'actor_loss': np.float64(-1.0231710910797118), 'hyper_actor_loss': np.float64(0.06118004359304905), 'behavior_loss': np.float64(1.6507887721061707)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 980, time diff 0.8197314739227295, total time dif 78.95605206489563)
step: 980 @ episode report: {'average_total_reward': np.float32(6.033334), 'reward_variance': np.float32(0.9871604), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.5), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 33408} @ step loss: {'critic_loss': np.float64(0.1596580371260643), 'actor_loss': np.float64(-1.022000402212143), 'hyper_actor_loss': np.float64(0.060794493183493614), 'behavior_loss': np.float64(1.5914456844329834)}

tensor([ True, False,  True, False, False, False, False, False, False,  True,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
         True,  True])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False,  True, False, False,  True,  True,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False,  True,  True, False,  True, False,
        False,  True])
tensor([ True, False,  True, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 990, time diff 0.8426330089569092, total time dif 79.77578353881836)
step: 990 @ episode report: {'average_total_reward': np.float32(5.908889), 'reward_variance': np.float32(1.259946), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 33728} @ step loss: {'critic_loss': np.float64(0.17252329587936402), 'actor_loss': np.float64(-1.044597315788269), 'hyper_actor_loss': np.float64(0.060642854496836665), 'behavior_loss': np.float64(1.5773821234703065)}

tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False,  True, False,  True, False,  True, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False,  True, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True,  True, False, False,  True, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
Episode step 1000, time diff 0.837336540222168, total time dif 80.61841654777527)
step: 1000 @ episode report: {'average_total_reward': np.float32(5.26), 'reward_variance': np.float32(2.802598), 'max_total_reward': np.float32(8.411112), 'min_total_reward': np.float32(2.1666667), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(4.0), 'buffer_size': 34048} @ step loss: {'critic_loss': np.float64(0.15927765965461732), 'actor_loss': np.float64(-1.0045954704284668), 'hyper_actor_loss': np.float64(0.060197632387280466), 'behavior_loss': np.float64(1.550030279159546)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False,  True,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False,  True,  True,
        False, False, False,  True, False,  True,  True, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True,  True,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False,  True, False, False,  True, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False,  True])
tensor([False, False, False, False,  True, False,  True, False, False,  True,
        False, False, False, False, False, False,  True,  True, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 1010, time diff 0.8169200420379639, total time dif 81.45575308799744)
step: 1010 @ episode report: {'average_total_reward': np.float32(6.008889), 'reward_variance': np.float32(1.0688598), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.5), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 34368} @ step loss: {'critic_loss': np.float64(0.17142665162682533), 'actor_loss': np.float64(-0.9858214080333709), 'hyper_actor_loss': np.float64(0.059992355108261106), 'behavior_loss': np.float64(1.5599994778633117)}

tensor([False,  True,  True, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False,  True, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False,  True, False,  True,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
         True,  True])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1020, time diff 0.8381905555725098, total time dif 82.2726731300354)
step: 1020 @ episode report: {'average_total_reward': np.float32(5.9333334), 'reward_variance': np.float32(2.2839015), 'max_total_reward': np.float32(8.777778), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 34688} @ step loss: {'critic_loss': np.float64(0.16996886283159257), 'actor_loss': np.float64(-1.0892533659934998), 'hyper_actor_loss': np.float64(0.05930316150188446), 'behavior_loss': np.float64(1.5329036951065063)}

tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False,  True,  True, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False,  True,  True, False, False,  True, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False,  True,  True, False, False,
         True,  True])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False,  True,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False,  True,  True,  True, False, False,
        False,  True])
Episode step 1030, time diff 0.8184189796447754, total time dif 83.11086368560791)
step: 1030 @ episode report: {'average_total_reward': np.float32(5.172222), 'reward_variance': np.float32(1.1705495), 'max_total_reward': np.float32(7.166667), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 35008} @ step loss: {'critic_loss': np.float64(0.16413082480430602), 'actor_loss': np.float64(-0.9781634211540222), 'hyper_actor_loss': np.float64(0.05862217135727406), 'behavior_loss': np.float64(1.5885130405426025)}

tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False,  True,
         True,  True])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1040, time diff 0.9658255577087402, total time dif 83.92928266525269)
step: 1040 @ episode report: {'average_total_reward': np.float32(5.4844446), 'reward_variance': np.float32(1.8260295), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 35328} @ step loss: {'critic_loss': np.float64(0.150512458384037), 'actor_loss': np.float64(-1.0050696969032287), 'hyper_actor_loss': np.float64(0.058057202771306035), 'behavior_loss': np.float64(1.537688136100769)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False,  True,
        False,  True, False,  True, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False,  True, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
Episode step 1050, time diff 0.8109121322631836, total time dif 84.89510822296143)
step: 1050 @ episode report: {'average_total_reward': np.float32(4.9844446), 'reward_variance': np.float32(0.97879505), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 35648} @ step loss: {'critic_loss': np.float64(0.14903667867183684), 'actor_loss': np.float64(-1.0124033987522125), 'hyper_actor_loss': np.float64(0.05759742595255375), 'behavior_loss': np.float64(1.5998282790184022)}

tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False,  True,  True,  True, False, False,
        False, False])
Episode step 1060, time diff 0.8228533267974854, total time dif 85.70602035522461)
step: 1060 @ episode report: {'average_total_reward': np.float32(5.5577784), 'reward_variance': np.float32(1.7520444), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 35968} @ step loss: {'critic_loss': np.float64(0.15429881662130357), 'actor_loss': np.float64(-1.0025837540626525), 'hyper_actor_loss': np.float64(0.05702442675828934), 'behavior_loss': np.float64(1.5794472098350525)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False,  True, False, False, False,
        False, False, False,  True,  True, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True,  True, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True,  True, False,  True, False, False, False, False, False, False,
        False,  True])
Episode step 1070, time diff 0.7980225086212158, total time dif 86.5288736820221)
step: 1070 @ episode report: {'average_total_reward': np.float32(5.3966665), 'reward_variance': np.float32(0.8015072), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 36288} @ step loss: {'critic_loss': np.float64(0.16126951724290847), 'actor_loss': np.float64(-1.0263886094093322), 'hyper_actor_loss': np.float64(0.05670231766998768), 'behavior_loss': np.float64(1.5948261618614197)}

tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True,  True,  True, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False,  True, False,  True, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True,  True, False,  True, False, False, False,
         True, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False,  True, False, False, False, False,  True,  True, False,
        False, False])
Episode step 1080, time diff 0.8395328521728516, total time dif 87.32689619064331)
step: 1080 @ episode report: {'average_total_reward': np.float32(5.608889), 'reward_variance': np.float32(1.7137487), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(3.4111116), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 36608} @ step loss: {'critic_loss': np.float64(0.15166970193386078), 'actor_loss': np.float64(-0.9834521353244782), 'hyper_actor_loss': np.float64(0.05607360303401947), 'behavior_loss': np.float64(1.5692149639129638)}

tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
         True,  True, False,  True, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False,  True, False, False, False, False,  True,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True,  True, False, False,  True,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False,  True,
         True,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1090, time diff 0.855008602142334, total time dif 88.16642904281616)
step: 1090 @ episode report: {'average_total_reward': np.float32(5.5722227), 'reward_variance': np.float32(2.7957606), 'max_total_reward': np.float32(8.533335), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(4.0), 'buffer_size': 36928} @ step loss: {'critic_loss': np.float64(0.15413804352283478), 'actor_loss': np.float64(-1.0454511404037476), 'hyper_actor_loss': np.float64(0.05565996505320072), 'behavior_loss': np.float64(1.5890875220298768)}

tensor([False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False,  True, False, False,  True,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False,  True,  True, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True,  True,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
Episode step 1100, time diff 0.8113739490509033, total time dif 89.0214376449585)
step: 1100 @ episode report: {'average_total_reward': np.float32(5.508889), 'reward_variance': np.float32(0.40836525), 'max_total_reward': np.float32(6.6555552), 'min_total_reward': np.float32(4.5333333), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 37248} @ step loss: {'critic_loss': np.float64(0.15559567585587503), 'actor_loss': np.float64(-1.0218048691749573), 'hyper_actor_loss': np.float64(0.055355459824204443), 'behavior_loss': np.float64(1.6115228295326234)}

tensor([False,  True, False, False,  True,  True,  True, False,  True, False,
        False,  True,  True,  True, False,  True, False, False, False,  True,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
         True, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False,  True, False,
        False, False,  True,  True, False,  True, False, False, False,  True,
        False,  True, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False,  True, False, False, False, False, False,  True, False,
        False, False])
Episode step 1110, time diff 0.8021819591522217, total time dif 89.8328115940094)
step: 1110 @ episode report: {'average_total_reward': np.float32(6.084445), 'reward_variance': np.float32(1.1321286), 'max_total_reward': np.float32(7.411112), 'min_total_reward': np.float32(4.0444446), 'average_n_step': np.float32(7.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 37568} @ step loss: {'critic_loss': np.float64(0.14675818681716918), 'actor_loss': np.float64(-1.000829291343689), 'hyper_actor_loss': np.float64(0.05511945970356465), 'behavior_loss': np.float64(1.6372987270355224)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False,  True, False, False,  True, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
Episode step 1120, time diff 0.9999558925628662, total time dif 90.63499355316162)
step: 1120 @ episode report: {'average_total_reward': np.float32(5.57), 'reward_variance': np.float32(0.4031372), 'max_total_reward': np.float32(6.533334), 'min_total_reward': np.float32(4.5333333), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 37888} @ step loss: {'critic_loss': np.float64(0.15736782774329186), 'actor_loss': np.float64(-0.954763549566269), 'hyper_actor_loss': np.float64(0.05499878376722336), 'behavior_loss': np.float64(1.6204756379127503)}

tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False,  True, False, False,  True, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True,  True,  True, False, False, False,  True, False,
         True, False, False, False, False, False,  True, False, False, False,
        False,  True, False,  True, False,  True, False, False, False, False,
        False, False])
Episode step 1130, time diff 0.797050952911377, total time dif 91.63494944572449)
step: 1130 @ episode report: {'average_total_reward': np.float32(5.4722223), 'reward_variance': np.float32(3.1499324), 'max_total_reward': np.float32(9.900001), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(11.0), 'min_n_step': np.float32(5.0), 'buffer_size': 38208} @ step loss: {'critic_loss': np.float64(0.1544165387749672), 'actor_loss': np.float64(-1.0654932379722595), 'hyper_actor_loss': np.float64(0.05499760396778584), 'behavior_loss': np.float64(1.6370280385017395)}

tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False,  True,
         True,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False,  True, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False,  True, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False,  True, False,
        False, False])
Episode step 1140, time diff 0.8516416549682617, total time dif 92.43200039863586)
step: 1140 @ episode report: {'average_total_reward': np.float32(5.596667), 'reward_variance': np.float32(1.377779), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 38528} @ step loss: {'critic_loss': np.float64(0.15022787526249887), 'actor_loss': np.float64(-0.9837436199188232), 'hyper_actor_loss': np.float64(0.05517370291054249), 'behavior_loss': np.float64(1.6315114736557006)}

tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False,  True, False,  True, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
         True, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False,  True, False, False,  True, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1150, time diff 0.9365875720977783, total time dif 93.28364205360413)
step: 1150 @ episode report: {'average_total_reward': np.float32(5.4722223), 'reward_variance': np.float32(1.6935371), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 38848} @ step loss: {'critic_loss': np.float64(0.1594979479908943), 'actor_loss': np.float64(-1.0605708718299867), 'hyper_actor_loss': np.float64(0.054867558926343915), 'behavior_loss': np.float64(1.6766376137733459)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False, False,  True,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False,  True, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1160, time diff 0.9234318733215332, total time dif 94.2202296257019)
step: 1160 @ episode report: {'average_total_reward': np.float32(4.9355555), 'reward_variance': np.float32(0.49177274), 'max_total_reward': np.float32(6.533334), 'min_total_reward': np.float32(4.2888894), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 39168} @ step loss: {'critic_loss': np.float64(0.1498754382133484), 'actor_loss': np.float64(-0.981532347202301), 'hyper_actor_loss': np.float64(0.05481695905327797), 'behavior_loss': np.float64(1.5892383456230164)}

tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False,  True, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False,  True, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
         True, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
Episode step 1170, time diff 1.018514633178711, total time dif 95.14366149902344)
step: 1170 @ episode report: {'average_total_reward': np.float32(5.3233333), 'reward_variance': np.float32(0.8643571), 'max_total_reward': np.float32(6.5333343), 'min_total_reward': np.float32(4.0444446), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 39488} @ step loss: {'critic_loss': np.float64(0.14395955130457877), 'actor_loss': np.float64(-1.033790397644043), 'hyper_actor_loss': np.float64(0.0547075804322958), 'behavior_loss': np.float64(1.7057726860046387)}

tensor([False, False,  True,  True,  True, False, False,  True,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True,  True, False,  True,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False,  True, False,  True, False,  True, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False,  True, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False,  True,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1180, time diff 1.0719349384307861, total time dif 96.16217613220215)
step: 1180 @ episode report: {'average_total_reward': np.float32(5.06), 'reward_variance': np.float32(1.7265975), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 39808} @ step loss: {'critic_loss': np.float64(0.15152813643217086), 'actor_loss': np.float64(-0.9924762189388275), 'hyper_actor_loss': np.float64(0.054742825031280515), 'behavior_loss': np.float64(1.6547252416610718)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True,  True,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
Episode step 1190, time diff 0.9556460380554199, total time dif 97.23411107063293)
step: 1190 @ episode report: {'average_total_reward': np.float32(5.5477777), 'reward_variance': np.float32(1.4364456), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(4.0444446), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 40128} @ step loss: {'critic_loss': np.float64(0.1484264090657234), 'actor_loss': np.float64(-0.9955641984939575), 'hyper_actor_loss': np.float64(0.05456359460949898), 'behavior_loss': np.float64(1.7015217304229737)}

tensor([False, False, False, False,  True, False, False,  True, False,  True,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False,  True])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False,  True, False, False,  True, False, False,  True, False, False,
         True, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False,  True,
         True, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False,  True, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
Episode step 1200, time diff 1.079373836517334, total time dif 98.18975710868835)
step: 1200 @ episode report: {'average_total_reward': np.float32(5.6333337), 'reward_variance': np.float32(0.6959752), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(4.533334), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 40448} @ step loss: {'critic_loss': np.float64(0.1497540958225727), 'actor_loss': np.float64(-0.9952253639698029), 'hyper_actor_loss': np.float64(0.05433260388672352), 'behavior_loss': np.float64(1.6922670125961303)}

tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False,  True,  True, False, False, False,  True,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False,  True, False, False,  True,  True, False,
        False, False])
Episode step 1210, time diff 1.0204176902770996, total time dif 99.26913094520569)
step: 1210 @ episode report: {'average_total_reward': np.float32(5.9455557), 'reward_variance': np.float32(0.44052964), 'max_total_reward': np.float32(7.411112), 'min_total_reward': np.float32(5.411111), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(7.0), 'buffer_size': 40768} @ step loss: {'critic_loss': np.float64(0.1483310006558895), 'actor_loss': np.float64(-0.9735747933387756), 'hyper_actor_loss': np.float64(0.05433236099779606), 'behavior_loss': np.float64(1.7252068877220155)}

tensor([False, False, False, False,  True, False, False, False, False,  True,
         True, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False,  True,  True, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True,  True,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
Episode step 1220, time diff 0.8243930339813232, total time dif 100.28954863548279)
step: 1220 @ episode report: {'average_total_reward': np.float32(5.123333), 'reward_variance': np.float32(1.2291716), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 41088} @ step loss: {'critic_loss': np.float64(0.16003359481692314), 'actor_loss': np.float64(-1.0000398933887482), 'hyper_actor_loss': np.float64(0.05431218557059765), 'behavior_loss': np.float64(1.6977213263511657)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True,  True, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False,  True, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False,  True,
         True, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
Episode step 1230, time diff 0.9118924140930176, total time dif 101.11394166946411)
step: 1230 @ episode report: {'average_total_reward': np.float32(5.908889), 'reward_variance': np.float32(0.22799511), 'max_total_reward': np.float32(6.6555567), 'min_total_reward': np.float32(5.4111114), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(7.0), 'buffer_size': 41408} @ step loss: {'critic_loss': np.float64(0.14724406599998474), 'actor_loss': np.float64(-0.9836784601211548), 'hyper_actor_loss': np.float64(0.05449995845556259), 'behavior_loss': np.float64(1.7163588404655457)}

tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False,  True, False, False,  True,
        False, False,  True, False, False, False, False, False, False,  True,
         True, False])
tensor([ True, False,  True, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
Episode step 1240, time diff 1.0201313495635986, total time dif 102.02583408355713)
step: 1240 @ episode report: {'average_total_reward': np.float32(5.5211115), 'reward_variance': np.float32(1.2162831), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(4.5333333), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 41728} @ step loss: {'critic_loss': np.float64(0.143541070073843), 'actor_loss': np.float64(-1.0019397258758544), 'hyper_actor_loss': np.float64(0.054405394569039346), 'behavior_loss': np.float64(1.7605416655540467)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True,  True, False,
         True,  True, False, False, False,  True, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True,  True,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False,  True,
         True,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
Episode step 1250, time diff 0.9988083839416504, total time dif 103.04596543312073)
step: 1250 @ episode report: {'average_total_reward': np.float32(4.96), 'reward_variance': np.float32(1.905462), 'max_total_reward': np.float32(7.5333343), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 42048} @ step loss: {'critic_loss': np.float64(0.14729909002780914), 'actor_loss': np.float64(-0.9994961380958557), 'hyper_actor_loss': np.float64(0.05424192287027836), 'behavior_loss': np.float64(1.7174851298332214)}

tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
         True, False, False,  True, False,  True, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 1260, time diff 0.8667287826538086, total time dif 104.04477381706238)
step: 1260 @ episode report: {'average_total_reward': np.float32(5.857778), 'reward_variance': np.float32(1.4660689), 'max_total_reward': np.float32(8.777778), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 42368} @ step loss: {'critic_loss': np.float64(0.15430022180080413), 'actor_loss': np.float64(-0.9714549005031585), 'hyper_actor_loss': np.float64(0.054424002021551135), 'behavior_loss': np.float64(1.8169782280921936)}

tensor([False, False,  True, False, False,  True, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True,  True,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False,  True, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False,  True,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True])
Episode step 1270, time diff 0.9929702281951904, total time dif 104.91150259971619)
step: 1270 @ episode report: {'average_total_reward': np.float32(6.2333336), 'reward_variance': np.float32(2.6280007), 'max_total_reward': np.float32(8.777779), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(7.7), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 42688} @ step loss: {'critic_loss': np.float64(0.1418065331876278), 'actor_loss': np.float64(-1.014468067884445), 'hyper_actor_loss': np.float64(0.05446579083800316), 'behavior_loss': np.float64(1.6950243592262269)}

tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False,  True,
        False, False,  True, False,  True, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
         True, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False,  True, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
Episode step 1280, time diff 0.9505622386932373, total time dif 105.90447282791138)
step: 1280 @ episode report: {'average_total_reward': np.float32(5.6722226), 'reward_variance': np.float32(1.6734622), 'max_total_reward': np.float32(8.655555), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 43008} @ step loss: {'critic_loss': np.float64(0.13838596343994142), 'actor_loss': np.float64(-0.998897248506546), 'hyper_actor_loss': np.float64(0.05434541180729866), 'behavior_loss': np.float64(1.7174841046333313)}

tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False,  True, False, False,  True, False, False, False, False,
         True, False,  True, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
         True, False])
Episode step 1290, time diff 0.9382915496826172, total time dif 106.85503506660461)
step: 1290 @ episode report: {'average_total_reward': np.float32(5.808889), 'reward_variance': np.float32(1.7642174), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 43328} @ step loss: {'critic_loss': np.float64(0.13485075086355208), 'actor_loss': np.float64(-1.0001335382461547), 'hyper_actor_loss': np.float64(0.0542290560901165), 'behavior_loss': np.float64(1.6955666899681092)}

tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False,  True,
         True, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False,  True, False, False, False,  True, False,
         True, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 1300, time diff 0.9352471828460693, total time dif 107.79332661628723)
step: 1300 @ episode report: {'average_total_reward': np.float32(5.496667), 'reward_variance': np.float32(0.93377954), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 43648} @ step loss: {'critic_loss': np.float64(0.140407732129097), 'actor_loss': np.float64(-1.0060433089733123), 'hyper_actor_loss': np.float64(0.05405998528003693), 'behavior_loss': np.float64(1.7096898794174193)}

tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False,  True,  True, False, False, False, False,
         True, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True,  True, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
Episode step 1310, time diff 0.9937474727630615, total time dif 108.7285737991333)
step: 1310 @ episode report: {'average_total_reward': np.float32(5.572222), 'reward_variance': np.float32(1.0097102), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 43968} @ step loss: {'critic_loss': np.float64(0.15633797869086266), 'actor_loss': np.float64(-0.983564031124115), 'hyper_actor_loss': np.float64(0.053942755237221716), 'behavior_loss': np.float64(1.7141530632972717)}

tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True,  True,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True,  True, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
         True, False])
Episode step 1320, time diff 0.9032108783721924, total time dif 109.72232127189636)
step: 1320 @ episode report: {'average_total_reward': np.float32(5.233333), 'reward_variance': np.float32(2.1486914), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(3.2888894), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 44288} @ step loss: {'critic_loss': np.float64(0.14193551242351532), 'actor_loss': np.float64(-1.0242870032787323), 'hyper_actor_loss': np.float64(0.05361450724303722), 'behavior_loss': np.float64(1.7621238946914672)}

tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False,  True, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False,  True,  True, False,  True, False, False, False,  True,
         True, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False,  True, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 1330, time diff 0.866227388381958, total time dif 110.62553215026855)
step: 1330 @ episode report: {'average_total_reward': np.float32(5.7822223), 'reward_variance': np.float32(1.0692396), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 44608} @ step loss: {'critic_loss': np.float64(0.1365819662809372), 'actor_loss': np.float64(-0.9902884125709533), 'hyper_actor_loss': np.float64(0.053056827187538146), 'behavior_loss': np.float64(1.7854085564613342)}

tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False,  True,  True,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False,  True, False, False,  True,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False,  True,  True,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True,  True, False,  True, False, False,  True,
         True,  True, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True,  True])
Episode step 1340, time diff 0.8803937435150146, total time dif 111.49175953865051)
step: 1340 @ episode report: {'average_total_reward': np.float32(5.833334), 'reward_variance': np.float32(2.2673829), 'max_total_reward': np.float32(10.0222225), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(11.0), 'min_n_step': np.float32(6.0), 'buffer_size': 44928} @ step loss: {'critic_loss': np.float64(0.15040028616786003), 'actor_loss': np.float64(-1.0201447427272796), 'hyper_actor_loss': np.float64(0.05267553925514221), 'behavior_loss': np.float64(1.7730379939079284)}

tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False,  True, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False,  True,
        False, False, False,  True, False,  True, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False,  True, False,  True, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
Episode step 1350, time diff 1.0691602230072021, total time dif 112.37215328216553)
step: 1350 @ episode report: {'average_total_reward': np.float32(5.708889), 'reward_variance': np.float32(1.1811308), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.533334), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 45248} @ step loss: {'critic_loss': np.float64(0.1339475266635418), 'actor_loss': np.float64(-0.9909674525260925), 'hyper_actor_loss': np.float64(0.05269574373960495), 'behavior_loss': np.float64(1.7128212928771973)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
         True,  True, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False,  True, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False,  True, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False,  True, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1360, time diff 0.9435410499572754, total time dif 113.44131350517273)
step: 1360 @ episode report: {'average_total_reward': np.float32(5.3722224), 'reward_variance': np.float32(0.9667967), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(4.2888894), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 45568} @ step loss: {'critic_loss': np.float64(0.1378592684864998), 'actor_loss': np.float64(-1.0437114119529725), 'hyper_actor_loss': np.float64(0.05241505913436413), 'behavior_loss': np.float64(1.7864622592926025)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False,  True, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True,  True, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True,  True, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
         True,  True])
Episode step 1370, time diff 0.8394904136657715, total time dif 114.38485455513)
step: 1370 @ episode report: {'average_total_reward': np.float32(6.2066665), 'reward_variance': np.float32(1.1571163), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 45888} @ step loss: {'critic_loss': np.float64(0.14790606126189232), 'actor_loss': np.float64(-1.0107923924922944), 'hyper_actor_loss': np.float64(0.05196957103908062), 'behavior_loss': np.float64(1.8174054741859436)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True,  True, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True,  True, False, False, False, False, False,  True, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
Episode step 1380, time diff 0.912318229675293, total time dif 115.22434496879578)
step: 1380 @ episode report: {'average_total_reward': np.float32(5.733333), 'reward_variance': np.float32(1.1734815), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(3.2888887), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 46208} @ step loss: {'critic_loss': np.float64(0.14840961024165153), 'actor_loss': np.float64(-0.9899596452713013), 'hyper_actor_loss': np.float64(0.05136862322688103), 'behavior_loss': np.float64(1.8361170768737793)}

tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False,  True, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False,  True, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False,  True,  True, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False,  True, False, False,  True, False, False,
        False, False])
Episode step 1390, time diff 0.8739237785339355, total time dif 116.13666319847107)
step: 1390 @ episode report: {'average_total_reward': np.float32(5.1966667), 'reward_variance': np.float32(1.7163473), 'max_total_reward': np.float32(7.5333343), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 46528} @ step loss: {'critic_loss': np.float64(0.13733566477894782), 'actor_loss': np.float64(-1.0169452786445619), 'hyper_actor_loss': np.float64(0.050637838616967204), 'behavior_loss': np.float64(1.80843186378479)}

tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False,  True,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
Episode step 1400, time diff 0.9279732704162598, total time dif 117.010586977005)
step: 1400 @ episode report: {'average_total_reward': np.float32(5.7211113), 'reward_variance': np.float32(1.500406), 'max_total_reward': np.float32(6.7777777), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 46848} @ step loss: {'critic_loss': np.float64(0.13864973485469817), 'actor_loss': np.float64(-0.926635468006134), 'hyper_actor_loss': np.float64(0.04989693388342857), 'behavior_loss': np.float64(1.9201205134391786)}

tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True,  True, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False,  True,  True,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True,  True,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
Episode step 1410, time diff 0.877324104309082, total time dif 117.93856024742126)
step: 1410 @ episode report: {'average_total_reward': np.float32(4.8599997), 'reward_variance': np.float32(0.74163496), 'max_total_reward': np.float32(6.5333343), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 47168} @ step loss: {'critic_loss': np.float64(0.13241206258535385), 'actor_loss': np.float64(-0.990109521150589), 'hyper_actor_loss': np.float64(0.04934035614132881), 'behavior_loss': np.float64(1.835768210887909)}

tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([ True, False,  True, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False,  True, False, False,  True,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False,  True,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([ True, False, False,  True,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False,  True, False, False,
         True,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 1420, time diff 0.8785653114318848, total time dif 118.81588435173035)
step: 1420 @ episode report: {'average_total_reward': np.float32(5.784445), 'reward_variance': np.float32(1.1845233), 'max_total_reward': np.float32(7.533334), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 47488} @ step loss: {'critic_loss': np.float64(0.1419954091310501), 'actor_loss': np.float64(-1.0140315890312195), 'hyper_actor_loss': np.float64(0.04901962913572788), 'behavior_loss': np.float64(1.8144725680351257)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([ True,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False,  True,  True,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
Episode step 1430, time diff 0.8863515853881836, total time dif 119.69444966316223)
step: 1430 @ episode report: {'average_total_reward': np.float32(5.3966665), 'reward_variance': np.float32(3.1771374), 'max_total_reward': np.float32(8.777779), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 47808} @ step loss: {'critic_loss': np.float64(0.1300050973892212), 'actor_loss': np.float64(-0.9617650210857391), 'hyper_actor_loss': np.float64(0.048464756458997726), 'behavior_loss': np.float64(1.821553385257721)}

tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
         True, False, False, False, False, False,  True, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False,  True,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
Episode step 1440, time diff 0.9371650218963623, total time dif 120.58080124855042)
step: 1440 @ episode report: {'average_total_reward': np.float32(5.7966666), 'reward_variance': np.float32(1.9263966), 'max_total_reward': np.float32(8.411112), 'min_total_reward': np.float32(4.1666665), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 48128} @ step loss: {'critic_loss': np.float64(0.1325913019478321), 'actor_loss': np.float64(-1.0039718210697175), 'hyper_actor_loss': np.float64(0.048381808772683145), 'behavior_loss': np.float64(1.7926085710525512)}

tensor([False, False, False,  True, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False,  True,  True,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False,  True,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
         True, False,  True, False,  True,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([ True,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False,  True,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1450, time diff 0.9694242477416992, total time dif 121.51796627044678)
step: 1450 @ episode report: {'average_total_reward': np.float32(5.608889), 'reward_variance': np.float32(2.0479217), 'max_total_reward': np.float32(8.900002), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 48448} @ step loss: {'critic_loss': np.float64(0.1258586637675762), 'actor_loss': np.float64(-0.9525469779968262), 'hyper_actor_loss': np.float64(0.048071668669581416), 'behavior_loss': np.float64(1.7736340522766114)}

tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True,  True, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False,  True,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
Episode step 1460, time diff 0.9729371070861816, total time dif 122.48739051818848)
step: 1460 @ episode report: {'average_total_reward': np.float32(5.745556), 'reward_variance': np.float32(0.8751467), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.533334), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 48768} @ step loss: {'critic_loss': np.float64(0.12886482253670692), 'actor_loss': np.float64(-0.9599946498870849), 'hyper_actor_loss': np.float64(0.0477973211556673), 'behavior_loss': np.float64(1.8301607131958009)}

tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
Episode step 1470, time diff 1.0511736869812012, total time dif 123.46032762527466)
step: 1470 @ episode report: {'average_total_reward': np.float32(5.5844445), 'reward_variance': np.float32(1.7961534), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 49088} @ step loss: {'critic_loss': np.float64(0.13975259587168692), 'actor_loss': np.float64(-1.0151653170585633), 'hyper_actor_loss': np.float64(0.047587651014328006), 'behavior_loss': np.float64(1.850872540473938)}

tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False,  True,  True, False,
        False, False, False, False,  True,  True, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False,  True,  True,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
         True, False])
Episode step 1480, time diff 0.8665094375610352, total time dif 124.51150131225586)
step: 1480 @ episode report: {'average_total_reward': np.float32(5.857778), 'reward_variance': np.float32(1.101477), 'max_total_reward': np.float32(7.5333343), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 49408} @ step loss: {'critic_loss': np.float64(0.12502546161413192), 'actor_loss': np.float64(-0.9570513010025025), 'hyper_actor_loss': np.float64(0.04731903783977032), 'behavior_loss': np.float64(1.8295994520187377)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False,  True,  True, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False,  True, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 1490, time diff 0.8207271099090576, total time dif 125.3780107498169)
step: 1490 @ episode report: {'average_total_reward': np.float32(5.047778), 'reward_variance': np.float32(0.6200507), 'max_total_reward': np.float32(6.4111114), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 49728} @ step loss: {'critic_loss': np.float64(0.13964259773492813), 'actor_loss': np.float64(-1.0104896128177643), 'hyper_actor_loss': np.float64(0.047083272412419316), 'behavior_loss': np.float64(1.8279457688331604)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False,  True, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1500, time diff 0.837061882019043, total time dif 126.19873785972595)
step: 1500 @ episode report: {'average_total_reward': np.float32(5.921111), 'reward_variance': np.float32(1.8646042), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 50048} @ step loss: {'critic_loss': np.float64(0.12923851236701012), 'actor_loss': np.float64(-1.0006048560142518), 'hyper_actor_loss': np.float64(0.04709465987980366), 'behavior_loss': np.float64(1.8717789888381957)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False,  True, False, False,  True, False, False, False, False,
        False, False])
Episode step 1510, time diff 0.9711883068084717, total time dif 127.035799741745)
step: 1510 @ episode report: {'average_total_reward': np.float32(6.0577774), 'reward_variance': np.float32(3.0045621), 'max_total_reward': np.float32(8.9), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.5), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 50368} @ step loss: {'critic_loss': np.float64(0.1289329320192337), 'actor_loss': np.float64(-0.9553293585777283), 'hyper_actor_loss': np.float64(0.04712521806359291), 'behavior_loss': np.float64(1.838434886932373)}

tensor([False, False, False, False, False,  True, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
         True, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False,  True,  True, False,  True, False,
        False, False, False,  True,  True, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False,  True])
Episode step 1520, time diff 0.9567902088165283, total time dif 128.00698804855347)
step: 1520 @ episode report: {'average_total_reward': np.float32(5.772222), 'reward_variance': np.float32(0.23193216), 'max_total_reward': np.float32(6.533334), 'min_total_reward': np.float32(5.288889), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(7.0), 'buffer_size': 50688} @ step loss: {'critic_loss': np.float64(0.13049038350582123), 'actor_loss': np.float64(-0.994832980632782), 'hyper_actor_loss': np.float64(0.04732729122042656), 'behavior_loss': np.float64(1.9278950333595275)}

tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True,  True,  True, False, False, False, False,  True,  True,
        False, False,  True, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False,  True,  True, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 1530, time diff 0.9154436588287354, total time dif 128.96377825737)
step: 1530 @ episode report: {'average_total_reward': np.float32(5.8700004), 'reward_variance': np.float32(1.6749647), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 51008} @ step loss: {'critic_loss': np.float64(0.12310471162199974), 'actor_loss': np.float64(-0.9790185034275055), 'hyper_actor_loss': np.float64(0.04747292250394821), 'behavior_loss': np.float64(1.7959522485733033)}

tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False,  True,  True, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1540, time diff 0.9368655681610107, total time dif 129.87922191619873)
step: 1540 @ episode report: {'average_total_reward': np.float32(4.7622223), 'reward_variance': np.float32(1.0318072), 'max_total_reward': np.float32(6.4111114), 'min_total_reward': np.float32(2.9222226), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 51328} @ step loss: {'critic_loss': np.float64(0.13345985114574432), 'actor_loss': np.float64(-0.9937010884284974), 'hyper_actor_loss': np.float64(0.047407329082489014), 'behavior_loss': np.float64(1.8778596639633178)}

tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False,  True,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False,  True, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
         True,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
         True, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
         True, False])
Episode step 1550, time diff 0.965423583984375, total time dif 130.81608748435974)
step: 1550 @ episode report: {'average_total_reward': np.float32(5.2355556), 'reward_variance': np.float32(1.3367608), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 51648} @ step loss: {'critic_loss': np.float64(0.13118527829647064), 'actor_loss': np.float64(-0.9979750156402588), 'hyper_actor_loss': np.float64(0.047829437628388406), 'behavior_loss': np.float64(1.8762091994285583)}

tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True,  True, False, False, False,  True, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
         True, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False,  True,  True,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
         True, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True,  True, False,
        False, False])
Episode step 1560, time diff 0.8722412586212158, total time dif 131.78151106834412)
step: 1560 @ episode report: {'average_total_reward': np.float32(6.4822226), 'reward_variance': np.float32(1.8315605), 'max_total_reward': np.float32(8.777779), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.9), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 51968} @ step loss: {'critic_loss': np.float64(0.12425338327884675), 'actor_loss': np.float64(-1.013730949163437), 'hyper_actor_loss': np.float64(0.04803227595984936), 'behavior_loss': np.float64(1.8358124256134034)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True,  True,  True,
        False, False, False,  True, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False,  True,  True, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
Episode step 1570, time diff 0.8396990299224854, total time dif 132.65375232696533)
step: 1570 @ episode report: {'average_total_reward': np.float32(5.4111114), 'reward_variance': np.float32(0.49424714), 'max_total_reward': np.float32(6.655556), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 52288} @ step loss: {'critic_loss': np.float64(0.11594276577234268), 'actor_loss': np.float64(-0.9954376935958862), 'hyper_actor_loss': np.float64(0.04811853058636188), 'behavior_loss': np.float64(1.818772292137146)}

tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False,  True,  True,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
         True, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1580, time diff 0.9332613945007324, total time dif 133.49345135688782)
step: 1580 @ episode report: {'average_total_reward': np.float32(5.1111107), 'reward_variance': np.float32(0.70125926), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 52608} @ step loss: {'critic_loss': np.float64(0.12841499894857406), 'actor_loss': np.float64(-0.966612708568573), 'hyper_actor_loss': np.float64(0.04806923642754555), 'behavior_loss': np.float64(1.8094604849815368)}

tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True,  True,  True,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False,  True,
         True, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False,  True])
Episode step 1590, time diff 0.9821398258209229, total time dif 134.42671275138855)
step: 1590 @ episode report: {'average_total_reward': np.float32(5.635556), 'reward_variance': np.float32(0.8194273), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 52928} @ step loss: {'critic_loss': np.float64(0.11999276131391526), 'actor_loss': np.float64(-0.9530832588672637), 'hyper_actor_loss': np.float64(0.048375729471445084), 'behavior_loss': np.float64(1.7611355304718017)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False,  True, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False,  True, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False,  True, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1600, time diff 0.8681073188781738, total time dif 135.40885257720947)
step: 1600 @ episode report: {'average_total_reward': np.float32(5.123334), 'reward_variance': np.float32(1.7234188), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 53248} @ step loss: {'critic_loss': np.float64(0.1314608186483383), 'actor_loss': np.float64(-0.9955780029296875), 'hyper_actor_loss': np.float64(0.048407552391290666), 'behavior_loss': np.float64(1.7192872285842895)}

tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True,  True, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False,  True,
         True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1610, time diff 0.9488751888275146, total time dif 136.27695989608765)
step: 1610 @ episode report: {'average_total_reward': np.float32(5.46), 'reward_variance': np.float32(0.6429678), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 53568} @ step loss: {'critic_loss': np.float64(0.1299096629023552), 'actor_loss': np.float64(-0.9650722682476044), 'hyper_actor_loss': np.float64(0.0478616613894701), 'behavior_loss': np.float64(1.8172788500785828)}

tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True,  True,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1620, time diff 0.8574013710021973, total time dif 137.22583508491516)
step: 1620 @ episode report: {'average_total_reward': np.float32(5.46), 'reward_variance': np.float32(0.87039983), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 53888} @ step loss: {'critic_loss': np.float64(0.13118070363998413), 'actor_loss': np.float64(-0.9887782394886017), 'hyper_actor_loss': np.float64(0.04763626642525196), 'behavior_loss': np.float64(1.845150852203369)}

tensor([False, False,  True, False, False,  True,  True, False,  True,  True,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False,  True, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False,  True,  True, False,
        False,  True, False, False,  True, False, False,  True, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
         True, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
Episode step 1630, time diff 0.8740363121032715, total time dif 138.08323645591736)
step: 1630 @ episode report: {'average_total_reward': np.float32(5.608889), 'reward_variance': np.float32(1.4129828), 'max_total_reward': np.float32(7.533334), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 54208} @ step loss: {'critic_loss': np.float64(0.12259693592786788), 'actor_loss': np.float64(-0.9685751974582673), 'hyper_actor_loss': np.float64(0.047122276946902276), 'behavior_loss': np.float64(1.8245452284812926)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False,  True,  True,  True,
         True,  True,  True, False,  True,  True, False,  True, False,  True,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1640, time diff 0.8401434421539307, total time dif 138.95727276802063)
step: 1640 @ episode report: {'average_total_reward': np.float32(5.335556), 'reward_variance': np.float32(0.9885384), 'max_total_reward': np.float32(7.533334), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 54528} @ step loss: {'critic_loss': np.float64(0.13388631343841553), 'actor_loss': np.float64(-1.0021272718906402), 'hyper_actor_loss': np.float64(0.04678933843970299), 'behavior_loss': np.float64(1.9192806124687194)}

tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False,  True,  True, False,  True, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False,  True, False, False, False,  True,
        False,  True, False, False, False, False, False, False,  True,  True,
        False, False])
Episode step 1650, time diff 0.8322935104370117, total time dif 139.79741621017456)
step: 1650 @ episode report: {'average_total_reward': np.float32(6.2333336), 'reward_variance': np.float32(1.6843212), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 54848} @ step loss: {'critic_loss': np.float64(0.12628988698124885), 'actor_loss': np.float64(-0.9413023233413697), 'hyper_actor_loss': np.float64(0.04666739776730537), 'behavior_loss': np.float64(1.8955726504325867)}

tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False,  True,  True, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
Episode step 1660, time diff 0.8532309532165527, total time dif 140.62970972061157)
step: 1660 @ episode report: {'average_total_reward': np.float32(5.3333335), 'reward_variance': np.float32(1.0786917), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 55168} @ step loss: {'critic_loss': np.float64(0.12280113473534585), 'actor_loss': np.float64(-0.9507710456848144), 'hyper_actor_loss': np.float64(0.04693318456411362), 'behavior_loss': np.float64(1.9043313026428224)}

tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True,  True, False, False,  True, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True,  True, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
Episode step 1670, time diff 0.802208423614502, total time dif 141.48294067382812)
step: 1670 @ episode report: {'average_total_reward': np.float32(5.1622224), 'reward_variance': np.float32(0.99988186), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.2888887), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 55488} @ step loss: {'critic_loss': np.float64(0.11649411469697953), 'actor_loss': np.float64(-0.9578773319721222), 'hyper_actor_loss': np.float64(0.047179221734404565), 'behavior_loss': np.float64(1.8170308351516724)}

tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False,  True, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False,  True,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True,  True, False, False,  True,
        False, False])
tensor([False,  True, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1680, time diff 0.8769826889038086, total time dif 142.28514909744263)
step: 1680 @ episode report: {'average_total_reward': np.float32(6.072222), 'reward_variance': np.float32(1.2327719), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 55808} @ step loss: {'critic_loss': np.float64(0.13918621614575385), 'actor_loss': np.float64(-0.9927918493747712), 'hyper_actor_loss': np.float64(0.048051823303103446), 'behavior_loss': np.float64(1.792728352546692)}

tensor([ True, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False,  True, False,  True,  True, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
Episode step 1690, time diff 0.8676884174346924, total time dif 143.16213178634644)
step: 1690 @ episode report: {'average_total_reward': np.float32(6.096667), 'reward_variance': np.float32(3.1844459), 'max_total_reward': np.float32(9.777778), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.6), 'max_n_step': np.float32(11.0), 'min_n_step': np.float32(6.0), 'buffer_size': 56128} @ step loss: {'critic_loss': np.float64(0.1335071712732315), 'actor_loss': np.float64(-0.9852986216545105), 'hyper_actor_loss': np.float64(0.04945577085018158), 'behavior_loss': np.float64(1.874517571926117)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False,  True,  True, False,  True, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False,  True,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False,  True,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
         True, False,  True, False,  True, False, False,  True, False, False,
        False, False])
Episode step 1700, time diff 0.8250589370727539, total time dif 144.02982020378113)
step: 1700 @ episode report: {'average_total_reward': np.float32(5.0111113), 'reward_variance': np.float32(1.2853584), 'max_total_reward': np.float32(7.28889), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 56448} @ step loss: {'critic_loss': np.float64(0.1270664356648922), 'actor_loss': np.float64(-0.9841770172119141), 'hyper_actor_loss': np.float64(0.05075347423553467), 'behavior_loss': np.float64(1.827328908443451)}

tensor([False, False, False,  True, False, False,  True, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True,  True, False, False, False,  True, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
Episode step 1710, time diff 0.840317964553833, total time dif 144.85487914085388)
step: 1710 @ episode report: {'average_total_reward': np.float32(4.8966665), 'reward_variance': np.float32(0.864495), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.1666667), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 56768} @ step loss: {'critic_loss': np.float64(0.1311521425843239), 'actor_loss': np.float64(-0.9870877861976624), 'hyper_actor_loss': np.float64(0.052296021953225136), 'behavior_loss': np.float64(1.7139952301979064)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False,  True, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False,  True, False,  True,  True, False, False, False, False,
        False, False])
Episode step 1720, time diff 0.8106746673583984, total time dif 145.69519710540771)
step: 1720 @ episode report: {'average_total_reward': np.float32(5.26), 'reward_variance': np.float32(2.4085734), 'max_total_reward': np.float32(8.777779), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 57088} @ step loss: {'critic_loss': np.float64(0.13445562347769738), 'actor_loss': np.float64(-1.0262972474098206), 'hyper_actor_loss': np.float64(0.054013867676258084), 'behavior_loss': np.float64(1.7207470059394836)}

tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False,  True,  True,  True,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
         True, False])
Episode step 1730, time diff 0.8100285530090332, total time dif 146.5058717727661)
step: 1730 @ episode report: {'average_total_reward': np.float32(5.6211114), 'reward_variance': np.float32(0.73317164), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 57408} @ step loss: {'critic_loss': np.float64(0.12698041647672653), 'actor_loss': np.float64(-0.9570950329303741), 'hyper_actor_loss': np.float64(0.0558068223297596), 'behavior_loss': np.float64(1.6593162298202515)}

tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False,  True,  True, False,  True, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False,  True,  True,
         True, False])
tensor([ True, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
Episode step 1740, time diff 0.8457620143890381, total time dif 147.31590032577515)
step: 1740 @ episode report: {'average_total_reward': np.float32(5.2477775), 'reward_variance': np.float32(2.831211), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 57728} @ step loss: {'critic_loss': np.float64(0.12401477545499802), 'actor_loss': np.float64(-1.0200638473033905), 'hyper_actor_loss': np.float64(0.05711478181183338), 'behavior_loss': np.float64(1.517514431476593)}

tensor([False, False, False, False, False, False, False, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False,  True, False,  True, False, False,  True, False,  True,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True,  True,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 1750, time diff 0.8280436992645264, total time dif 148.16166234016418)
step: 1750 @ episode report: {'average_total_reward': np.float32(5.084445), 'reward_variance': np.float32(0.5142024), 'max_total_reward': np.float32(6.5333333), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 58048} @ step loss: {'critic_loss': np.float64(0.14529690220952035), 'actor_loss': np.float64(-1.0358757376670837), 'hyper_actor_loss': np.float64(0.05857658237218857), 'behavior_loss': np.float64(1.5312719464302063)}

tensor([ True, False,  True, False,  True,  True, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True,  True, False,  True, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
         True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([ True, False,  True, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1760, time diff 0.8276355266571045, total time dif 148.9897060394287)
step: 1760 @ episode report: {'average_total_reward': np.float32(6.345556), 'reward_variance': np.float32(1.549295), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.8), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 58368} @ step loss: {'critic_loss': np.float64(0.1337463915348053), 'actor_loss': np.float64(-1.0927512526512146), 'hyper_actor_loss': np.float64(0.06003221310675144), 'behavior_loss': np.float64(1.4839645981788636)}

tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False,  True,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False,  True,  True,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False,  True, False,
         True, False])
Episode step 1770, time diff 0.8138797283172607, total time dif 149.81734156608582)
step: 1770 @ episode report: {'average_total_reward': np.float32(5.0966673), 'reward_variance': np.float32(0.9998528), 'max_total_reward': np.float32(6.533334), 'min_total_reward': np.float32(3.4111116), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 58688} @ step loss: {'critic_loss': np.float64(0.12737927660346032), 'actor_loss': np.float64(-1.066864800453186), 'hyper_actor_loss': np.float64(0.06262359283864498), 'behavior_loss': np.float64(1.4082119345664978)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False,  True, False, False,  True,
        False, False])
tensor([False, False,  True, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False,  True, False,  True,
        False, False, False,  True, False, False, False,  True, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
         True,  True, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1780, time diff 0.7941033840179443, total time dif 150.63122129440308)
step: 1780 @ episode report: {'average_total_reward': np.float32(6.1455555), 'reward_variance': np.float32(2.2950232), 'max_total_reward': np.float32(9.777778), 'min_total_reward': np.float32(4.2888894), 'average_n_step': np.float32(7.6), 'max_n_step': np.float32(11.0), 'min_n_step': np.float32(6.0), 'buffer_size': 59008} @ step loss: {'critic_loss': np.float64(0.12025602608919143), 'actor_loss': np.float64(-1.078983438014984), 'hyper_actor_loss': np.float64(0.06426216438412666), 'behavior_loss': np.float64(1.3553676724433898)}

tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True,  True, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False,  True, False,  True, False, False, False,
        False, False,  True,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False,  True,  True, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True,  True,
        False, False, False,  True, False,  True, False, False,  True,  True,
        False,  True])
Episode step 1790, time diff 0.8115155696868896, total time dif 151.42532467842102)
step: 1790 @ episode report: {'average_total_reward': np.float32(5.2211113), 'reward_variance': np.float32(0.2863074), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(6.0), 'buffer_size': 59328} @ step loss: {'critic_loss': np.float64(0.1284755527973175), 'actor_loss': np.float64(-1.0319520235061646), 'hyper_actor_loss': np.float64(0.06506480276584625), 'behavior_loss': np.float64(1.3197288274765016)}

tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True,  True, False,  True, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False,  True, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
Episode step 1800, time diff 0.7956874370574951, total time dif 152.2368402481079)
step: 1800 @ episode report: {'average_total_reward': np.float32(4.7622223), 'reward_variance': np.float32(1.5629928), 'max_total_reward': np.float32(6.5333343), 'min_total_reward': np.float32(2.9222221), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 59648} @ step loss: {'critic_loss': np.float64(0.13309489712119102), 'actor_loss': np.float64(-1.022643756866455), 'hyper_actor_loss': np.float64(0.06609485223889351), 'behavior_loss': np.float64(1.3221203088760376)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False,  True,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1810, time diff 0.8176755905151367, total time dif 153.0325276851654)
step: 1810 @ episode report: {'average_total_reward': np.float32(5.321111), 'reward_variance': np.float32(1.1454926), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(4.2888894), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 59968} @ step loss: {'critic_loss': np.float64(0.12917474359273912), 'actor_loss': np.float64(-1.0868626475334167), 'hyper_actor_loss': np.float64(0.06595331877470016), 'behavior_loss': np.float64(1.338237726688385)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False,  True, False, False,  True, False,
        False,  True])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False,  True, False,  True, False, False, False, False,  True,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False,  True,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1820, time diff 0.7842257022857666, total time dif 153.85020327568054)
step: 1820 @ episode report: {'average_total_reward': np.float32(5.2844443), 'reward_variance': np.float32(0.8507702), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 60288} @ step loss: {'critic_loss': np.float64(0.1266879506409168), 'actor_loss': np.float64(-1.069082772731781), 'hyper_actor_loss': np.float64(0.06724326014518738), 'behavior_loss': np.float64(1.3113081932067872)}

tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
         True, False,  True, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False,  True,  True, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False,  True,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True,  True,
        False,  True])
Episode step 1830, time diff 0.9902999401092529, total time dif 154.6344289779663)
step: 1830 @ episode report: {'average_total_reward': np.float32(6.1211114), 'reward_variance': np.float32(1.5442829), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.5333333), 'average_n_step': np.float32(7.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 60608} @ step loss: {'critic_loss': np.float64(0.1341560184955597), 'actor_loss': np.float64(-1.141175675392151), 'hyper_actor_loss': np.float64(0.06783792078495025), 'behavior_loss': np.float64(1.2481043577194213)}

tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False,  True,  True, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
         True, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False,  True,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 1840, time diff 0.7783911228179932, total time dif 155.62472891807556)
step: 1840 @ episode report: {'average_total_reward': np.float32(5.123334), 'reward_variance': np.float32(0.43361616), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 60928} @ step loss: {'critic_loss': np.float64(0.14186671897768974), 'actor_loss': np.float64(-1.0996972560882567), 'hyper_actor_loss': np.float64(0.06882788315415382), 'behavior_loss': np.float64(1.3113274455070496)}

tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False,  True,  True, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True,  True, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False,  True])
tensor([False, False, False,  True,  True, False,  True, False,  True, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
Episode step 1850, time diff 0.8057825565338135, total time dif 156.40312004089355)
step: 1850 @ episode report: {'average_total_reward': np.float32(4.76), 'reward_variance': np.float32(0.5488446), 'max_total_reward': np.float32(5.655556), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.3), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 61248} @ step loss: {'critic_loss': np.float64(0.1442340210080147), 'actor_loss': np.float64(-1.0803790807723999), 'hyper_actor_loss': np.float64(0.06817246600985527), 'behavior_loss': np.float64(1.313791286945343)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False,  True,  True, False, False, False,
         True, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False,  True,  True,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True,  True, False,  True,  True, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1860, time diff 0.825164794921875, total time dif 157.20890259742737)
step: 1860 @ episode report: {'average_total_reward': np.float32(4.686667), 'reward_variance': np.float32(2.6345634), 'max_total_reward': np.float32(7.2888894), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(6.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(4.0), 'buffer_size': 61568} @ step loss: {'critic_loss': np.float64(0.14146071448922157), 'actor_loss': np.float64(-1.0296768486499785), 'hyper_actor_loss': np.float64(0.06736661940813064), 'behavior_loss': np.float64(1.3571067094802856)}

tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([ True, False, False,  True, False, False,  True, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False,  True, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False,  True,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False,  True,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True,  True,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False,  True, False,  True, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 1870, time diff 0.8094267845153809, total time dif 158.03406739234924)
step: 1870 @ episode report: {'average_total_reward': np.float32(4.711111), 'reward_variance': np.float32(0.9042471), 'max_total_reward': np.float32(6.655556), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.3), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 61888} @ step loss: {'critic_loss': np.float64(0.14114163517951966), 'actor_loss': np.float64(-1.130494976043701), 'hyper_actor_loss': np.float64(0.06798093616962433), 'behavior_loss': np.float64(1.3272340059280396)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True,  True, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
         True, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True,  True, False,  True, False, False,  True,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False,  True, False, False, False, False, False,
         True, False,  True, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True, False,  True, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False,  True])
Episode step 1880, time diff 0.8003103733062744, total time dif 158.84349417686462)
step: 1880 @ episode report: {'average_total_reward': np.float32(4.798888), 'reward_variance': np.float32(1.985295), 'max_total_reward': np.float32(7.4111114), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(4.0), 'buffer_size': 62208} @ step loss: {'critic_loss': np.float64(0.1311207614839077), 'actor_loss': np.float64(-1.0800773859024049), 'hyper_actor_loss': np.float64(0.06875864490866661), 'behavior_loss': np.float64(1.267952299118042)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False,  True, False,
         True, False])
tensor([False, False,  True, False,  True, False,  True, False, False,  True,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True,  True, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 1890, time diff 0.7923374176025391, total time dif 159.6438045501709)
step: 1890 @ episode report: {'average_total_reward': np.float32(4.362222), 'reward_variance': np.float32(0.9681778), 'max_total_reward': np.float32(5.533334), 'min_total_reward': np.float32(3.0444448), 'average_n_step': np.float32(6.0), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 62528} @ step loss: {'critic_loss': np.float64(0.135929486900568), 'actor_loss': np.float64(-1.0800468444824218), 'hyper_actor_loss': np.float64(0.0695975236594677), 'behavior_loss': np.float64(1.2259830355644226)}

tensor([False, False, False,  True,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False,  True,
        False,  True])
tensor([ True, False, False, False, False,  True,  True,  True, False, False,
         True, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
         True, False,  True, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
         True,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([ True,  True, False, False, False,  True,  True,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 1900, time diff 0.796379804611206, total time dif 160.43614196777344)
step: 1900 @ episode report: {'average_total_reward': np.float32(4.598889), 'reward_variance': np.float32(1.0006286), 'max_total_reward': np.float32(6.533334), 'min_total_reward': np.float32(2.9222221), 'average_n_step': np.float32(6.2), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 62848} @ step loss: {'critic_loss': np.float64(0.12926676422357558), 'actor_loss': np.float64(-1.0955533862113953), 'hyper_actor_loss': np.float64(0.06985748112201691), 'behavior_loss': np.float64(1.232289683818817)}

tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False,  True,
         True, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([ True, False, False, False, False,  True,  True, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False,  True, False, False,  True, False, False,
         True, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
Episode step 1910, time diff 0.788856029510498, total time dif 161.23252177238464)
step: 1910 @ episode report: {'average_total_reward': np.float32(4.074445), 'reward_variance': np.float32(0.4549643), 'max_total_reward': np.float32(5.533334), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(5.7), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 63168} @ step loss: {'critic_loss': np.float64(0.12278265208005905), 'actor_loss': np.float64(-1.0528465986251831), 'hyper_actor_loss': np.float64(0.07082892805337906), 'behavior_loss': np.float64(1.209042751789093)}

tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False,  True, False, False,  True, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False,  True,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False,  True,  True,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False,  True,  True, False, False, False,  True, False,  True, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
Episode step 1920, time diff 0.7861642837524414, total time dif 162.02137780189514)
step: 1920 @ episode report: {'average_total_reward': np.float32(4.188889), 'reward_variance': np.float32(1.2191855), 'max_total_reward': np.float32(6.655556), 'min_total_reward': np.float32(2.9222224), 'average_n_step': np.float32(5.9), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 63488} @ step loss: {'critic_loss': np.float64(0.15349916070699693), 'actor_loss': np.float64(-1.123805820941925), 'hyper_actor_loss': np.float64(0.07148654088377952), 'behavior_loss': np.float64(1.198325264453888)}

tensor([ True,  True, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False,  True,  True,  True, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False,  True, False,  True,  True, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False,  True,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False,  True, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True,  True, False,  True, False, False,  True,
        False,  True])
tensor([False, False,  True, False,  True, False, False, False,  True, False,
        False,  True, False,  True, False, False, False, False,  True, False,
         True,  True, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
Episode step 1930, time diff 0.8117070198059082, total time dif 162.80754208564758)
step: 1930 @ episode report: {'average_total_reward': np.float32(4.088889), 'reward_variance': np.float32(0.4996051), 'max_total_reward': np.float32(5.288889), 'min_total_reward': np.float32(2.8), 'average_n_step': np.float32(5.8), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 63808} @ step loss: {'critic_loss': np.float64(0.1516793489456177), 'actor_loss': np.float64(-1.0505722284317016), 'hyper_actor_loss': np.float64(0.07130902707576751), 'behavior_loss': np.float64(1.2109348058700562)}

tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([ True,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False,  True, False,  True,
        False,  True, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False,  True,  True, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False,  True,
         True, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False,  True, False, False, False,  True, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False,  True,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False,  True, False,  True,  True, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False,  True, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False,  True,  True, False, False, False,
        False, False])
Episode step 1940, time diff 0.8335366249084473, total time dif 163.6192491054535)
step: 1940 @ episode report: {'average_total_reward': np.float32(3.7133336), 'reward_variance': np.float32(0.85424215), 'max_total_reward': np.float32(5.655556), 'min_total_reward': np.float32(2.1666667), 'average_n_step': np.float32(5.4), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 64128} @ step loss: {'critic_loss': np.float64(0.14434185475111008), 'actor_loss': np.float64(-1.1276126980781556), 'hyper_actor_loss': np.float64(0.07126047387719155), 'behavior_loss': np.float64(1.1822834849357604)}

tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False,  True, False,
        False,  True, False, False,  True, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False,  True,  True, False, False,  True,
         True, False,  True,  True, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False,  True,  True,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False,  True,  True, False,  True, False,
         True,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True,  True, False, False,  True, False, False,
         True, False, False, False,  True, False,  True,  True, False, False,
         True,  True])
Episode step 1950, time diff 0.8087038993835449, total time dif 164.45278573036194)
step: 1950 @ episode report: {'average_total_reward': np.float32(4.164445), 'reward_variance': np.float32(0.8899458), 'max_total_reward': np.float32(5.4111114), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(5.9), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 64448} @ step loss: {'critic_loss': np.float64(0.1494475245475769), 'actor_loss': np.float64(-1.07080637216568), 'hyper_actor_loss': np.float64(0.07247816249728203), 'behavior_loss': np.float64(1.1290300607681274)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False,  True, False,  True, False, False,
        False,  True, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
         True,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([ True, False,  True, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
         True, False])
Episode step 1960, time diff 0.7758564949035645, total time dif 165.26148962974548)
step: 1960 @ episode report: {'average_total_reward': np.float32(4.450001), 'reward_variance': np.float32(1.109389), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(6.1), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(4.0), 'buffer_size': 64768} @ step loss: {'critic_loss': np.float64(0.14963022619485855), 'actor_loss': np.float64(-1.142026948928833), 'hyper_actor_loss': np.float64(0.0743681825697422), 'behavior_loss': np.float64(1.0727851033210754)}

tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
         True, False,  True, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False,  True, False, False, False, False,  True, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False,  True])
tensor([False,  True,  True,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True,  True, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False,  True, False,  True,  True, False,
        False,  True])
Episode step 1970, time diff 0.814460277557373, total time dif 166.03734612464905)
step: 1970 @ episode report: {'average_total_reward': np.float32(4.2744446), 'reward_variance': np.float32(1.2992852), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(2.166667), 'average_n_step': np.float32(5.9), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 65088} @ step loss: {'critic_loss': np.float64(0.15063821375370026), 'actor_loss': np.float64(-1.1146475076675415), 'hyper_actor_loss': np.float64(0.07770885154604912), 'behavior_loss': np.float64(0.977245432138443)}

tensor([False, False, False, False, False,  True, False,  True, False, False,
         True,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
         True, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False,  True,  True,
        False, False,  True, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False,  True,
        False, False, False,  True, False,  True, False, False,  True, False,
        False, False])
tensor([False,  True, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False,  True, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
Episode step 1980, time diff 0.8132662773132324, total time dif 166.85180640220642)
step: 1980 @ episode report: {'average_total_reward': np.float32(4.301111), 'reward_variance': np.float32(0.7808755), 'max_total_reward': np.float32(6.411112), 'min_total_reward': np.float32(2.8000002), 'average_n_step': np.float32(6.0), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 65408} @ step loss: {'critic_loss': np.float64(0.1485654406249523), 'actor_loss': np.float64(-1.2779371380805968), 'hyper_actor_loss': np.float64(0.08428849130868912), 'behavior_loss': np.float64(0.8136529743671417)}

tensor([False,  True,  True, False,  True, False, False, False, False, False,
        False, False, False,  True,  True,  True, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False,  True, False,  True, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False,  True, False, False,
         True,  True])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False,  True,  True, False,
        False, False, False,  True, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False,  True, False, False, False,
        False, False, False,  True,  True, False,  True,  True, False,  True,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 1990, time diff 0.8144679069519043, total time dif 167.66507267951965)
step: 1990 @ episode report: {'average_total_reward': np.float32(4.437778), 'reward_variance': np.float32(1.333684), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(6.1), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 65728} @ step loss: {'critic_loss': np.float64(0.14394187107682227), 'actor_loss': np.float64(-1.446377658843994), 'hyper_actor_loss': np.float64(0.09111992716789245), 'behavior_loss': np.float64(0.6502110123634338)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False,  True,  True,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True,  True, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False,  True, False,  True,  True, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
         True, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True,  True, False,  True, False,
        False,  True])
tensor([False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False,  True, False, False,  True, False,  True,
        False, False])
Episode step 2000, time diff 0.7935948371887207, total time dif 168.47954058647156)
step: 2000 @ episode report: {'average_total_reward': np.float32(3.5155556), 'reward_variance': np.float32(0.23558518), 'max_total_reward': np.float32(4.288889), 'min_total_reward': np.float32(2.8), 'average_n_step': np.float32(5.3), 'max_n_step': np.float32(6.0), 'min_n_step': np.float32(5.0), 'buffer_size': 66048} @ step loss: {'critic_loss': np.float64(0.14191895574331284), 'actor_loss': np.float64(-1.6822715044021606), 'hyper_actor_loss': np.float64(0.09536893591284752), 'behavior_loss': np.float64(0.6081926345825195)}

tensor([False, False, False,  True, False, False, False, False,  True, False,
        False,  True,  True, False,  True, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
         True, False, False,  True, False, False, False,  True, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False,  True, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False,  True, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True,  True, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False,  True,
         True, False, False,  True, False, False,  True, False, False,  True,
        False, False])
tensor([ True, False,  True, False, False,  True,  True, False, False, False,
         True, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 2010, time diff 0.7915327548980713, total time dif 169.27313542366028)
step: 2010 @ episode report: {'average_total_reward': np.float32(3.6377778), 'reward_variance': np.float32(1.0007212), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(5.3), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 66368} @ step loss: {'critic_loss': np.float64(0.15888077840209008), 'actor_loss': np.float64(-1.8062060594558715), 'hyper_actor_loss': np.float64(0.09446245059370995), 'behavior_loss': np.float64(0.5904319167137146)}

tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False,  True, False,  True, False, False, False,  True, False,
         True, False, False,  True, False,  True, False,  True, False, False,
        False, False])
tensor([False, False,  True,  True, False,  True, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True,  True, False,  True, False, False,  True,  True, False,
         True,  True, False,  True, False,  True, False,  True, False, False,
        False, False])
tensor([False, False,  True,  True,  True,  True, False,  True, False, False,
         True, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False,  True,  True, False, False, False, False,  True,  True, False,
         True, False, False,  True, False,  True, False,  True,  True, False,
        False, False])
tensor([False, False,  True,  True,  True, False, False, False, False, False,
         True, False, False, False,  True,  True, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False,  True,
         True,  True])
Episode step 2020, time diff 0.7843947410583496, total time dif 170.06466817855835)
step: 2020 @ episode report: {'average_total_reward': np.float32(3.256667), 'reward_variance': np.float32(0.7493937), 'max_total_reward': np.float32(4.411111), 'min_total_reward': np.float32(1.9222224), 'average_n_step': np.float32(5.2), 'max_n_step': np.float32(6.0), 'min_n_step': np.float32(4.0), 'buffer_size': 66688} @ step loss: {'critic_loss': np.float64(0.16837068498134614), 'actor_loss': np.float64(-1.8192640542984009), 'hyper_actor_loss': np.float64(0.09420705959200859), 'behavior_loss': np.float64(0.5943913638591767)}

tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False,  True,
        False, False,  True,  True, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False,  True,  True, False,  True, False, False,  True, False,
        False,  True])
tensor([False,  True,  True,  True, False, False, False,  True,  True, False,
        False,  True, False, False, False,  True, False,  True,  True,  True,
        False,  True, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
         True, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False,  True, False,  True,
        False, False, False, False,  True, False,  True, False, False, False,
         True,  True,  True,  True, False,  True, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False,  True, False, False, False,  True, False,  True,  True,  True,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
         True, False])
tensor([ True,  True, False, False,  True, False, False, False, False,  True,
        False, False,  True,  True, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 2030, time diff 0.8254172801971436, total time dif 170.8490629196167)
step: 2030 @ episode report: {'average_total_reward': np.float32(1.8833334), 'reward_variance': np.float32(0.25951242), 'max_total_reward': np.float32(2.9222226), 'min_total_reward': np.float32(1.0444446), 'average_n_step': np.float32(3.9), 'max_n_step': np.float32(5.0), 'min_n_step': np.float32(3.0), 'buffer_size': 67008} @ step loss: {'critic_loss': np.float64(0.1529335781931877), 'actor_loss': np.float64(-1.7185009121894836), 'hyper_actor_loss': np.float64(0.09443961679935456), 'behavior_loss': np.float64(0.6026142418384552)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
         True, False,  True,  True,  True,  True, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False,  True,  True, False,
        False,  True, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False,  True,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False,  True,
         True, False, False, False, False, False,  True, False,  True, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True,  True, False, False,  True, False,  True, False, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False,  True, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False,  True, False, False, False,  True, False,  True, False,  True,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False,  True, False, False,  True,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False,  True,
         True, False, False,  True,  True, False, False, False,  True, False,
        False,  True, False, False, False,  True, False,  True, False, False,
         True, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False,  True,  True, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False,  True, False,
        False,  True])
tensor([ True, False, False,  True, False, False, False,  True,  True, False,
        False, False, False, False, False,  True, False,  True, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False,  True, False,  True, False, False,  True,  True, False,  True,
        False, False])
Episode step 2040, time diff 0.7915170192718506, total time dif 171.67448019981384)
step: 2040 @ episode report: {'average_total_reward': np.float32(1.7855556), 'reward_variance': np.float32(0.40395188), 'max_total_reward': np.float32(3.0444446), 'min_total_reward': np.float32(0.8), 'average_n_step': np.float32(3.9), 'max_n_step': np.float32(5.0), 'min_n_step': np.float32(3.0), 'buffer_size': 67328} @ step loss: {'critic_loss': np.float64(0.17679368406534196), 'actor_loss': np.float64(-1.724411141872406), 'hyper_actor_loss': np.float64(0.09341581985354423), 'behavior_loss': np.float64(0.6149876236915588)}

tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False,  True, False, False, False, False,  True, False,
        False, False,  True, False, False,  True, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False,  True,  True,
        False,  True,  True, False, False,  True, False, False, False,  True,
         True, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False,  True,  True, False, False,  True,  True, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False,  True, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([ True, False, False, False,  True, False, False, False, False,  True,
         True, False,  True, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False,  True, False, False,
         True,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False,  True,  True, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True,  True, False,  True, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False,  True,  True,  True, False,  True,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
        False, False,  True,  True,  True, False, False,  True, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True,  True, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True,  True, False, False, False,  True,  True, False, False, False,
        False,  True])
Episode step 2050, time diff 0.7859230041503906, total time dif 172.4659972190857)
step: 2050 @ episode report: {'average_total_reward': np.float32(1.8222224), 'reward_variance': np.float32(0.7167901), 'max_total_reward': np.float32(3.411111), 'min_total_reward': np.float32(0.5555556), 'average_n_step': np.float32(3.9), 'max_n_step': np.float32(5.0), 'min_n_step': np.float32(3.0), 'buffer_size': 67648} @ step loss: {'critic_loss': np.float64(0.22364078760147094), 'actor_loss': np.float64(-1.7833521246910096), 'hyper_actor_loss': np.float64(0.09113689363002778), 'behavior_loss': np.float64(0.6298570156097412)}

tensor([ True, False,  True, False, False, False, False,  True,  True, False,
        False, False,  True, False,  True,  True, False,  True, False,  True,
        False, False, False, False,  True, False, False,  True,  True,  True,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False,  True, False,
        False, False,  True,  True, False,  True,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True,  True, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
         True, False, False, False, False, False, False,  True,  True, False,
        False,  True])
tensor([ True, False,  True, False, False, False, False,  True,  True, False,
        False, False,  True, False, False,  True, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
         True,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False,  True, False, False, False,  True,  True, False,
        False,  True])
tensor([False, False,  True, False,  True, False, False,  True, False, False,
        False,  True,  True, False, False,  True, False,  True, False,  True,
        False,  True, False, False, False, False, False, False, False,  True,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True,  True,  True, False, False, False,
        False, False])
Episode step 2060, time diff 0.983696699142456, total time dif 173.25192022323608)
step: 2060 @ episode report: {'average_total_reward': np.float32(1.5488889), 'reward_variance': np.float32(0.23232591), 'max_total_reward': np.float32(2.288889), 'min_total_reward': np.float32(0.79999995), 'average_n_step': np.float32(3.7), 'max_n_step': np.float32(4.0), 'min_n_step': np.float32(3.0), 'buffer_size': 67968} @ step loss: {'critic_loss': np.float64(0.24043097198009492), 'actor_loss': np.float64(-1.8616509318351746), 'hyper_actor_loss': np.float64(0.0896973691880703), 'behavior_loss': np.float64(0.6089398443698884)}

tensor([False,  True, False,  True, False,  True,  True, False, False, False,
        False, False, False, False,  True, False,  True, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False,  True,  True, False,
        False, False, False, False, False,  True, False,  True, False,  True,
        False,  True,  True,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True,  True,  True, False, False, False, False, False, False,
        False, False, False, False,  True,  True,  True,  True, False,  True,
         True, False])
tensor([ True,  True, False,  True, False, False, False, False, False,  True,
         True, False, False, False,  True, False,  True, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True,  True,  True,  True,  True, False,
        False, False, False, False, False,  True, False,  True, False,  True,
        False,  True, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True,  True,  True, False, False, False, False, False, False,
        False, False,  True, False,  True,  True,  True,  True, False,  True,
         True, False])
tensor([ True,  True, False,  True, False, False,  True, False,  True,  True,
         True, False, False, False,  True, False,  True, False,  True, False,
         True, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True,  True, False,  True, False, False,
        False, False, False, False, False,  True, False,  True, False,  True,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False,  True, False,  True,  True,  True,  True, False,  True,
         True, False])
tensor([ True,  True, False,  True, False, False, False, False,  True,  True,
         True, False, False,  True,  True, False,  True, False,  True,  True,
         True, False, False,  True, False, False, False, False, False, False,
        False,  True])
Episode step 2070, time diff 0.8088748455047607, total time dif 174.23561692237854)
step: 2070 @ episode report: {'average_total_reward': np.float32(0.92666674), 'reward_variance': np.float32(0.3743507), 'max_total_reward': np.float32(2.0444446), 'min_total_reward': np.float32(0.3111111), 'average_n_step': np.float32(3.2), 'max_n_step': np.float32(4.0), 'min_n_step': np.float32(3.0), 'buffer_size': 68288} @ step loss: {'critic_loss': np.float64(0.2643981084227562), 'actor_loss': np.float64(-1.774702787399292), 'hyper_actor_loss': np.float64(0.0911746472120285), 'behavior_loss': np.float64(0.8252123832702637)}

tensor([False, False, False, False,  True,  True, False,  True, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False,  True, False,  True,  True,  True,  True, False,  True,
         True, False])
tensor([False,  True, False,  True, False, False, False, False,  True,  True,
         True, False, False, False,  True, False, False, False,  True,  True,
         True, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False,  True,  True, False,  True, False, False,
        False, False, False,  True, False,  True,  True,  True, False, False,
        False,  True, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False,  True, False, False,  True,
         True, False])
tensor([False,  True, False, False, False, False, False, False,  True,  True,
         True, False, False, False, False, False, False, False,  True,  True,
         True, False, False,  True, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False,  True,  True, False, False,  True, False, False,
        False, False, False,  True,  True,  True,  True,  True, False, False,
        False,  True, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False,  True,  True, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False,  True, False, False,  True,
         True, False])
tensor([False,  True,  True, False, False, False, False, False,  True,  True,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False,  True, False, False,
        False, False, False,  True,  True,  True,  True, False,  True, False,
         True,  True, False, False, False, False, False, False,  True, False,
        False,  True])
Episode step 2080, time diff 0.8241872787475586, total time dif 175.0444917678833)
step: 2080 @ episode report: {'average_total_reward': np.float32(0.83888894), 'reward_variance': np.float32(0.07743828), 'max_total_reward': np.float32(1.4333334), 'min_total_reward': np.float32(0.43333334), 'average_n_step': np.float32(3.1), 'max_n_step': np.float32(4.0), 'min_n_step': np.float32(3.0), 'buffer_size': 68608} @ step loss: {'critic_loss': np.float64(0.24832968562841415), 'actor_loss': np.float64(-1.772518527507782), 'hyper_actor_loss': np.float64(0.09113043397665024), 'behavior_loss': np.float64(1.0022928059101104)}

tensor([ True, False, False, False, False,  True,  True, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False,  True, False,  True,  True,  True, False, False,  True,
         True, False])
tensor([False,  True,  True, False, False, False, False, False, False,  True,
         True, False,  True, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False,  True,  True, False,
        False, False, False,  True,  True,  True, False, False,  True, False,
         True,  True, False, False, False, False, False,  True,  True, False,
        False,  True])
tensor([ True, False, False, False,  True,  True, False, False, False, False,
        False,  True, False, False, False, False,  True,  True, False, False,
        False, False,  True, False,  True,  True,  True, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False,  True, False, False, False,  True, False,  True,
        False, False,  True,  True,  True, False, False, False,  True, False,
         True,  True, False,  True, False, False, False, False,  True, False,
        False,  True])
tensor([ True, False, False, False, False,  True, False, False,  True, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False,  True, False,  True, False,  True,  True, False, False,
        False, False])
tensor([False,  True,  True, False, False, False,  True, False, False, False,
         True, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False,  True,  True, False, False,  True, False,  True,
        False,  True,  True,  True, False, False, False, False, False,  True,
         True,  True, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True,  True, False, False,  True, False,
        False, False, False,  True, False, False,  True,  True,  True, False,
        False, False])
Episode step 2090, time diff 0.7961316108703613, total time dif 175.86867904663086)
step: 2090 @ episode report: {'average_total_reward': np.float32(1.0511112), 'reward_variance': np.float32(0.2298815), 'max_total_reward': np.float32(2.0444446), 'min_total_reward': np.float32(0.55555564), 'average_n_step': np.float32(3.3), 'max_n_step': np.float32(4.0), 'min_n_step': np.float32(3.0), 'buffer_size': 68928} @ step loss: {'critic_loss': np.float64(0.2601972043514252), 'actor_loss': np.float64(-1.7684746384620667), 'hyper_actor_loss': np.float64(0.08920739218592644), 'behavior_loss': np.float64(1.0216870129108429)}

tensor([ True,  True,  True, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False,  True,  True, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False,  True, False, False,
         True,  True,  True,  True, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True, False, False, False,  True,  True,
        False, False, False, False,  True, False, False, False,  True,  True,
        False,  True, False,  True, False, False,  True,  True, False, False,
        False, False])
tensor([ True,  True,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False,  True, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False,  True,  True, False, False,
         True,  True, False,  True, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False,  True, False,  True, False, False, False,  True,  True,
         True,  True, False,  True, False, False,  True,  True, False, False,
         True, False])
tensor([ True,  True,  True, False, False,  True,  True, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False,  True, False, False,
         True,  True, False, False, False,  True, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False,  True,  True,  True, False,  True, False,  True,  True,
         True,  True, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([ True, False,  True, False, False,  True,  True, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False,  True, False, False,  True, False,
         True, False])
Episode step 2100, time diff 0.8235630989074707, total time dif 176.66481065750122)
step: 2100 @ episode report: {'average_total_reward': np.float32(1.1244444), 'reward_variance': np.float32(0.18468639), 'max_total_reward': np.float32(1.8), 'min_total_reward': np.float32(0.43333334), 'average_n_step': np.float32(3.3), 'max_n_step': np.float32(4.0), 'min_n_step': np.float32(3.0), 'buffer_size': 69248} @ step loss: {'critic_loss': np.float64(0.3120758295059204), 'actor_loss': np.float64(-1.653713309764862), 'hyper_actor_loss': np.float64(0.08760325163602829), 'behavior_loss': np.float64(1.022781991958618)}

tensor([False,  True, False,  True, False, False, False,  True, False, False,
         True,  True, False, False, False,  True, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False,  True, False,  True, False,  True, False,  True,  True,
         True,  True, False, False, False, False, False,  True, False,  True,
        False,  True])
tensor([ True, False,  True, False, False, False,  True, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False,  True,  True, False,  True, False,
        False, False])
tensor([False,  True, False,  True, False,  True, False, False, False, False,
         True,  True, False, False, False,  True, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False,  True, False,  True, False,  True,  True,
         True,  True, False, False,  True, False, False,  True, False, False,
        False,  True])
tensor([ True, False,  True, False,  True, False,  True, False,  True, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False,  True,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True,  True, False, False, False,  True, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False,  True, False,  True,
        False, False, False, False,  True, False,  True, False,  True,  True,
         True,  True,  True, False,  True, False, False,  True, False, False,
         True, False])
tensor([ True, False,  True, False,  True, False,  True, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False,  True,  True,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True,  True, False, False,  True, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 2110, time diff 0.8253235816955566, total time dif 177.4883737564087)
step: 2110 @ episode report: {'average_total_reward': np.float32(1.4244446), 'reward_variance': np.float32(0.15411851), 'max_total_reward': np.float32(1.9222221), 'min_total_reward': np.float32(0.6777778), 'average_n_step': np.float32(3.6), 'max_n_step': np.float32(4.0), 'min_n_step': np.float32(3.0), 'buffer_size': 69568} @ step loss: {'critic_loss': np.float64(0.3129086375236511), 'actor_loss': np.float64(-1.6530967950820923), 'hyper_actor_loss': np.float64(0.08644032627344131), 'behavior_loss': np.float64(1.1589348196983338)}

tensor([False,  True, False,  True, False, False, False,  True, False,  True,
         True, False, False, False,  True, False,  True, False,  True,  True,
         True,  True,  True, False,  True, False, False, False, False, False,
         True, False])
tensor([ True, False,  True, False,  True, False,  True, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True,  True,  True,  True,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True,  True, False, False,  True, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False,  True, False,  True,
         True, False, False, False,  True, False,  True, False,  True,  True,
         True,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False,  True, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True,  True,  True, False,  True, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False,  True,  True,  True, False,  True, False,  True, False, False,
        False, False, False,  True, False, False, False,  True, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False,  True,
         True, False, False, False,  True, False,  True, False,  True,  True,
         True,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True,  True,  True,  True, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True,  True,  True, False,  True, False,  True,  True, False,
        False, False, False,  True, False,  True, False,  True, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
         True, False])
Episode step 2120, time diff 0.7819852828979492, total time dif 178.31369733810425)
step: 2120 @ episode report: {'average_total_reward': np.float32(0.9855555), 'reward_variance': np.float32(0.14175431), 'max_total_reward': np.float32(1.8), 'min_total_reward': np.float32(0.31111106), 'average_n_step': np.float32(3.1), 'max_n_step': np.float32(4.0), 'min_n_step': np.float32(3.0), 'buffer_size': 69888} @ step loss: {'critic_loss': np.float64(0.31253657341003416), 'actor_loss': np.float64(-1.450379490852356), 'hyper_actor_loss': np.float64(0.0861540712416172), 'behavior_loss': np.float64(1.384139621257782)}

tensor([ True,  True,  True,  True, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False,  True, False,  True, False,  True,  True, False,
         True, False, False,  True, False,  True,  True,  True, False,  True,
        False,  True])
tensor([False, False, False, False, False,  True,  True, False, False,  True,
         True,  True,  True, False,  True, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True,  True,  True,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False,  True, False,  True, False,  True,  True, False,
         True, False,  True,  True, False,  True,  True,  True, False,  True,
        False,  True])
tensor([False, False, False,  True, False, False,  True, False, False,  True,
         True,  True,  True, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True,  True, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False,  True,  True, False,  True,
        False, False, False, False,  True, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False,  True, False,  True, False, False,  True, False,
         True, False,  True,  True, False,  True,  True,  True, False,  True,
        False,  True])
tensor([False, False, False,  True, False, False,  True, False, False,  True,
         True,  True,  True, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False,  True,  True,  True, False,  True,
        False, False, False, False,  True, False, False, False,  True, False,
         True, False])
Episode step 2130, time diff 0.8014636039733887, total time dif 179.0956826210022)
step: 2130 @ episode report: {'average_total_reward': np.float32(0.81444454), 'reward_variance': np.float32(0.13007532), 'max_total_reward': np.float32(1.5555556), 'min_total_reward': np.float32(0.3111111), 'average_n_step': np.float32(3.1), 'max_n_step': np.float32(4.0), 'min_n_step': np.float32(3.0), 'buffer_size': 70208} @ step loss: {'critic_loss': np.float64(0.32771540731191634), 'actor_loss': np.float64(-1.3221505761146546), 'hyper_actor_loss': np.float64(0.08724611774086952), 'behavior_loss': np.float64(1.557438278198242)}

tensor([False, False,  True, False,  True, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
         True, False,  True, False, False,  True,  True,  True, False,  True,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False,  True,
         True,  True,  True, False,  True, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([ True,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True,  True,  True, False,  True,
        False, False, False, False,  True, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
         True, False,  True, False, False,  True,  True,  True, False,  True,
        False, False])
tensor([False, False,  True,  True,  True, False, False, False, False,  True,
         True,  True, False, False,  True, False, False, False,  True, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False,  True,  True,  True, False,  True,
        False, False, False, False,  True, False, False, False,  True, False,
         True,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
         True, False,  True, False, False,  True,  True,  True, False,  True,
        False, False])
tensor([False, False,  True,  True,  True,  True, False, False, False,  True,
         True,  True, False, False,  True, False, False, False,  True, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False,  True,  True,  True, False,  True,
        False, False, False, False,  True, False, False, False,  True, False,
         True,  True])
tensor([False,  True,  True,  True, False, False, False,  True, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
         True, False,  True, False, False, False,  True,  True, False,  True,
        False, False])
Episode step 2140, time diff 0.8126711845397949, total time dif 179.8971462249756)
step: 2140 @ episode report: {'average_total_reward': np.float32(0.92666674), 'reward_variance': np.float32(0.2342025), 'max_total_reward': np.float32(1.8), 'min_total_reward': np.float32(0.3111111), 'average_n_step': np.float32(3.2), 'max_n_step': np.float32(4.0), 'min_n_step': np.float32(3.0), 'buffer_size': 70528} @ step loss: {'critic_loss': np.float64(0.30689266622066497), 'actor_loss': np.float64(-1.3057447671890259), 'hyper_actor_loss': np.float64(0.08794941827654838), 'behavior_loss': np.float64(1.5099597930908204)}

tensor([False, False, False, False,  True,  True, False, False, False,  True,
         True,  True, False, False,  True, False, False, False,  True, False,
        False,  True, False,  True, False,  True, False, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False,  True, False,  True, False,
        False, False,  True, False, False,  True,  True,  True, False,  True,
        False, False, False, False,  True, False, False,  True,  True, False,
         True, False])
tensor([False,  True,  True,  True, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False,  True,  True, False,  True,  True, False, False,  True,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False,  True,
         True,  True,  True, False,  True, False, False, False,  True, False,
        False,  True, False, False, False, False, False,  True,  True, False,
         True,  True])
tensor([ True, False, False, False, False, False,  True,  True,  True, False,
        False, False, False, False, False,  True,  True,  True, False,  True,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False,  True,  True,  True,  True, False, False, False, False,  True,
        False, False, False,  True,  True, False, False, False, False, False,
         True, False,  True, False, False,  True,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
         True,  True,  True, False, False, False,  True,  True,  True,  True,
        False,  True, False, False, False, False, False,  True,  True, False,
         True,  True])
tensor([ True,  True, False, False, False, False,  True, False,  True,  True,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True,  True, False, False, False, False, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
         True,  True,  True, False, False,  True,  True, False, False,  True,
        False, False])
tensor([ True,  True, False, False, False,  True, False,  True,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
        False, False, False, False, False, False, False,  True,  True, False,
         True,  True])
Episode step 2150, time diff 0.8069837093353271, total time dif 180.70981740951538)
step: 2150 @ episode report: {'average_total_reward': np.float32(0.26), 'reward_variance': np.float32(0.028943216), 'max_total_reward': np.float32(0.5555556), 'min_total_reward': np.float32(-0.07777779), 'average_n_step': np.float32(2.9), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 70848} @ step loss: {'critic_loss': np.float64(0.30744866132736204), 'actor_loss': np.float64(-1.3260136365890502), 'hyper_actor_loss': np.float64(0.08749491944909096), 'behavior_loss': np.float64(1.5151926279067993)}

tensor([False, False, False, False,  True, False,  True, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True,  True,  True,  True, False, False, False, False, False,
        False, False])
tensor([ True, False,  True,  True, False, False, False, False, False, False,
        False, False, False,  True,  True,  True,  True, False,  True, False,
         True, False, False, False, False,  True,  True, False,  True,  True,
         True,  True])
tensor([False,  True, False, False, False,  True, False,  True,  True, False,
         True, False,  True, False, False, False, False,  True, False,  True,
        False,  True,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False,  True, False,  True, False, False,  True,
        False,  True, False,  True, False,  True, False, False, False, False,
        False, False, False,  True,  True,  True, False, False, False, False,
         True,  True])
tensor([ True,  True, False,  True, False, False, False,  True,  True, False,
        False, False,  True, False,  True, False,  True,  True,  True,  True,
         True, False,  True, False, False, False,  True, False,  True,  True,
        False, False])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
         True,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False,  True, False, False,
         True, False])
tensor([ True,  True,  True,  True, False, False, False,  True, False, False,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False,  True, False,  True, False,
         True,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True,  True,  True,  True,
        False, False])
tensor([ True,  True,  True,  True, False,  True, False,  True, False,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False,  True, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True,  True,  True,  True,
        False,  True])
Episode step 2160, time diff 0.7755727767944336, total time dif 181.5168011188507)
step: 2160 @ episode report: {'average_total_reward': np.float32(0.14555554), 'reward_variance': np.float32(0.017418517), 'max_total_reward': np.float32(0.3111111), 'min_total_reward': np.float32(-0.077777795), 'average_n_step': np.float32(2.7), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 71168} @ step loss: {'critic_loss': np.float64(0.296556667983532), 'actor_loss': np.float64(-1.2390444874763489), 'hyper_actor_loss': np.float64(0.08596890941262245), 'behavior_loss': np.float64(1.4069773316383363)}

tensor([ True,  True,  True,  True, False,  True, False,  True, False,  True,
        False,  True,  True, False,  True,  True, False,  True,  True,  True,
        False, False,  True,  True,  True,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False,  True, False,  True, False,
         True, False, False,  True, False, False,  True, False, False, False,
         True,  True, False, False, False, False,  True,  True,  True,  True,
        False, False])
tensor([ True,  True, False, False, False,  True, False,  True, False,  True,
        False,  True,  True, False,  True,  True, False, False, False,  True,
        False, False,  True,  True,  True,  True, False, False, False, False,
         True,  True])
tensor([False, False,  True,  True,  True, False,  True, False,  True, False,
         True, False, False,  True, False, False,  True,  True,  True, False,
         True,  True, False, False, False, False,  True,  True,  True,  True,
        False, False])
tensor([ True,  True, False, False, False, False, False,  True, False,  True,
        False,  True,  True, False,  True,  True, False, False, False,  True,
        False, False,  True, False, False,  True, False, False, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True, False, False,  True, False,
         True, False, False,  True, False, False, False,  True, False, False,
        False,  True, False,  True,  True, False,  True, False,  True,  True,
        False, False])
tensor([ True,  True,  True, False, False, False,  True,  True, False,  True,
        False,  True,  True, False, False,  True,  True, False,  True,  True,
         True, False,  True, False, False,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True, False, False,  True, False,
         True, False, False, False,  True, False, False,  True, False, False,
        False,  True, False,  True,  True, False,  True, False,  True,  True,
        False, False])
tensor([ True,  True,  True, False, False, False,  True,  True, False, False,
        False,  True,  True,  True, False,  True,  True, False,  True,  True,
         True, False,  True, False, False,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True, False, False,  True,  True,
         True, False, False, False,  True, False, False,  True, False, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
Episode step 2170, time diff 0.8311965465545654, total time dif 182.29237389564514)
step: 2170 @ episode report: {'average_total_reward': np.float32(-0.063333355), 'reward_variance': np.float32(0.013828394), 'max_total_reward': np.float32(0.06666662), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.1), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 71488} @ step loss: {'critic_loss': np.float64(0.2832593709230423), 'actor_loss': np.float64(-1.1887062430381774), 'hyper_actor_loss': np.float64(0.08435114100575447), 'behavior_loss': np.float64(1.2412863969802856)}

tensor([ True,  True,  True, False, False, False, False,  True, False, False,
        False,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False,  True,  True,
         True, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True, False, False,
        False,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False,  True,  True,
         True, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True, False, False,
        False,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
         True, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
        False,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
         True, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
        False,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
         True, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
Episode step 2180, time diff 0.7633652687072754, total time dif 183.1235704421997)
step: 2180 @ episode report: {'average_total_reward': np.float32(-0.15111113), 'reward_variance': np.float32(0.0035851854), 'max_total_reward': np.float32(-0.07777779), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 71808} @ step loss: {'critic_loss': np.float64(0.2738190770149231), 'actor_loss': np.float64(-1.2196609735488892), 'hyper_actor_loss': np.float64(0.0835033342242241), 'behavior_loss': np.float64(1.3687631130218505)}

tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
        False,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
         True, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
        False,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
Episode step 2190, time diff 0.8387284278869629, total time dif 183.88693571090698)
step: 2190 @ episode report: {'average_total_reward': np.float32(-0.1877778), 'reward_variance': np.float32(0.0013444445), 'max_total_reward': np.float32(-0.07777779), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 72128} @ step loss: {'critic_loss': np.float64(0.30178929269313814), 'actor_loss': np.float64(-1.2268170475959779), 'hyper_actor_loss': np.float64(0.08253299668431283), 'behavior_loss': np.float64(1.455091083049774)}

tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False, False,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True,  True, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
Episode step 2200, time diff 0.7844882011413574, total time dif 184.72566413879395)
step: 2200 @ episode report: {'average_total_reward': np.float32(-0.17555557), 'reward_variance': np.float32(0.0023901237), 'max_total_reward': np.float32(-0.07777779), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 72448} @ step loss: {'critic_loss': np.float64(0.3271832287311554), 'actor_loss': np.float64(-1.2141357779502868), 'hyper_actor_loss': np.float64(0.0813582718372345), 'behavior_loss': np.float64(1.3276106119155884)}

tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False, False,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True,  True, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False, False,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
Episode step 2210, time diff 0.7851595878601074, total time dif 185.5101523399353)
step: 2210 @ episode report: {'average_total_reward': np.float32(-0.15111111), 'reward_variance': np.float32(0.0035851859), 'max_total_reward': np.float32(-0.07777779), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 72768} @ step loss: {'critic_loss': np.float64(0.26536705791950227), 'actor_loss': np.float64(-1.0641220092773438), 'hyper_actor_loss': np.float64(0.08054949715733528), 'behavior_loss': np.float64(1.0643003344535829)}

tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False,  True,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False,  True,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False,  True,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
Episode step 2220, time diff 0.7804925441741943, total time dif 186.2953119277954)
step: 2220 @ episode report: {'average_total_reward': np.float32(-0.13666669), 'reward_variance': np.float32(0.014099996), 'max_total_reward': np.float32(0.18888883), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.1), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 73088} @ step loss: {'critic_loss': np.float64(0.25831289142370223), 'actor_loss': np.float64(-1.108936208486557), 'hyper_actor_loss': np.float64(0.08139745742082596), 'behavior_loss': np.float64(1.0433891236782074)}

tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False,  True,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False,  True,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True, False,  True, False,  True,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
Episode step 2230, time diff 0.7951099872589111, total time dif 187.0758044719696)
step: 2230 @ episode report: {'average_total_reward': np.float32(-0.13888888), 'reward_variance': np.float32(0.0037345686), 'max_total_reward': np.float32(-0.07777779), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 73408} @ step loss: {'critic_loss': np.float64(0.2493775337934494), 'actor_loss': np.float64(-1.2754379272460938), 'hyper_actor_loss': np.float64(0.08156478628516198), 'behavior_loss': np.float64(1.2376703679561616)}

tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
Episode step 2240, time diff 0.7769978046417236, total time dif 187.87091445922852)
step: 2240 @ episode report: {'average_total_reward': np.float32(-0.17555559), 'reward_variance': np.float32(0.0023901234), 'max_total_reward': np.float32(-0.07777779), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 73728} @ step loss: {'critic_loss': np.float64(0.22022700905799866), 'actor_loss': np.float64(-1.3306666493415833), 'hyper_actor_loss': np.float64(0.08048300743103028), 'behavior_loss': np.float64(1.384687328338623)}

tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
Episode step 2250, time diff 0.7722992897033691, total time dif 188.64791226387024)
step: 2250 @ episode report: {'average_total_reward': np.float32(-0.12666668), 'reward_variance': np.float32(0.00657284), 'max_total_reward': np.float32(0.044444434), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 74048} @ step loss: {'critic_loss': np.float64(0.225109251588583), 'actor_loss': np.float64(-1.2733617544174194), 'hyper_actor_loss': np.float64(0.07892167940735817), 'behavior_loss': np.float64(1.4229604125022888)}

tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False, False,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True,  True,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True,  True,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True,  True,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True,  True,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True,  True,
        False, False])
Episode step 2260, time diff 0.7743566036224365, total time dif 189.4202115535736)
step: 2260 @ episode report: {'average_total_reward': np.float32(-0.20000002), 'reward_variance': np.float32(0.0), 'max_total_reward': np.float32(-0.20000002), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 74368} @ step loss: {'critic_loss': np.float64(0.23409744948148728), 'actor_loss': np.float64(-1.245766270160675), 'hyper_actor_loss': np.float64(0.07807938531041145), 'behavior_loss': np.float64(1.4068127274513245)}

tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True,  True,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True,  True,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True,  True,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True,  True,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True,  True,
        False, False])
Episode step 2270, time diff 0.8060588836669922, total time dif 190.19456815719604)
step: 2270 @ episode report: {'average_total_reward': np.float32(-0.17555559), 'reward_variance': np.float32(0.0023901234), 'max_total_reward': np.float32(-0.07777779), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 74688} @ step loss: {'critic_loss': np.float64(0.24799633026123047), 'actor_loss': np.float64(-1.2291773080825805), 'hyper_actor_loss': np.float64(0.07749406471848488), 'behavior_loss': np.float64(1.4162022352218628)}

tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True,  True,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True,  True,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True,  True,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True,  True,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True,  True,
        False, False])
Episode step 2280, time diff 0.7727377414703369, total time dif 191.00062704086304)
step: 2280 @ episode report: {'average_total_reward': np.float32(-0.16333336), 'reward_variance': np.float32(0.0031370376), 'max_total_reward': np.float32(-0.07777779), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 75008} @ step loss: {'critic_loss': np.float64(0.2529634550213814), 'actor_loss': np.float64(-1.2893432974815369), 'hyper_actor_loss': np.float64(0.07634433582425118), 'behavior_loss': np.float64(1.570067083835602)}

tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True,  True,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True,  True,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True, False,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False,  True,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True, False,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False,  True,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True,  True,  True, False,
        False, False])
Episode step 2290, time diff 0.9778125286102295, total time dif 191.77336478233337)
step: 2290 @ episode report: {'average_total_reward': np.float32(-0.17555557), 'reward_variance': np.float32(0.0023901234), 'max_total_reward': np.float32(-0.07777779), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 75328} @ step loss: {'critic_loss': np.float64(0.2213738813996315), 'actor_loss': np.float64(-1.0621435165405273), 'hyper_actor_loss': np.float64(0.07508831843733788), 'behavior_loss': np.float64(1.5874507904052735)}

tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False, False, False,  True,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
Episode step 2300, time diff 0.8493585586547852, total time dif 192.7511773109436)
step: 2300 @ episode report: {'average_total_reward': np.float32(-0.16333334), 'reward_variance': np.float32(0.0061246925), 'max_total_reward': np.float32(0.044444438), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 75648} @ step loss: {'critic_loss': np.float64(0.21993695795536042), 'actor_loss': np.float64(-1.102423405647278), 'hyper_actor_loss': np.float64(0.07472840324044228), 'behavior_loss': np.float64(1.4819233059883117)}

tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False,  True, False, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True, False,  True,  True,  True,  True, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
Episode step 2310, time diff 0.8118925094604492, total time dif 193.6005358695984)
step: 2310 @ episode report: {'average_total_reward': np.float32(-0.1388889), 'reward_variance': np.float32(0.006722223), 'max_total_reward': np.float32(0.044444434), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 75968} @ step loss: {'critic_loss': np.float64(0.24638449996709824), 'actor_loss': np.float64(-1.2498923063278198), 'hyper_actor_loss': np.float64(0.07426868975162507), 'behavior_loss': np.float64(1.46831476688385)}

tensor([ True, False,  True, False, False, False, False,  True, False, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True, False,  True,  True,  True,  True, False,  True,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False,  True, False, False, False, False,  True, False, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True, False,  True,  True,  True,  True, False,  True,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False,  True, False, False, False, False,  True, False, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True, False,  True,  True,  True,  True, False,  True,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False,  True, False, False, False, False,  True, False, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True, False,  True,  True,  True,  True, False,  True,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False,  True, False, False, False, False,  True, False, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True, False,  True,  True,  True,  True, False,  True,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
Episode step 2320, time diff 0.797330379486084, total time dif 194.41242837905884)
step: 2320 @ episode report: {'average_total_reward': np.float32(-0.17555557), 'reward_variance': np.float32(0.0023901234), 'max_total_reward': np.float32(-0.07777779), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 76288} @ step loss: {'critic_loss': np.float64(0.2559025093913078), 'actor_loss': np.float64(-0.8919795632362366), 'hyper_actor_loss': np.float64(0.07374489903450013), 'behavior_loss': np.float64(1.4336430072784423)}

tensor([ True, False,  True, False, False, False, False,  True, False, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True, False,  True,  True,  True,  True, False,  True,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
Episode step 2330, time diff 0.8180758953094482, total time dif 195.20975875854492)
step: 2330 @ episode report: {'average_total_reward': np.float32(-0.13888891), 'reward_variance': np.float32(0.006722222), 'max_total_reward': np.float32(0.044444427), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 76608} @ step loss: {'critic_loss': np.float64(0.20230430364608765), 'actor_loss': np.float64(-0.6624955654144287), 'hyper_actor_loss': np.float64(0.07379616945981979), 'behavior_loss': np.float64(1.2405872821807862)}

tensor([ True, False, False, False, False, False, False, False, False, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True,  True,  True,  True, False, False,  True, False, False, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False, False,  True,  True, False,  True,  True,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True,  True,  True,  True, False, False,  True, False, False, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False, False,  True,  True, False,  True,  True,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True,  True,  True,  True, False, False,  True, False, False, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False, False,  True,  True, False,  True,  True,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
Episode step 2340, time diff 0.7887768745422363, total time dif 196.02783465385437)
step: 2340 @ episode report: {'average_total_reward': np.float32(-0.16333336), 'reward_variance': np.float32(0.0031370372), 'max_total_reward': np.float32(-0.07777779), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 76928} @ step loss: {'critic_loss': np.float64(0.16493012458086015), 'actor_loss': np.float64(-0.6737198948860168), 'hyper_actor_loss': np.float64(0.07383637875318527), 'behavior_loss': np.float64(0.9934695899486542)}

tensor([ True, False, False, False, False, False, False, False, False, False,
         True,  True,  True,  True, False, False,  True, False, False, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True,  True, False,  True,  True,  True,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
         True,  True,  True,  True, False, False,  True, False, False, False,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True,  True, False,  True,  True, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
         True,  True,  True,  True, False, False,  True, False, False,  True,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True,  True, False,  True,  True, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
         True,  True,  True,  True, False, False,  True, False, False,  True,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True,  True, False,  True,  True, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
         True,  True,  True,  True, False, False,  True, False, False,  True,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True,  True, False,  True,  True, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
Episode step 2350, time diff 0.7935709953308105, total time dif 196.8166115283966)
step: 2350 @ episode report: {'average_total_reward': np.float32(-0.13888891), 'reward_variance': np.float32(0.006722222), 'max_total_reward': np.float32(0.044444427), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 77248} @ step loss: {'critic_loss': np.float64(0.17744420021772384), 'actor_loss': np.float64(-0.8550522685050964), 'hyper_actor_loss': np.float64(0.07289940342307091), 'behavior_loss': np.float64(0.9050599992275238)}

tensor([ True, False, False, False, False, False, False, False, False,  True,
         True,  True,  True,  True, False, False,  True, False, False,  True,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True,  True, False,  True,  True, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
         True,  True,  True,  True, False, False,  True, False, False,  True,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True,  True, False,  True,  True, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
         True,  True,  True,  True, False, False,  True, False, False,  True,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
Episode step 2360, time diff 0.7954063415527344, total time dif 197.61018252372742)
step: 2360 @ episode report: {'average_total_reward': np.float32(-0.13888891), 'reward_variance': np.float32(0.006722222), 'max_total_reward': np.float32(0.044444434), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 77568} @ step loss: {'critic_loss': np.float64(0.15729885473847388), 'actor_loss': np.float64(-0.8670916616916656), 'hyper_actor_loss': np.float64(0.0720785103738308), 'behavior_loss': np.float64(0.9360466241836548)}

tensor([ True, False, False, False, False, False, False, False, False,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True, False,  True, False,  True,  True, False,  True, False,  True,
         True,  True])
tensor([False, False,  True, False,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([ True,  True, False,  True, False, False, False, False, False,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False,  True, False,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
tensor([ True,  True, False,  True, False, False, False, False, False,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True, False,  True, False, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False,  True, False,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False,  True, False,  True,  True, False,  True, False, False, False,
        False, False])
Episode step 2370, time diff 0.7963519096374512, total time dif 198.40558886528015)
step: 2370 @ episode report: {'average_total_reward': np.float32(-0.1388889), 'reward_variance': np.float32(0.0037345681), 'max_total_reward': np.float32(-0.07777779), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.0), 'max_n_step': np.float32(2.0), 'min_n_step': np.float32(2.0), 'buffer_size': 77888} @ step loss: {'critic_loss': np.float64(0.1354287452995777), 'actor_loss': np.float64(-0.8514166712760926), 'hyper_actor_loss': np.float64(0.07150403261184693), 'behavior_loss': np.float64(0.9678201377391815)}

tensor([ True,  True, False,  True, False, False, False, False, False,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True, False,  True, False, False,  True, False,  True,  True,  True,
         True,  True])
tensor([False, False,  True, False,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False,  True, False,  True,  True, False,  True, False, False, False,
        False, False])
tensor([ True,  True, False,  True, False, False, False, False, False,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True, False,  True, False, False,  True, False,  True,  True,  True,
         True,  True])
tensor([False, False,  True, False,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False,  True, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([ True,  True, False,  True, False, False, False, False, False,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True, False,  True, False, False,  True,  True,  True,  True, False,
         True,  True])
tensor([False, False,  True, False,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([ True,  True, False,  True, False, False, False, False, False,  True,
         True, False,  True,  True, False, False,  True,  True,  True, False,
         True, False,  True, False,  True,  True,  True,  True,  True, False,
         True,  True])
tensor([False, False, False, False,  True,  True,  True, False,  True, False,
        False,  True, False, False,  True,  True, False, False, False,  True,
        False,  True, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True, False,  True,
         True, False, False,  True, False, False,  True,  True,  True, False,
         True, False,  True, False,  True,  True,  True,  True,  True, False,
        False,  True])
tensor([False, False, False, False,  True,  True,  True, False, False, False,
        False,  True,  True, False,  True,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
         True, False])
Episode step 2380, time diff 0.8202552795410156, total time dif 199.2019407749176)
step: 2380 @ episode report: {'average_total_reward': np.float32(-0.06111113), 'reward_variance': np.float32(0.030919751), 'max_total_reward': np.float32(0.3111111), 'min_total_reward': np.float32(-0.20000002), 'average_n_step': np.float32(2.2), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 78208} @ step loss: {'critic_loss': np.float64(0.13316600993275643), 'actor_loss': np.float64(-0.8955187976360321), 'hyper_actor_loss': np.float64(0.07117651477456093), 'behavior_loss': np.float64(1.0409666180610657)}

tensor([False,  True,  True,  True, False, False, False,  True,  True,  True,
         True, False, False,  True, False, False,  True, False,  True,  True,
         True, False, False,  True,  True, False,  True,  True,  True, False,
        False, False])
tensor([ True, False, False, False,  True,  True,  True, False, False, False,
        False,  True,  True, False,  True,  True, False,  True, False, False,
        False,  True,  True, False, False,  True, False, False, False, False,
         True,  True])
tensor([False,  True,  True,  True, False, False, False,  True,  True,  True,
         True, False, False,  True, False, False,  True, False,  True,  True,
         True, False, False,  True,  True, False,  True,  True,  True,  True,
        False, False])
tensor([ True, False, False, False,  True,  True,  True, False, False, False,
        False, False, False, False,  True,  True, False,  True, False, False,
        False,  True,  True, False, False,  True, False, False, False, False,
         True,  True])
tensor([False, False,  True,  True, False, False, False,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
        False, False, False,  True, False, False,  True,  True,  True,  True,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False,  True,
         True, False,  True, False,  True,  True, False, False, False, False,
         True,  True])
tensor([ True, False,  True,  True,  True, False,  True,  True,  True, False,
        False,  True,  True,  True, False,  True,  True,  True,  True, False,
        False,  True, False, False, False, False,  True,  True, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
         True, False, False, False,  True, False, False, False, False,  True,
         True, False,  True,  True, False,  True, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False,  True, False,  True, False, False,
        False,  True,  True, False, False, False, False, False,  True, False,
        False,  True, False, False,  True, False, False,  True, False, False,
         True,  True])
tensor([ True,  True, False,  True,  True, False,  True, False,  True, False,
        False, False, False,  True, False,  True,  True,  True, False, False,
        False, False, False, False, False,  True,  True, False,  True,  True,
        False, False])
Episode step 2390, time diff 0.817307710647583, total time dif 200.02219605445862)
step: 2390 @ episode report: {'average_total_reward': np.float32(0.2022222), 'reward_variance': np.float32(0.0970321), 'max_total_reward': np.float32(0.92222226), 'min_total_reward': np.float32(-0.077777795), 'average_n_step': np.float32(2.5), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 78528} @ step loss: {'critic_loss': np.float64(0.11394316032528877), 'actor_loss': np.float64(-0.8696138560771942), 'hyper_actor_loss': np.float64(0.07013919651508331), 'behavior_loss': np.float64(1.0992530524730681)}

tensor([False, False, False, False, False,  True, False, False, False,  True,
         True,  True,  True, False,  True, False, False, False, False,  True,
         True,  True,  True,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True,  True, False,
        False, False, False,  True, False, False,  True,  True,  True, False,
        False, False, False, False,  True, False, False, False,  True,  True,
         True,  True])
tensor([ True,  True, False,  True,  True,  True,  True, False, False, False,
         True,  True,  True, False,  True,  True, False, False, False,  True,
         True, False,  True, False, False,  True,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False,  True,  True, False, False, False, False, False,
         True,  True])
tensor([ True,  True,  True, False, False, False, False,  True,  True, False,
        False, False,  True, False, False, False,  True,  True,  True, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False,  True,  True,  True, False, False,  True,
         True,  True, False, False,  True,  True, False, False, False,  True,
         True, False,  True,  True, False,  True,  True,  True, False, False,
        False, False])
tensor([ True,  True,  True,  True, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False,  True,  True,  True,
        False,  True, False, False,  True, False,  True,  True,  True,  True,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False,  True,  True,  True, False, False, False,
         True, False,  True,  True, False,  True, False, False, False, False,
         True, False,  True,  True,  True,  True,  True,  True, False, False,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True, False,  True,
        False,  True, False, False, False, False,  True,  True, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
         True,  True])
Episode step 2400, time diff 0.7724943161010742, total time dif 200.8395037651062)
step: 2400 @ episode report: {'average_total_reward': np.float32(0.37777776), 'reward_variance': np.float32(0.08859259), 'max_total_reward': np.float32(0.8000001), 'min_total_reward': np.float32(0.044444427), 'average_n_step': np.float32(2.7), 'max_n_step': np.float32(3.0), 'min_n_step': np.float32(2.0), 'buffer_size': 78848} @ step loss: {'critic_loss': np.float64(0.10310591980814934), 'actor_loss': np.float64(-0.8693812906742096), 'hyper_actor_loss': np.float64(0.0688742607831955), 'behavior_loss': np.float64(1.150162661075592)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False,  True,  True,
        False, False, False, False, False,  True, False,  True,  True, False,
        False, False])
tensor([False, False, False, False,  True,  True,  True, False, False, False,
         True, False,  True,  True, False,  True, False, False, False, False,
         True, False,  True,  True,  True, False,  True, False, False, False,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True, False,  True,
        False,  True, False, False, False, False,  True,  True, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
         True,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False,  True, False, False, False,  True,  True,
        False, False, False, False, False,  True, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False,  True, False,  True,  True, False, False, False,
         True, False,  True,  True,  True, False, False, False, False, False,
        False,  True])
tensor([ True,  True,  True,  True,  True, False, False,  True, False,  True,
         True,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False,  True,  True,  True,  True, False,  True, False,
         True, False,  True,  True,  True,  True, False,  True, False, False,
        False, False])
tensor([ True,  True, False,  True,  True, False, False,  True, False,  True,
         True,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
         True,  True])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False,  True, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 2410, time diff 0.81113600730896, total time dif 201.61199808120728)
step: 2410 @ episode report: {'average_total_reward': np.float32(0.7166666), 'reward_variance': np.float32(0.2559815), 'max_total_reward': np.float32(1.6777778), 'min_total_reward': np.float32(0.044444434), 'average_n_step': np.float32(3.1), 'max_n_step': np.float32(4.0), 'min_n_step': np.float32(2.0), 'buffer_size': 79168} @ step loss: {'critic_loss': np.float64(0.10274002254009247), 'actor_loss': np.float64(-0.8456061542034149), 'hyper_actor_loss': np.float64(0.0676056832075119), 'behavior_loss': np.float64(1.3087860584259032)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True,  True, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False,  True, False,  True,  True,  True,  True,  True, False, False,
         True,  True, False,  True, False,  True,  True,  True, False, False,
        False, False,  True,  True, False,  True, False,  True, False,  True,
         True,  True])
tensor([ True, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False,  True, False,
         True,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False,  True, False,  True,  True, False, False,  True,
         True,  True, False, False, False,  True, False,  True, False,  True,
        False, False,  True,  True, False,  True, False,  True, False,  True,
         True,  True])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False,  True,  True,  True, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True,  True, False, False,  True,
         True,  True, False, False, False,  True, False,  True, False,  True,
        False, False, False,  True, False,  True, False, False,  True, False,
         True, False])
Episode step 2420, time diff 0.7829182147979736, total time dif 202.42313408851624)
step: 2420 @ episode report: {'average_total_reward': np.float32(1.7711111), 'reward_variance': np.float32(0.22442468), 'max_total_reward': np.float32(2.288889), 'min_total_reward': np.float32(0.8000001), 'average_n_step': np.float32(3.8), 'max_n_step': np.float32(4.0), 'min_n_step': np.float32(3.0), 'buffer_size': 79488} @ step loss: {'critic_loss': np.float64(0.10710456147789955), 'actor_loss': np.float64(-0.8523793518543243), 'hyper_actor_loss': np.float64(0.06651993989944457), 'behavior_loss': np.float64(1.3470730185508728)}

tensor([False, False,  True,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False,  True, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True,  True,  True, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
         True, False,  True,  True, False,  True, False, False,  True, False,
         True, False])
tensor([False,  True,  True, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False,  True,  True, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False,  True,  True, False, False, False, False, False,
        False, False])
Episode step 2430, time diff 0.8165991306304932, total time dif 203.2060523033142)
step: 2430 @ episode report: {'average_total_reward': np.float32(4.1377783), 'reward_variance': np.float32(1.5153139), 'max_total_reward': np.float32(6.655556), 'min_total_reward': np.float32(2.166667), 'average_n_step': np.float32(5.8), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(4.0), 'buffer_size': 79808} @ step loss: {'critic_loss': np.float64(0.104813963919878), 'actor_loss': np.float64(-0.8907334446907044), 'hyper_actor_loss': np.float64(0.06454117000102996), 'behavior_loss': np.float64(1.5151687026023866)}

tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False,  True,  True, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True,  True,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
         True, False, False,  True,  True, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False,  True, False, False, False, False,  True, False,  True, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False,  True])
tensor([False,  True,  True,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
Episode step 2440, time diff 0.7859742641448975, total time dif 204.0226514339447)
step: 2440 @ episode report: {'average_total_reward': np.float32(5.2744446), 'reward_variance': np.float32(1.6927674), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 80128} @ step loss: {'critic_loss': np.float64(0.10105137079954148), 'actor_loss': np.float64(-0.873011314868927), 'hyper_actor_loss': np.float64(0.05966913178563118), 'behavior_loss': np.float64(1.6612750887870789)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
         True, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False,  True,  True,
        False, False, False,  True, False, False, False,  True, False, False,
         True, False])
tensor([False, False,  True, False, False, False,  True,  True, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 2450, time diff 0.85445237159729, total time dif 204.8086256980896)
step: 2450 @ episode report: {'average_total_reward': np.float32(5.2844443), 'reward_variance': np.float32(0.51459754), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(4.0444446), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 80448} @ step loss: {'critic_loss': np.float64(0.10622775480151177), 'actor_loss': np.float64(-0.9157849729061127), 'hyper_actor_loss': np.float64(0.05399008430540562), 'behavior_loss': np.float64(1.8088703274726867)}

tensor([False, False, False,  True, False, False, False, False,  True, False,
         True,  True,  True, False, False,  True, False, False, False, False,
        False, False,  True, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False,  True,
        False,  True, False,  True, False, False, False, False,  True, False,
         True,  True])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
         True,  True,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
Episode step 2460, time diff 0.7987949848175049, total time dif 205.6630780696869)
step: 2460 @ episode report: {'average_total_reward': np.float32(5.3988886), 'reward_variance': np.float32(2.1579618), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(2.9222221), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 80768} @ step loss: {'critic_loss': np.float64(0.10063082948327065), 'actor_loss': np.float64(-0.9196446657180786), 'hyper_actor_loss': np.float64(0.04921666532754898), 'behavior_loss': np.float64(1.7653261423110962)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False,  True,  True, False, False, False,  True,
        False, False, False, False,  True, False, False,  True, False, False,
        False,  True])
tensor([False, False, False,  True,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 2470, time diff 0.7968447208404541, total time dif 206.4618730545044)
step: 2470 @ episode report: {'average_total_reward': np.float32(5.284445), 'reward_variance': np.float32(0.8293136), 'max_total_reward': np.float32(6.5333333), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 81088} @ step loss: {'critic_loss': np.float64(0.1099362164735794), 'actor_loss': np.float64(-0.8930670976638794), 'hyper_actor_loss': np.float64(0.04606444872915745), 'behavior_loss': np.float64(1.940586233139038)}

tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False,  True,
        False,  True])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True,  True, False,  True, False, False, False, False,
        False, False])
tensor([False,  True,  True,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
Episode step 2480, time diff 0.7829577922821045, total time dif 207.25871777534485)
step: 2480 @ episode report: {'average_total_reward': np.float32(5.2966666), 'reward_variance': np.float32(1.2766682), 'max_total_reward': np.float32(7.5333343), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 81408} @ step loss: {'critic_loss': np.float64(0.10003100112080573), 'actor_loss': np.float64(-0.8886391758918762), 'hyper_actor_loss': np.float64(0.04308922551572323), 'behavior_loss': np.float64(1.8991110920906067)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False,  True, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True,  True,  True, False, False,
        False, False, False, False,  True,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True,  True, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 2490, time diff 0.7787976264953613, total time dif 208.04167556762695)
step: 2490 @ episode report: {'average_total_reward': np.float32(5.272222), 'reward_variance': np.float32(1.52534), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 81728} @ step loss: {'critic_loss': np.float64(0.11719205155968666), 'actor_loss': np.float64(-0.8950152516365051), 'hyper_actor_loss': np.float64(0.0406388808041811), 'behavior_loss': np.float64(1.942572021484375)}

tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True,  True,  True, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True,  True])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
Episode step 2500, time diff 0.8322429656982422, total time dif 208.82047319412231)
step: 2500 @ episode report: {'average_total_reward': np.float32(6.008889), 'reward_variance': np.float32(1.7177479), 'max_total_reward': np.float32(8.777778), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.5), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 82048} @ step loss: {'critic_loss': np.float64(0.11133048236370087), 'actor_loss': np.float64(-0.9371412754058838), 'hyper_actor_loss': np.float64(0.038610607385635376), 'behavior_loss': np.float64(1.9930556774139405)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False,  True, False,  True,
         True,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False,  True, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
Episode step 2510, time diff 0.7821798324584961, total time dif 209.65271615982056)
step: 2510 @ episode report: {'average_total_reward': np.float32(5.845556), 'reward_variance': np.float32(1.3870728), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(4.411111), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 82368} @ step loss: {'critic_loss': np.float64(0.10419242233037948), 'actor_loss': np.float64(-0.8597092747688293), 'hyper_actor_loss': np.float64(0.03722478225827217), 'behavior_loss': np.float64(2.0216854095458983)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
         True,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False,  True, False, False,
         True, False, False, False, False,  True, False, False,  True,  True,
        False, False,  True, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 2520, time diff 0.7837724685668945, total time dif 210.43489599227905)
step: 2520 @ episode report: {'average_total_reward': np.float32(6.3333335), 'reward_variance': np.float32(2.6557777), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(7.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 82688} @ step loss: {'critic_loss': np.float64(0.11974149942398071), 'actor_loss': np.float64(-0.9442676067352295), 'hyper_actor_loss': np.float64(0.03578768111765385), 'behavior_loss': np.float64(1.9517217755317688)}

tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False,  True, False, False,
        False, False])
tensor([ True, False,  True, False, False,  True, False, False, False, False,
        False,  True,  True, False, False,  True, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False,  True, False,  True,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False,  True, False, False,  True,  True,  True,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False,  True, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 2530, time diff 1.0122528076171875, total time dif 211.21866846084595)
step: 2530 @ episode report: {'average_total_reward': np.float32(5.7211113), 'reward_variance': np.float32(0.59964067), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.533334), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 83008} @ step loss: {'critic_loss': np.float64(0.1099118746817112), 'actor_loss': np.float64(-0.8995537281036377), 'hyper_actor_loss': np.float64(0.03505256697535515), 'behavior_loss': np.float64(2.002068817615509)}

tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True,  True, False, False,  True,
        False, False, False, False, False, False,  True, False,  True,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False,  True, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False,  True, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
Episode step 2540, time diff 0.7991390228271484, total time dif 212.23092126846313)
step: 2540 @ episode report: {'average_total_reward': np.float32(5.4844446), 'reward_variance': np.float32(0.46143723), 'max_total_reward': np.float32(6.655556), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 83328} @ step loss: {'critic_loss': np.float64(0.110785124450922), 'actor_loss': np.float64(-0.9270126819610596), 'hyper_actor_loss': np.float64(0.03430126160383225), 'behavior_loss': np.float64(1.9809716463088989)}

tensor([False,  True, False, False,  True, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False,  True])
Episode step 2550, time diff 0.8495855331420898, total time dif 213.03006029129028)
step: 2550 @ episode report: {'average_total_reward': np.float32(5.498889), 'reward_variance': np.float32(2.0583816), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 83648} @ step loss: {'critic_loss': np.float64(0.11105027124285698), 'actor_loss': np.float64(-0.9590957820415497), 'hyper_actor_loss': np.float64(0.033856310322880744), 'behavior_loss': np.float64(1.9504798531532288)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
         True, False,  True, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False,  True, False, False, False,  True, False, False,  True,  True,
         True, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False,  True, False,  True, False, False,  True, False, False, False,
        False, False, False,  True, False, False,  True,  True, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
Episode step 2560, time diff 0.842942476272583, total time dif 213.87964582443237)
step: 2560 @ episode report: {'average_total_reward': np.float32(5.433333), 'reward_variance': np.float32(1.7279257), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 83968} @ step loss: {'critic_loss': np.float64(0.11242230162024498), 'actor_loss': np.float64(-0.9117081344127655), 'hyper_actor_loss': np.float64(0.03283062018454075), 'behavior_loss': np.float64(2.064982533454895)}

tensor([False, False, False,  True,  True, False,  True, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False,  True,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
Episode step 2570, time diff 0.821946382522583, total time dif 214.72258830070496)
step: 2570 @ episode report: {'average_total_reward': np.float32(5.9722223), 'reward_variance': np.float32(3.2181294), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(7.5), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 84288} @ step loss: {'critic_loss': np.float64(0.12026407346129417), 'actor_loss': np.float64(-0.9206070065498352), 'hyper_actor_loss': np.float64(0.032192903012037276), 'behavior_loss': np.float64(2.054473173618317)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True,  True,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False,  True,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
Episode step 2580, time diff 0.8209774494171143, total time dif 215.54453468322754)
step: 2580 @ episode report: {'average_total_reward': np.float32(5.6722226), 'reward_variance': np.float32(0.93430245), 'max_total_reward': np.float32(6.655556), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 84608} @ step loss: {'critic_loss': np.float64(0.1209368072450161), 'actor_loss': np.float64(-0.9692461490631104), 'hyper_actor_loss': np.float64(0.0315728610381484), 'behavior_loss': np.float64(2.0147839784622192)}

tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
         True, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False,  True,
         True, False, False, False,  True, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 2590, time diff 0.8360676765441895, total time dif 216.36551213264465)
step: 2590 @ episode report: {'average_total_reward': np.float32(5.921111), 'reward_variance': np.float32(1.7164806), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(4.1666665), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 84928} @ step loss: {'critic_loss': np.float64(0.11427327394485473), 'actor_loss': np.float64(-0.893076378107071), 'hyper_actor_loss': np.float64(0.03163307476788759), 'behavior_loss': np.float64(2.0521894335746764)}

tensor([False,  True, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True,  True, False, False,  True, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True,  True, False, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 2600, time diff 0.8541688919067383, total time dif 217.20157980918884)
step: 2600 @ episode report: {'average_total_reward': np.float32(5.5844445), 'reward_variance': np.float32(1.0419801), 'max_total_reward': np.float32(7.533334), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 85248} @ step loss: {'critic_loss': np.float64(0.12576454058289527), 'actor_loss': np.float64(-0.9287662148475647), 'hyper_actor_loss': np.float64(0.03129924703389406), 'behavior_loss': np.float64(2.191469669342041)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True,  True,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False,  True,  True,  True, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
Episode step 2610, time diff 0.8531336784362793, total time dif 218.05574870109558)
step: 2610 @ episode report: {'average_total_reward': np.float32(6.5699997), 'reward_variance': np.float32(2.1891868), 'max_total_reward': np.float32(9.777779), 'min_total_reward': np.float32(4.5333333), 'average_n_step': np.float32(8.0), 'max_n_step': np.float32(11.0), 'min_n_step': np.float32(6.0), 'buffer_size': 85568} @ step loss: {'critic_loss': np.float64(0.11017214134335518), 'actor_loss': np.float64(-0.9546467185020446), 'hyper_actor_loss': np.float64(0.030963420495390893), 'behavior_loss': np.float64(2.0750714540481567)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True,  True,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True,  True, False,  True, False, False,  True, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False,  True,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
Episode step 2620, time diff 0.8526573181152344, total time dif 218.90888237953186)
step: 2620 @ episode report: {'average_total_reward': np.float32(5.221112), 'reward_variance': np.float32(1.4938134), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(3.1666672), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 85888} @ step loss: {'critic_loss': np.float64(0.11576304733753204), 'actor_loss': np.float64(-0.91909618973732), 'hyper_actor_loss': np.float64(0.030244765803217888), 'behavior_loss': np.float64(2.04050030708313)}

tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False,  True, False,  True,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False,  True,  True, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False,  True, False, False, False,
        False, False])
Episode step 2630, time diff 0.8311436176300049, total time dif 219.7615396976471)
step: 2630 @ episode report: {'average_total_reward': np.float32(5.7844443), 'reward_variance': np.float32(2.2120304), 'max_total_reward': np.float32(8.777779), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 86208} @ step loss: {'critic_loss': np.float64(0.11958882585167885), 'actor_loss': np.float64(-0.9617110252380371), 'hyper_actor_loss': np.float64(0.029550338350236415), 'behavior_loss': np.float64(2.0329939246177675)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False,  True, False, False,  True, False, False, False, False,  True,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False,  True, False,  True,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False,  True,
        False, False,  True,  True, False, False, False, False,  True, False,
        False, False])
Episode step 2640, time diff 0.8102221488952637, total time dif 220.5926833152771)
step: 2640 @ episode report: {'average_total_reward': np.float32(5.757778), 'reward_variance': np.float32(1.1082424), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(4.411111), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 86528} @ step loss: {'critic_loss': np.float64(0.10694589912891388), 'actor_loss': np.float64(-0.9018251895904541), 'hyper_actor_loss': np.float64(0.02965517360717058), 'behavior_loss': np.float64(2.161680221557617)}

tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False,  True,  True, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True,  True, False, False, False,
        False, False])
Episode step 2650, time diff 0.8553478717803955, total time dif 221.40290546417236)
step: 2650 @ episode report: {'average_total_reward': np.float32(4.96), 'reward_variance': np.float32(1.2181778), 'max_total_reward': np.float32(7.533334), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 86848} @ step loss: {'critic_loss': np.float64(0.10537156537175178), 'actor_loss': np.float64(-0.9046302080154419), 'hyper_actor_loss': np.float64(0.029378522560000418), 'behavior_loss': np.float64(2.1391539335250855)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False,  True,  True, False, False, False, False,  True, False,
        False, False, False,  True, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
Episode step 2660, time diff 0.8417842388153076, total time dif 222.25825333595276)
step: 2660 @ episode report: {'average_total_reward': np.float32(5.508889), 'reward_variance': np.float32(0.90913075), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 87168} @ step loss: {'critic_loss': np.float64(0.12151290774345398), 'actor_loss': np.float64(-0.9320029258728028), 'hyper_actor_loss': np.float64(0.029346764273941516), 'behavior_loss': np.float64(2.1378008484840394)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False,  True,
        False, False])
tensor([ True,  True, False, False, False, False, False,  True, False,  True,
        False, False,  True, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True,  True, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False,  True,  True, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 2670, time diff 0.820035457611084, total time dif 223.10003757476807)
step: 2670 @ episode report: {'average_total_reward': np.float32(4.6133337), 'reward_variance': np.float32(0.840094), 'max_total_reward': np.float32(6.411112), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.3), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 87488} @ step loss: {'critic_loss': np.float64(0.11658288463950157), 'actor_loss': np.float64(-0.9210970103740692), 'hyper_actor_loss': np.float64(0.029162764735519885), 'behavior_loss': np.float64(2.148483598232269)}

tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False,  True, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False,  True, False,
         True, False])
Episode step 2680, time diff 0.8491113185882568, total time dif 223.92007303237915)
step: 2680 @ episode report: {'average_total_reward': np.float32(5.4844446), 'reward_variance': np.float32(0.69185674), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 87808} @ step loss: {'critic_loss': np.float64(0.11625437363982201), 'actor_loss': np.float64(-0.9506050944328308), 'hyper_actor_loss': np.float64(0.029186252690851688), 'behavior_loss': np.float64(2.2077175855636595)}

tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True,  True, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False,  True,
        False,  True])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
         True, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False,  True, False, False,  True,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False,  True, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
Episode step 2690, time diff 0.882878303527832, total time dif 224.7691843509674)
step: 2690 @ episode report: {'average_total_reward': np.float32(4.8477783), 'reward_variance': np.float32(1.5584704), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 88128} @ step loss: {'critic_loss': np.float64(0.1129118487238884), 'actor_loss': np.float64(-0.9392518758773803), 'hyper_actor_loss': np.float64(0.02889988850802183), 'behavior_loss': np.float64(2.073266065120697)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False,  True, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False,  True, False,
        False,  True,  True, False, False, False,  True, False,  True, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 2700, time diff 0.8414623737335205, total time dif 225.65206265449524)
step: 2700 @ episode report: {'average_total_reward': np.float32(5.9455557), 'reward_variance': np.float32(4.3059626), 'max_total_reward': np.float32(11.0222225), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(12.0), 'min_n_step': np.float32(5.0), 'buffer_size': 88448} @ step loss: {'critic_loss': np.float64(0.12115358412265778), 'actor_loss': np.float64(-0.9119087219238281), 'hyper_actor_loss': np.float64(0.02879590205848217), 'behavior_loss': np.float64(2.1177884340286255)}

tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True, False, False, False,  True,  True,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True,  True, False, False, False, False,  True, False,  True, False,
        False,  True])
tensor([False, False,  True, False, False,  True, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False, False,  True,  True, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True, False, False, False,  True,  True,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False,  True])
Episode step 2710, time diff 0.8708233833312988, total time dif 226.49352502822876)
step: 2710 @ episode report: {'average_total_reward': np.float32(5.3333335), 'reward_variance': np.float32(1.321605), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 88768} @ step loss: {'critic_loss': np.float64(0.11800481379032135), 'actor_loss': np.float64(-0.9593880414962769), 'hyper_actor_loss': np.float64(0.02874559089541435), 'behavior_loss': np.float64(2.1306235909461977)}

tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False,  True,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False,  True, False,  True, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True,  True,  True, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 2720, time diff 0.8487997055053711, total time dif 227.36434841156006)
step: 2720 @ episode report: {'average_total_reward': np.float32(5.46), 'reward_variance': np.float32(1.3985975), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 89088} @ step loss: {'critic_loss': np.float64(0.12059800773859024), 'actor_loss': np.float64(-0.9440767109394074), 'hyper_actor_loss': np.float64(0.028748310543596743), 'behavior_loss': np.float64(2.080044651031494)}

tensor([False, False, False,  True,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True,  True, False, False, False,
        False, False,  True, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True,  True, False,  True, False, False, False,
        False, False])
Episode step 2730, time diff 0.9401438236236572, total time dif 228.21314811706543)
step: 2730 @ episode report: {'average_total_reward': np.float32(6.294444), 'reward_variance': np.float32(1.6638832), 'max_total_reward': np.float32(8.777779), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.7), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 89408} @ step loss: {'critic_loss': np.float64(0.11565233469009399), 'actor_loss': np.float64(-0.9349409997463226), 'hyper_actor_loss': np.float64(0.02856677658855915), 'behavior_loss': np.float64(2.09338139295578)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False,  True,  True, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False,  True,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True,  True,  True,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False,  True, False,  True, False, False,  True, False, False, False,
         True,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False,  True])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
Episode step 2740, time diff 1.041980266571045, total time dif 229.1532919406891)
step: 2740 @ episode report: {'average_total_reward': np.float32(5.384444), 'reward_variance': np.float32(2.5676346), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(4.0), 'buffer_size': 89728} @ step loss: {'critic_loss': np.float64(0.12728644758462906), 'actor_loss': np.float64(-0.9396903097629548), 'hyper_actor_loss': np.float64(0.028851435519754887), 'behavior_loss': np.float64(2.1756420493125916)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True,  True,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True, False,  True, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
         True, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False,  True,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True,  True, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 2750, time diff 1.1338181495666504, total time dif 230.19527220726013)
step: 2750 @ episode report: {'average_total_reward': np.float32(5.384444), 'reward_variance': np.float32(1.6897827), 'max_total_reward': np.float32(8.533334), 'min_total_reward': np.float32(3.4111116), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 90048} @ step loss: {'critic_loss': np.float64(0.11421800330281258), 'actor_loss': np.float64(-0.9262789487838745), 'hyper_actor_loss': np.float64(0.028784196451306344), 'behavior_loss': np.float64(2.170904779434204)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
         True, False])
tensor([ True,  True, False, False, False, False,  True, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
         True, False,  True, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True,  True, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 2760, time diff 1.179633617401123, total time dif 231.32909035682678)
step: 2760 @ episode report: {'average_total_reward': np.float32(5.4233336), 'reward_variance': np.float32(1.5808754), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 90368} @ step loss: {'critic_loss': np.float64(0.117486122995615), 'actor_loss': np.float64(-0.923507696390152), 'hyper_actor_loss': np.float64(0.029331455938518047), 'behavior_loss': np.float64(2.1250162959098815)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False,  True, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
         True,  True, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
Episode step 2770, time diff 0.9826505184173584, total time dif 232.5087239742279)
step: 2770 @ episode report: {'average_total_reward': np.float32(5.4355555), 'reward_variance': np.float32(1.8462915), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.1666667), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 90688} @ step loss: {'critic_loss': np.float64(0.11987484395503997), 'actor_loss': np.float64(-0.954164856672287), 'hyper_actor_loss': np.float64(0.029245498962700366), 'behavior_loss': np.float64(2.0739060163497927)}

tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
         True,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False, False,  True,
        False, False, False,  True, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False,  True, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False,  True,
        False, False])
Episode step 2780, time diff 0.8943336009979248, total time dif 233.49137449264526)
step: 2780 @ episode report: {'average_total_reward': np.float32(5.8966665), 'reward_variance': np.float32(2.5897048), 'max_total_reward': np.float32(8.777778), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 91008} @ step loss: {'critic_loss': np.float64(0.1340463250875473), 'actor_loss': np.float64(-0.9805148720741272), 'hyper_actor_loss': np.float64(0.02969515286386013), 'behavior_loss': np.float64(2.190139901638031)}

tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False,  True,  True,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False,  True,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
Episode step 2790, time diff 0.9102654457092285, total time dif 234.3857080936432)
step: 2790 @ episode report: {'average_total_reward': np.float32(5.072222), 'reward_variance': np.float32(2.0542285), 'max_total_reward': np.float32(7.5333343), 'min_total_reward': np.float32(2.1666667), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(4.0), 'buffer_size': 91328} @ step loss: {'critic_loss': np.float64(0.12756212130188943), 'actor_loss': np.float64(-0.9543980300426483), 'hyper_actor_loss': np.float64(0.0294769000262022), 'behavior_loss': np.float64(2.219800114631653)}

tensor([False, False, False,  True,  True, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True,  True, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False,  True, False, False,  True,
        False, False, False, False,  True, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False,  True, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False,  True, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False,  True,  True, False,  True,
        False,  True])
Episode step 2800, time diff 0.8205716609954834, total time dif 235.29597353935242)
step: 2800 @ episode report: {'average_total_reward': np.float32(5.6722226), 'reward_variance': np.float32(1.4380558), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 91648} @ step loss: {'critic_loss': np.float64(0.12373242676258087), 'actor_loss': np.float64(-0.941834557056427), 'hyper_actor_loss': np.float64(0.028999761492013932), 'behavior_loss': np.float64(2.2056132555007935)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False,  True,  True,
         True, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True,  True,  True,  True, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
Episode step 2810, time diff 0.8032629489898682, total time dif 236.1165452003479)
step: 2810 @ episode report: {'average_total_reward': np.float32(5.7477784), 'reward_variance': np.float32(1.6505196), 'max_total_reward': np.float32(7.6555552), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 91968} @ step loss: {'critic_loss': np.float64(0.11266110613942146), 'actor_loss': np.float64(-0.9234204590320587), 'hyper_actor_loss': np.float64(0.02879844680428505), 'behavior_loss': np.float64(2.2422885417938234)}

tensor([False, False, False,  True, False,  True, False, False, False, False,
         True, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False,  True, False,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False,  True,
        False,  True, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True,  True, False,  True,  True, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True,  True, False, False,  True,
        False, False])
Episode step 2820, time diff 0.8419830799102783, total time dif 236.91980814933777)
step: 2820 @ episode report: {'average_total_reward': np.float32(5.508889), 'reward_variance': np.float32(1.7824647), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 92288} @ step loss: {'critic_loss': np.float64(0.11027462184429168), 'actor_loss': np.float64(-0.9314086556434631), 'hyper_actor_loss': np.float64(0.028543896041810513), 'behavior_loss': np.float64(2.1277894973754883)}

tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
         True, False])
tensor([ True, False, False,  True,  True,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False,  True,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
Episode step 2830, time diff 0.8865852355957031, total time dif 237.76179122924805)
step: 2830 @ episode report: {'average_total_reward': np.float32(5.408889), 'reward_variance': np.float32(1.7164646), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 92608} @ step loss: {'critic_loss': np.float64(0.1084878109395504), 'actor_loss': np.float64(-0.9012184977531433), 'hyper_actor_loss': np.float64(0.027754702232778074), 'behavior_loss': np.float64(2.2081343650817873)}

tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True,  True])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
         True, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False,  True,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False,  True,
         True, False])
Episode step 2840, time diff 0.8964192867279053, total time dif 238.64837646484375)
step: 2840 @ episode report: {'average_total_reward': np.float32(6.1211114), 'reward_variance': np.float32(1.3991468), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(4.533334), 'average_n_step': np.float32(7.6), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 92928} @ step loss: {'critic_loss': np.float64(0.10856938809156418), 'actor_loss': np.float64(-0.9096284806728363), 'hyper_actor_loss': np.float64(0.02740807328373194), 'behavior_loss': np.float64(2.245504450798035)}

tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False,  True, False,
         True, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([ True,  True, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False,  True,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 2850, time diff 0.8850736618041992, total time dif 239.54479575157166)
step: 2850 @ episode report: {'average_total_reward': np.float32(5.6211114), 'reward_variance': np.float32(1.9531721), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 93248} @ step loss: {'critic_loss': np.float64(0.13291589841246604), 'actor_loss': np.float64(-0.9556690096855164), 'hyper_actor_loss': np.float64(0.02703027557581663), 'behavior_loss': np.float64(2.283934783935547)}

tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
         True, False, False, False, False, False,  True, False,  True, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False,  True, False, False,
        False, False, False, False,  True,  True, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False,  True,
         True, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False,  True,
        False, False])
Episode step 2860, time diff 0.8248684406280518, total time dif 240.42986941337585)
step: 2860 @ episode report: {'average_total_reward': np.float32(6.008889), 'reward_variance': np.float32(2.33323), 'max_total_reward': np.float32(8.777779), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(7.5), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 93568} @ step loss: {'critic_loss': np.float64(0.1151486374437809), 'actor_loss': np.float64(-0.9333088457584381), 'hyper_actor_loss': np.float64(0.02657492384314537), 'behavior_loss': np.float64(2.303870177268982)}

tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True,  True, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
         True, False])
tensor([False, False,  True, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True,  True,  True,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False,  True, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 2870, time diff 0.8075048923492432, total time dif 241.2547378540039)
step: 2870 @ episode report: {'average_total_reward': np.float32(6.47), 'reward_variance': np.float32(1.5443714), 'max_total_reward': np.float32(8.9), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.9), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 93888} @ step loss: {'critic_loss': np.float64(0.11684776321053505), 'actor_loss': np.float64(-0.9267367601394654), 'hyper_actor_loss': np.float64(0.026326398737728594), 'behavior_loss': np.float64(2.2096631646156313)}

tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True,  True,
         True, False,  True, False, False, False, False, False, False, False,
        False, False,  True,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True,  True, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True])
Episode step 2880, time diff 0.8329527378082275, total time dif 242.06224274635315)
step: 2880 @ episode report: {'average_total_reward': np.float32(5.9844446), 'reward_variance': np.float32(1.4670666), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(7.5), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 94208} @ step loss: {'critic_loss': np.float64(0.1307309165596962), 'actor_loss': np.float64(-1.0007107317447663), 'hyper_actor_loss': np.float64(0.02569731492549181), 'behavior_loss': np.float64(2.1987209558486938)}

tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True,  True,  True, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False,  True, False,  True,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True,  True,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 2890, time diff 0.8191494941711426, total time dif 242.89519548416138)
step: 2890 @ episode report: {'average_total_reward': np.float32(5.4355555), 'reward_variance': np.float32(1.0572546), 'max_total_reward': np.float32(7.533334), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 94528} @ step loss: {'critic_loss': np.float64(0.11908903792500496), 'actor_loss': np.float64(-0.8954640388488769), 'hyper_actor_loss': np.float64(0.02533455826342106), 'behavior_loss': np.float64(2.3674724817276003)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True,  True,  True,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True,  True, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False,  True, False, False,  True,  True,  True, False,  True, False,
        False,  True, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 2900, time diff 0.7975249290466309, total time dif 243.71434497833252)
step: 2900 @ episode report: {'average_total_reward': np.float32(4.6722226), 'reward_variance': np.float32(1.3143766), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.1666667), 'average_n_step': np.float32(6.2), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 94848} @ step loss: {'critic_loss': np.float64(0.12317662239074707), 'actor_loss': np.float64(-0.9219473302364349), 'hyper_actor_loss': np.float64(0.025220021978020667), 'behavior_loss': np.float64(2.373028111457825)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False,  True, False,  True, False,
         True, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False,  True,  True, False, False,
        False, False])
Episode step 2910, time diff 0.7838821411132812, total time dif 244.51186990737915)
step: 2910 @ episode report: {'average_total_reward': np.float32(5.772222), 'reward_variance': np.float32(1.4319322), 'max_total_reward': np.float32(7.5333343), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 95168} @ step loss: {'critic_loss': np.float64(0.12011341601610184), 'actor_loss': np.float64(-0.9512748003005982), 'hyper_actor_loss': np.float64(0.024789307080209256), 'behavior_loss': np.float64(2.3928032159805297)}

tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False,  True, False, False, False,  True, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
         True, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 2920, time diff 0.7993428707122803, total time dif 245.29575204849243)
step: 2920 @ episode report: {'average_total_reward': np.float32(5.6966667), 'reward_variance': np.float32(1.4571129), 'max_total_reward': np.float32(8.533334), 'min_total_reward': np.float32(4.411111), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 95488} @ step loss: {'critic_loss': np.float64(0.12300259843468667), 'actor_loss': np.float64(-0.9484065413475037), 'hyper_actor_loss': np.float64(0.024607580341398715), 'behavior_loss': np.float64(2.4299837350845337)}

tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False,  True, False,
         True,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
         True, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True,  True,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True,  True, False, False, False, False, False, False,  True,  True,
         True,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False,  True, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 2930, time diff 0.8883187770843506, total time dif 246.0950949192047)
step: 2930 @ episode report: {'average_total_reward': np.float32(5.247778), 'reward_variance': np.float32(1.1758038), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.0444446), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 95808} @ step loss: {'critic_loss': np.float64(0.113264449685812), 'actor_loss': np.float64(-0.9236498892307281), 'hyper_actor_loss': np.float64(0.02433591727167368), 'behavior_loss': np.float64(2.371370327472687)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False,  True, False, False, False,  True,
        False,  True])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False,  True, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False,  True,
         True, False,  True, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False,  True,  True, False, False,  True, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False,  True,
        False, False])
Episode step 2940, time diff 0.9397966861724854, total time dif 246.98341369628906)
step: 2940 @ episode report: {'average_total_reward': np.float32(5.184445), 'reward_variance': np.float32(0.976277), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 96128} @ step loss: {'critic_loss': np.float64(0.10895469933748245), 'actor_loss': np.float64(-0.9250321984291077), 'hyper_actor_loss': np.float64(0.023964997753500937), 'behavior_loss': np.float64(2.4697710514068603)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False,  True,  True, False, False, False,  True,
        False, False,  True, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False,  True, False,  True, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True,  True, False, False, False,  True, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
Episode step 2950, time diff 0.9320595264434814, total time dif 247.92321038246155)
step: 2950 @ episode report: {'average_total_reward': np.float32(5.608889), 'reward_variance': np.float32(1.6693785), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(3.1666667), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 96448} @ step loss: {'critic_loss': np.float64(0.11731333434581756), 'actor_loss': np.float64(-0.9294042527675629), 'hyper_actor_loss': np.float64(0.023311316221952438), 'behavior_loss': np.float64(2.3896600246429442)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False,  True, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True,  True,
        False,  True, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 2960, time diff 0.8654484748840332, total time dif 248.85526990890503)
step: 2960 @ episode report: {'average_total_reward': np.float32(6.3966665), 'reward_variance': np.float32(1.9950634), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(7.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 96768} @ step loss: {'critic_loss': np.float64(0.11518828794360161), 'actor_loss': np.float64(-0.9122663676738739), 'hyper_actor_loss': np.float64(0.023103027231991292), 'behavior_loss': np.float64(2.357375645637512)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([ True, False, False,  True, False, False, False,  True,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False,  True,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False,  True, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
Episode step 2970, time diff 0.9183576107025146, total time dif 249.72071838378906)
step: 2970 @ episode report: {'average_total_reward': np.float32(5.5111113), 'reward_variance': np.float32(1.3368893), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(4.1666665), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 97088} @ step loss: {'critic_loss': np.float64(0.12323621734976768), 'actor_loss': np.float64(-0.9224473595619201), 'hyper_actor_loss': np.float64(0.022950039058923722), 'behavior_loss': np.float64(2.558786630630493)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False,  True, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False,  True,  True, False, False, False,
        False,  True, False, False,  True, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False,  True, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False,  True, False, False,  True, False,
         True, False])
Episode step 2980, time diff 0.873483419418335, total time dif 250.63907599449158)
step: 2980 @ episode report: {'average_total_reward': np.float32(5.8966665), 'reward_variance': np.float32(1.4585193), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(4.2888894), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 97408} @ step loss: {'critic_loss': np.float64(0.11502498388290405), 'actor_loss': np.float64(-0.9499231696128845), 'hyper_actor_loss': np.float64(0.022743592970073223), 'behavior_loss': np.float64(2.496122884750366)}

tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False,  True, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True,  True, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
         True, False])
tensor([ True, False,  True, False,  True, False,  True,  True, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 2990, time diff 0.85947585105896, total time dif 251.5125594139099)
step: 2990 @ episode report: {'average_total_reward': np.float32(4.9111114), 'reward_variance': np.float32(1.2968892), 'max_total_reward': np.float32(6.6555567), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 97728} @ step loss: {'critic_loss': np.float64(0.11572931334376335), 'actor_loss': np.float64(-0.8812770962715148), 'hyper_actor_loss': np.float64(0.022247659228742122), 'behavior_loss': np.float64(2.4297006607055662)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False,  True,  True, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False,  True, False,  True, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False,  True])
Episode step 3000, time diff 1.1136348247528076, total time dif 252.37203526496887)
step: 3000 @ episode report: {'average_total_reward': np.float32(5.5455556), 'reward_variance': np.float32(1.1050972), 'max_total_reward': np.float32(7.6555552), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 98048} @ step loss: {'critic_loss': np.float64(0.11015283316373825), 'actor_loss': np.float64(-0.9361604690551758), 'hyper_actor_loss': np.float64(0.021821864135563373), 'behavior_loss': np.float64(2.473566937446594)}

tensor([False, False, False, False,  True,  True, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
         True, False, False, False, False,  True, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False,  True, False,  True, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False,  True,  True, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 3010, time diff 0.9258902072906494, total time dif 253.48567008972168)
step: 3010 @ episode report: {'average_total_reward': np.float32(5.708889), 'reward_variance': np.float32(1.2574521), 'max_total_reward': np.float32(7.5333343), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 98368} @ step loss: {'critic_loss': np.float64(0.13145757094025612), 'actor_loss': np.float64(-0.9477125644683838), 'hyper_actor_loss': np.float64(0.021563701145350934), 'behavior_loss': np.float64(2.595818853378296)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False,  True,
         True, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True,  True, False, False,
        False, False])
Episode step 3020, time diff 0.9496266841888428, total time dif 254.41156029701233)
step: 3020 @ episode report: {'average_total_reward': np.float32(6.033334), 'reward_variance': np.float32(1.8360497), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(7.5), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 98688} @ step loss: {'critic_loss': np.float64(0.128570456802845), 'actor_loss': np.float64(-0.9030989944934845), 'hyper_actor_loss': np.float64(0.020948522351682188), 'behavior_loss': np.float64(2.517631483078003)}

tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
         True, False,  True, False, False,  True, False, False, False,  True,
        False, False])
tensor([ True,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False,  True,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True,  True,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 3030, time diff 0.9109680652618408, total time dif 255.36118698120117)
step: 3030 @ episode report: {'average_total_reward': np.float32(5.384444), 'reward_variance': np.float32(1.6174376), 'max_total_reward': np.float32(8.777779), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 99008} @ step loss: {'critic_loss': np.float64(0.11904634982347488), 'actor_loss': np.float64(-0.9719593107700348), 'hyper_actor_loss': np.float64(0.020714312605559827), 'behavior_loss': np.float64(2.5741442918777464)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True,  True, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
         True, False, False,  True, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False,  True,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False,  True,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3040, time diff 0.968595027923584, total time dif 256.272155046463)
step: 3040 @ episode report: {'average_total_reward': np.float32(5.672222), 'reward_variance': np.float32(1.8245739), 'max_total_reward': np.float32(8.411111), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 99328} @ step loss: {'critic_loss': np.float64(0.1074516385793686), 'actor_loss': np.float64(-0.9268733739852906), 'hyper_actor_loss': np.float64(0.02052499484270811), 'behavior_loss': np.float64(2.515288829803467)}

tensor([False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False,  True,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False,  True, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True,  True,  True,
         True, False])
tensor([False, False,  True, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3050, time diff 0.8880627155303955, total time dif 257.2407500743866)
step: 3050 @ episode report: {'average_total_reward': np.float32(5.0600004), 'reward_variance': np.float32(2.906672), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(4.0), 'buffer_size': 99648} @ step loss: {'critic_loss': np.float64(0.11620440855622291), 'actor_loss': np.float64(-0.9022014498710632), 'hyper_actor_loss': np.float64(0.02034117914736271), 'behavior_loss': np.float64(2.593345046043396)}

tensor([False,  True, False, False, False, False,  True, False, False, False,
         True, False,  True,  True, False,  True, False, False, False,  True,
        False, False,  True, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([ True, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False,  True, False,  True, False,  True, False,  True,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False,  True, False,
         True, False])
Episode step 3060, time diff 0.9638082981109619, total time dif 258.128812789917)
step: 3060 @ episode report: {'average_total_reward': np.float32(5.608889), 'reward_variance': np.float32(1.1336744), 'max_total_reward': np.float32(7.411112), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 99968} @ step loss: {'critic_loss': np.float64(0.1178947739303112), 'actor_loss': np.float64(-0.9332789778709412), 'hyper_actor_loss': np.float64(0.02019349914044142), 'behavior_loss': np.float64(2.64684681892395)}

tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False,  True, False,  True,  True,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True,  True, False,  True, False,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
Episode step 3070, time diff 0.8981997966766357, total time dif 259.09262108802795)
step: 3070 @ episode report: {'average_total_reward': np.float32(6.123334), 'reward_variance': np.float32(1.8375915), 'max_total_reward': np.float32(7.4111114), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(7.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11735000908374786), 'actor_loss': np.float64(-0.9208735406398774), 'hyper_actor_loss': np.float64(0.019850598089396952), 'behavior_loss': np.float64(2.5336020469665526)}

tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False,  True, False,  True, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False,  True,  True,
         True, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True,  True, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False,  True,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False,  True,  True, False,
         True, False])
Episode step 3080, time diff 0.9250991344451904, total time dif 259.9908208847046)
step: 3080 @ episode report: {'average_total_reward': np.float32(5.498889), 'reward_variance': np.float32(1.7206777), 'max_total_reward': np.float32(7.1666665), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11781455874443054), 'actor_loss': np.float64(-0.911739605665207), 'hyper_actor_loss': np.float64(0.019519316405057906), 'behavior_loss': np.float64(2.6087823152542113)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False,  True, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False,  True, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False,  True, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False,  True, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
Episode step 3090, time diff 0.913231372833252, total time dif 260.9159200191498)
step: 3090 @ episode report: {'average_total_reward': np.float32(5.608889), 'reward_variance': np.float32(2.0204895), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11883918419480324), 'actor_loss': np.float64(-0.9225778937339782), 'hyper_actor_loss': np.float64(0.019271061196923255), 'behavior_loss': np.float64(2.5854327201843263)}

tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False,  True, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False,  True, False, False,
         True, False, False,  True, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False,  True, False,  True, False, False,
        False, False, False,  True,  True, False,  True, False, False, False,
        False,  True, False, False, False,  True, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
Episode step 3100, time diff 0.9239323139190674, total time dif 261.82915139198303)
step: 3100 @ episode report: {'average_total_reward': np.float32(4.862222), 'reward_variance': np.float32(1.8924987), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10909949988126755), 'actor_loss': np.float64(-0.9559279918670655), 'hyper_actor_loss': np.float64(0.019182391837239264), 'behavior_loss': np.float64(2.5613776206970216)}

tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False,  True,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([ True, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False, False, False,  True,  True,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True,  True,  True, False, False, False,
         True,  True,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3110, time diff 0.8457236289978027, total time dif 262.7530837059021)
step: 3110 @ episode report: {'average_total_reward': np.float32(5.5211115), 'reward_variance': np.float32(2.518579), 'max_total_reward': np.float32(8.777779), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10792087092995643), 'actor_loss': np.float64(-0.8639378368854522), 'hyper_actor_loss': np.float64(0.01883547529578209), 'behavior_loss': np.float64(2.8760912895202635)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False,  True,  True,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True,  True, False, False,
        False, False,  True, False,  True, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False,  True, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False,  True,  True, False, False, False, False, False, False, False,
        False,  True])
Episode step 3120, time diff 0.8914945125579834, total time dif 263.5988073348999)
step: 3120 @ episode report: {'average_total_reward': np.float32(5.2966666), 'reward_variance': np.float32(1.8552113), 'max_total_reward': np.float32(7.4111114), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11393091455101967), 'actor_loss': np.float64(-0.9039104878902435), 'hyper_actor_loss': np.float64(0.018625100143253803), 'behavior_loss': np.float64(2.7013675928115846)}

tensor([False, False, False, False, False,  True,  True, False, False,  True,
        False, False, False, False, False, False,  True,  True, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True,  True,
        False, False])
tensor([False,  True, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True,  True,  True,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False,  True, False,  True,
        False, False, False,  True, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False,  True,  True,
        False, False])
Episode step 3130, time diff 0.8842971324920654, total time dif 264.4903018474579)
step: 3130 @ episode report: {'average_total_reward': np.float32(6.5577784), 'reward_variance': np.float32(1.1425383), 'max_total_reward': np.float32(8.777778), 'min_total_reward': np.float32(5.5333333), 'average_n_step': np.float32(8.0), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(7.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.12606767639517785), 'actor_loss': np.float64(-0.9711078405380249), 'hyper_actor_loss': np.float64(0.019026491045951843), 'behavior_loss': np.float64(2.632137823104858)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False,  True,  True, False,  True,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True,  True,
        False, False])
tensor([False, False, False,  True,  True, False,  True, False, False, False,
         True,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3140, time diff 0.8688333034515381, total time dif 265.37459897994995)
step: 3140 @ episode report: {'average_total_reward': np.float32(5.608889), 'reward_variance': np.float32(0.9825629), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.12882543802261354), 'actor_loss': np.float64(-0.911971241235733), 'hyper_actor_loss': np.float64(0.018872970528900624), 'behavior_loss': np.float64(2.6799737453460692)}

tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False,  True,  True, False, False,  True, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False,  True, False,  True,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False,  True, False, False, False,  True,  True, False, False,
        False, False,  True,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3150, time diff 0.9489157199859619, total time dif 266.2434322834015)
step: 3150 @ episode report: {'average_total_reward': np.float32(5.884444), 'reward_variance': np.float32(0.9599309), 'max_total_reward': np.float32(7.411111), 'min_total_reward': np.float32(4.2888894), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11747272238135338), 'actor_loss': np.float64(-0.9405144333839417), 'hyper_actor_loss': np.float64(0.019027525931596755), 'behavior_loss': np.float64(2.6745392084121704)}

tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False,  True,  True, False, False, False, False,  True,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False,  True, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
         True, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False,  True, False,  True, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
Episode step 3160, time diff 0.9048647880554199, total time dif 267.19234800338745)
step: 3160 @ episode report: {'average_total_reward': np.float32(4.708889), 'reward_variance': np.float32(0.6759211), 'max_total_reward': np.float32(5.655556), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.2), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11102847158908843), 'actor_loss': np.float64(-0.9390455305576324), 'hyper_actor_loss': np.float64(0.018796588480472564), 'behavior_loss': np.float64(2.739952325820923)}

tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False,  True,  True,  True, False, False, False,
         True, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False,  True, False, False,  True, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
Episode step 3170, time diff 0.9100477695465088, total time dif 268.09721279144287)
step: 3170 @ episode report: {'average_total_reward': np.float32(5.7211113), 'reward_variance': np.float32(1.381172), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11044299453496934), 'actor_loss': np.float64(-0.9193287014961242), 'hyper_actor_loss': np.float64(0.01878843791782856), 'behavior_loss': np.float64(2.6649606466293334)}

tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False,  True,  True,  True,  True,  True,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
Episode step 3180, time diff 1.3834571838378906, total time dif 269.0072605609894)
step: 3180 @ episode report: {'average_total_reward': np.float32(5.4844446), 'reward_variance': np.float32(0.90733874), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10640721097588539), 'actor_loss': np.float64(-0.9101266384124755), 'hyper_actor_loss': np.float64(0.01895510368049145), 'behavior_loss': np.float64(2.6835614919662474)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
         True, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
         True, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
         True,  True, False,  True, False, False,  True, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3190, time diff 1.0979926586151123, total time dif 270.39071774482727)
step: 3190 @ episode report: {'average_total_reward': np.float32(6.1577783), 'reward_variance': np.float32(3.6385624), 'max_total_reward': np.float32(8.9), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.6), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10930638983845711), 'actor_loss': np.float64(-0.918410348892212), 'hyper_actor_loss': np.float64(0.0188326820731163), 'behavior_loss': np.float64(2.6693966150283814)}

tensor([False, False,  True,  True,  True,  True, False,  True, False,  True,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False,  True, False,
         True,  True, False, False, False, False,  True, False, False,  True,
        False,  True, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False,  True,  True, False, False,  True,
         True,  True, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
Episode step 3200, time diff 0.9828190803527832, total time dif 271.4887104034424)
step: 3200 @ episode report: {'average_total_reward': np.float32(5.9844446), 'reward_variance': np.float32(1.3388692), 'max_total_reward': np.float32(7.5333343), 'min_total_reward': np.float32(3.4111116), 'average_n_step': np.float32(7.5), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10044504851102828), 'actor_loss': np.float64(-0.9237066209316254), 'hyper_actor_loss': np.float64(0.019111787155270576), 'behavior_loss': np.float64(2.658934760093689)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False,  True,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True,  True,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False,  True, False,
         True, False, False, False, False,  True,  True,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True,  True, False, False, False,  True,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3210, time diff 0.9620265960693359, total time dif 272.47152948379517)
step: 3210 @ episode report: {'average_total_reward': np.float32(5.735555), 'reward_variance': np.float32(1.5807853), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11991872861981392), 'actor_loss': np.float64(-0.9330462455749512), 'hyper_actor_loss': np.float64(0.019331193156540395), 'behavior_loss': np.float64(2.7480503797531126)}

tensor([False,  True,  True, False,  True, False, False, False, False, False,
        False, False,  True, False,  True,  True, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([ True, False, False, False, False, False, False, False,  True,  True,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True,  True, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
Episode step 3220, time diff 1.2072808742523193, total time dif 273.4335560798645)
step: 3220 @ episode report: {'average_total_reward': np.float32(5.072222), 'reward_variance': np.float32(1.1763765), 'max_total_reward': np.float32(7.411111), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.1104042150080204), 'actor_loss': np.float64(-0.9355361461639404), 'hyper_actor_loss': np.float64(0.019152778945863248), 'behavior_loss': np.float64(2.5940234661102295)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False,  True,
        False, False, False, False, False,  True, False, False,  True, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False,  True, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True,  True, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
Episode step 3230, time diff 0.9776096343994141, total time dif 274.6408369541168)
step: 3230 @ episode report: {'average_total_reward': np.float32(5.821111), 'reward_variance': np.float32(1.2550732), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10621241629123687), 'actor_loss': np.float64(-0.9160034596920014), 'hyper_actor_loss': np.float64(0.01943782567977905), 'behavior_loss': np.float64(2.564073371887207)}

tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True,  True, False,
         True, False, False, False, False,  True, False,  True,  True,  True,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3240, time diff 1.2156455516815186, total time dif 275.61844658851624)
step: 3240 @ episode report: {'average_total_reward': np.float32(5.5600004), 'reward_variance': np.float32(1.7476346), 'max_total_reward': np.float32(7.411112), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10989012941718102), 'actor_loss': np.float64(-0.9225351870059967), 'hyper_actor_loss': np.float64(0.01967382840812206), 'behavior_loss': np.float64(2.688752269744873)}

tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False,  True,  True, False,  True, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False,  True, False, False,  True,
         True, False,  True,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False,  True, False,  True, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3250, time diff 1.1009635925292969, total time dif 276.83409214019775)
step: 3250 @ episode report: {'average_total_reward': np.float32(5.26), 'reward_variance': np.float32(0.59807897), 'max_total_reward': np.float32(6.411111), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10200571790337562), 'actor_loss': np.float64(-0.9132874727249145), 'hyper_actor_loss': np.float64(0.019614396803081035), 'behavior_loss': np.float64(2.7753357172012327)}

tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False,  True,
         True, False, False,  True, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False,  True, False,
         True, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False,  True])
Episode step 3260, time diff 0.90932297706604, total time dif 277.93505573272705)
step: 3260 @ episode report: {'average_total_reward': np.float32(5.821111), 'reward_variance': np.float32(0.6735419), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(4.2888894), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10833960846066475), 'actor_loss': np.float64(-0.9067005753517151), 'hyper_actor_loss': np.float64(0.01962132900953293), 'behavior_loss': np.float64(2.5392170429229735)}

tensor([False, False, False,  True, False, False,  True, False, False,  True,
        False, False, False, False,  True,  True, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False,  True,  True, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True,  True,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 3270, time diff 1.0052332878112793, total time dif 278.8443787097931)
step: 3270 @ episode report: {'average_total_reward': np.float32(5.3599997), 'reward_variance': np.float32(2.1881783), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(2.9222224), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11014837324619293), 'actor_loss': np.float64(-0.9737492680549622), 'hyper_actor_loss': np.float64(0.019296241365373133), 'behavior_loss': np.float64(2.624235153198242)}

tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False,  True,  True,  True, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
         True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
Episode step 3280, time diff 1.007521629333496, total time dif 279.84961199760437)
step: 3280 @ episode report: {'average_total_reward': np.float32(5.2599998), 'reward_variance': np.float32(0.4165481), 'max_total_reward': np.float32(6.4111114), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10964826419949532), 'actor_loss': np.float64(-0.9218973338603973), 'hyper_actor_loss': np.float64(0.019598748162388803), 'behavior_loss': np.float64(2.5996415615081787)}

tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True,  True, False,
        False,  True])
tensor([False, False, False, False,  True,  True, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False,  True,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 3290, time diff 0.9227778911590576, total time dif 280.85713362693787)
step: 3290 @ episode report: {'average_total_reward': np.float32(5.235556), 'reward_variance': np.float32(2.6450324), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.1154975138604641), 'actor_loss': np.float64(-0.9258640229701995), 'hyper_actor_loss': np.float64(0.019559709541499614), 'behavior_loss': np.float64(2.628337097167969)}

tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True,  True,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False,  True,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False,  True,  True, False, False,
         True, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False,  True, False,
         True,  True, False,  True, False, False, False,  True, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
Episode step 3300, time diff 0.8392939567565918, total time dif 281.7799115180969)
step: 3300 @ episode report: {'average_total_reward': np.float32(5.56), 'reward_variance': np.float32(3.384105), 'max_total_reward': np.float32(9.655557), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(11.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10563837438821792), 'actor_loss': np.float64(-0.9202365040779114), 'hyper_actor_loss': np.float64(0.019536165334284306), 'behavior_loss': np.float64(2.6051716804504395)}

tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False,  True,  True,  True, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True,  True, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
Episode step 3310, time diff 0.8516030311584473, total time dif 282.6192054748535)
step: 3310 @ episode report: {'average_total_reward': np.float32(5.572222), 'reward_variance': np.float32(0.3363764), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(4.533334), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10992071703076363), 'actor_loss': np.float64(-0.9272120654582977), 'hyper_actor_loss': np.float64(0.019444826431572436), 'behavior_loss': np.float64(2.698754167556763)}

tensor([False,  True, False, False,  True, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False,  True,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False,  True, False,  True,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True,  True,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3320, time diff 0.9240562915802002, total time dif 283.47080850601196)
step: 3320 @ episode report: {'average_total_reward': np.float32(5.408889), 'reward_variance': np.float32(0.80320483), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10364150255918503), 'actor_loss': np.float64(-0.9161018550395965), 'hyper_actor_loss': np.float64(0.019272091053426265), 'behavior_loss': np.float64(2.6929004907608034)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True,  True, False, False,  True, False, False, False, False,  True,
        False,  True, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False,  True, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False,  True,  True, False, False,  True, False,  True, False,
        False, False, False, False, False,  True, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
         True, False])
Episode step 3330, time diff 0.9670281410217285, total time dif 284.39486479759216)
step: 3330 @ episode report: {'average_total_reward': np.float32(5.4844446), 'reward_variance': np.float32(1.0170667), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10455999076366425), 'actor_loss': np.float64(-0.8861495077610015), 'hyper_actor_loss': np.float64(0.01932434570044279), 'behavior_loss': np.float64(2.634062480926514)}

tensor([ True,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False,  True, False, False, False,  True,  True,  True, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True,  True, False, False, False, False,  True,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 3340, time diff 0.8789801597595215, total time dif 285.3618929386139)
step: 3340 @ episode report: {'average_total_reward': np.float32(5.7066674), 'reward_variance': np.float32(0.57968414), 'max_total_reward': np.float32(6.6555567), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10417287796735764), 'actor_loss': np.float64(-0.9584138214588165), 'hyper_actor_loss': np.float64(0.019102486595511437), 'behavior_loss': np.float64(2.607434630393982)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False,  True, False,
        False, False, False, False,  True, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False,  True,  True,  True, False,
        False, False,  True,  True, False, False,  True,  True, False, False,
         True, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3350, time diff 0.8205306529998779, total time dif 286.2408730983734)
step: 3350 @ episode report: {'average_total_reward': np.float32(5.421111), 'reward_variance': np.float32(0.7083569), 'max_total_reward': np.float32(6.655556), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09867563955485821), 'actor_loss': np.float64(-0.8781893730163575), 'hyper_actor_loss': np.float64(0.01890978217124939), 'behavior_loss': np.float64(2.6312447786331177)}

tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False,  True,  True, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True,  True,  True, False,
        False,  True, False,  True, False, False, False,  True, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False,  True,  True, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False,  True])
tensor([ True,  True, False,  True, False, False, False,  True,  True, False,
        False, False, False,  True,  True, False, False,  True,  True, False,
         True, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3360, time diff 0.8288125991821289, total time dif 287.0614037513733)
step: 3360 @ episode report: {'average_total_reward': np.float32(5.547778), 'reward_variance': np.float32(1.86089), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11049995794892312), 'actor_loss': np.float64(-0.9261532902717591), 'hyper_actor_loss': np.float64(0.01876793373376131), 'behavior_loss': np.float64(2.709328770637512)}

tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False,  True,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
         True, False, False, False,  True,  True, False, False, False, False,
        False,  True])
tensor([False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True,  True,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
Episode step 3370, time diff 0.8795008659362793, total time dif 287.8902163505554)
step: 3370 @ episode report: {'average_total_reward': np.float32(5.608889), 'reward_variance': np.float32(1.6040201), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10460216850042343), 'actor_loss': np.float64(-0.9285597741603852), 'hyper_actor_loss': np.float64(0.018945602513849736), 'behavior_loss': np.float64(2.726751375198364)}

tensor([ True, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False,  True, False, False, False, False,
         True, False, False,  True, False, False, False,  True, False,  True,
        False,  True])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True,  True, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
Episode step 3380, time diff 0.8089456558227539, total time dif 288.7697172164917)
step: 3380 @ episode report: {'average_total_reward': np.float32(5.5477777), 'reward_variance': np.float32(1.395532), 'max_total_reward': np.float32(7.411111), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10317964404821396), 'actor_loss': np.float64(-0.8970061063766479), 'hyper_actor_loss': np.float64(0.019021634571254255), 'behavior_loss': np.float64(2.5515525102615357)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False,  True,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False,  True, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True,  True, False, False, False, False, False, False,
        False,  True])
Episode step 3390, time diff 0.8890600204467773, total time dif 289.57866287231445)
step: 3390 @ episode report: {'average_total_reward': np.float32(4.786667), 'reward_variance': np.float32(0.8020941), 'max_total_reward': np.float32(6.411112), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09175148718059063), 'actor_loss': np.float64(-0.9227719247341156), 'hyper_actor_loss': np.float64(0.019068674370646476), 'behavior_loss': np.float64(2.6585007905960083)}

tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False,  True, False,  True, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False,  True, False, False,
         True, False, False,  True, False, False, False, False, False, False,
         True, False])
Episode step 3400, time diff 0.7912895679473877, total time dif 290.46772289276123)
step: 3400 @ episode report: {'average_total_reward': np.float32(5.135556), 'reward_variance': np.float32(1.9731805), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11306116059422493), 'actor_loss': np.float64(-0.9106205463409424), 'hyper_actor_loss': np.float64(0.019172981567680835), 'behavior_loss': np.float64(2.616945481300354)}

tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False,  True,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False,  True,  True,
        False,  True])
tensor([False, False,  True, False,  True,  True, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3410, time diff 0.8206970691680908, total time dif 291.2590124607086)
step: 3410 @ episode report: {'average_total_reward': np.float32(4.66), 'reward_variance': np.float32(1.4173632), 'max_total_reward': np.float32(7.533334), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11629287824034691), 'actor_loss': np.float64(-0.9627626538276672), 'hyper_actor_loss': np.float64(0.019118033349514008), 'behavior_loss': np.float64(2.6424885272979735)}

tensor([ True, False, False, False, False, False, False, False,  True, False,
         True, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
         True,  True])
tensor([ True, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
         True, False, False,  True, False, False, False, False, False, False,
         True, False,  True, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3420, time diff 0.8353080749511719, total time dif 292.0797095298767)
step: 3420 @ episode report: {'average_total_reward': np.float32(5.1233335), 'reward_variance': np.float32(1.4057148), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(2.9222226), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10739102214574814), 'actor_loss': np.float64(-0.9047820031642914), 'hyper_actor_loss': np.float64(0.019301058910787105), 'behavior_loss': np.float64(2.695591950416565)}

tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False,  True,  True, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True,  True,  True, False, False,  True, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True,  True,
        False, False, False,  True, False, False,  True, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True,  True,  True,  True, False, False, False,  True,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False,  True])
Episode step 3430, time diff 0.8098061084747314, total time dif 292.9150176048279)
step: 3430 @ episode report: {'average_total_reward': np.float32(5.3599997), 'reward_variance': np.float32(0.46343717), 'max_total_reward': np.float32(6.4111114), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10511334538459778), 'actor_loss': np.float64(-0.930892413854599), 'hyper_actor_loss': np.float64(0.01925036180764437), 'behavior_loss': np.float64(2.7093753814697266)}

tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False,  True,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False,  True, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True,  True, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3440, time diff 0.8269853591918945, total time dif 293.7248237133026)
step: 3440 @ episode report: {'average_total_reward': np.float32(5.7844443), 'reward_variance': np.float32(4.248968), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(3.2888894), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.096444720774889), 'actor_loss': np.float64(-0.9027458548545837), 'hyper_actor_loss': np.float64(0.019744483940303325), 'behavior_loss': np.float64(2.6889031887054444)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False,  True, False, False, False,
         True, False])
tensor([False,  True,  True,  True, False, False,  True,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False,  True,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True,  True,  True,  True, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
Episode step 3450, time diff 0.7707369327545166, total time dif 294.5518090724945)
step: 3450 @ episode report: {'average_total_reward': np.float32(5.408889), 'reward_variance': np.float32(1.8351555), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10204262733459472), 'actor_loss': np.float64(-0.9123967707157135), 'hyper_actor_loss': np.float64(0.019452101923525332), 'behavior_loss': np.float64(2.6557395458221436)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True,  True, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False,  True])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True,  True, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True,  True, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False,  True,  True,  True,  True,  True, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
Episode step 3460, time diff 0.8134939670562744, total time dif 295.322546005249)
step: 3460 @ episode report: {'average_total_reward': np.float32(5.184445), 'reward_variance': np.float32(1.1977333), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(4.1666665), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11394871324300766), 'actor_loss': np.float64(-0.9516842424869537), 'hyper_actor_loss': np.float64(0.019753720611333847), 'behavior_loss': np.float64(2.640018439292908)}

tensor([False, False, False, False,  True, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False,  True, False,  True, False, False, False, False,  True, False,
        False, False, False, False,  True,  True, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True,  True, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 3470, time diff 0.9754300117492676, total time dif 296.1360399723053)
step: 3470 @ episode report: {'average_total_reward': np.float32(5.0111113), 'reward_variance': np.float32(0.5127902), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.12196456268429756), 'actor_loss': np.float64(-0.9473691046237945), 'hyper_actor_loss': np.float64(0.019396994449198245), 'behavior_loss': np.float64(2.677400255203247)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False,  True,  True, False,
        False,  True, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
         True, False,  True, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False,  True, False,  True,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False,  True,  True,  True, False, False, False,
        False,  True])
tensor([ True,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3480, time diff 0.7946858406066895, total time dif 297.11146998405457)
step: 3480 @ episode report: {'average_total_reward': np.float32(5.0355554), 'reward_variance': np.float32(0.58063704), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11189167052507401), 'actor_loss': np.float64(-0.9404731214046478), 'hyper_actor_loss': np.float64(0.019075184501707552), 'behavior_loss': np.float64(2.670776867866516)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
         True, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False,  True,  True, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([ True,  True, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
Episode step 3490, time diff 0.8797099590301514, total time dif 297.90615582466125)
step: 3490 @ episode report: {'average_total_reward': np.float32(4.9477777), 'reward_variance': np.float32(0.52321094), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(4.2888894), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11000794693827629), 'actor_loss': np.float64(-0.9196568965911865), 'hyper_actor_loss': np.float64(0.01872851252555847), 'behavior_loss': np.float64(2.7190009117126466)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True,  True,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False,  True,  True,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True,  True,
        False,  True])
Episode step 3500, time diff 0.8132181167602539, total time dif 298.7858657836914)
step: 3500 @ episode report: {'average_total_reward': np.float32(6.594445), 'reward_variance': np.float32(2.1289444), 'max_total_reward': np.float32(9.655556), 'min_total_reward': np.float32(4.5333333), 'average_n_step': np.float32(8.0), 'max_n_step': np.float32(11.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.1009536050260067), 'actor_loss': np.float64(-0.9376315176486969), 'hyper_actor_loss': np.float64(0.018197225220501424), 'behavior_loss': np.float64(2.6363613843917846)}

tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True,  True, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True,  True, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True,  True, False,  True, False,
        False, False,  True, False,  True, False, False,  True,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
         True, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
Episode step 3510, time diff 0.8318154811859131, total time dif 299.59908390045166)
step: 3510 @ episode report: {'average_total_reward': np.float32(5.235555), 'reward_variance': np.float32(0.56863713), 'max_total_reward': np.float32(6.533334), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11488888412714005), 'actor_loss': np.float64(-0.9528653264045716), 'hyper_actor_loss': np.float64(0.01793317645788193), 'behavior_loss': np.float64(2.662008595466614)}

tensor([False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False,  True,  True, False,  True, False, False,
        False, False,  True, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False,  True, False,  True, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True,  True, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False,  True, False,
        False, False,  True, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False,  True])
Episode step 3520, time diff 0.7971725463867188, total time dif 300.4308993816376)
step: 3520 @ episode report: {'average_total_reward': np.float32(5.0600004), 'reward_variance': np.float32(0.8487457), 'max_total_reward': np.float32(6.411112), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10900464206933975), 'actor_loss': np.float64(-0.9029193639755249), 'hyper_actor_loss': np.float64(0.01741048041731119), 'behavior_loss': np.float64(2.7354272603988647)}

tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 3530, time diff 0.8164150714874268, total time dif 301.2280719280243)
step: 3530 @ episode report: {'average_total_reward': np.float32(5.26), 'reward_variance': np.float32(1.455931), 'max_total_reward': np.float32(7.4111114), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.1046272411942482), 'actor_loss': np.float64(-0.9121700704097748), 'hyper_actor_loss': np.float64(0.016910870000720023), 'behavior_loss': np.float64(2.652588653564453)}

tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False,  True, False, False,  True, False, False, False, False,  True,
        False,  True])
tensor([ True, False, False, False, False,  True, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False,  True, False,  True, False, False, False,  True,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
Episode step 3540, time diff 0.8757147789001465, total time dif 302.0444869995117)
step: 3540 @ episode report: {'average_total_reward': np.float32(5.162223), 'reward_variance': np.float32(1.554524), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10528701990842819), 'actor_loss': np.float64(-0.9188760101795197), 'hyper_actor_loss': np.float64(0.016436432115733625), 'behavior_loss': np.float64(2.853463315963745)}

tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False,  True,  True, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False,  True, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
Episode step 3550, time diff 0.7876598834991455, total time dif 302.92020177841187)
step: 3550 @ episode report: {'average_total_reward': np.float32(5.0722227), 'reward_variance': np.float32(2.166944), 'max_total_reward': np.float32(8.777778), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10645282417535781), 'actor_loss': np.float64(-0.9252259969711304), 'hyper_actor_loss': np.float64(0.01640261672437191), 'behavior_loss': np.float64(2.862332487106323)}

tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False,  True, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False,  True,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True,  True, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False,  True, False, False, False,  True, False,
        False, False])
Episode step 3560, time diff 0.8253538608551025, total time dif 303.707861661911)
step: 3560 @ episode report: {'average_total_reward': np.float32(4.9377775), 'reward_variance': np.float32(1.3250664), 'max_total_reward': np.float32(7.411111), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11064371019601822), 'actor_loss': np.float64(-0.928206717967987), 'hyper_actor_loss': np.float64(0.01631695609539747), 'behavior_loss': np.float64(2.9022178173065187)}

tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True,  True, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False,  True, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False,  True,
         True,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
Episode step 3570, time diff 0.8049328327178955, total time dif 304.5332155227661)
step: 3570 @ episode report: {'average_total_reward': np.float32(4.6355553), 'reward_variance': np.float32(0.583032), 'max_total_reward': np.float32(5.533334), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.2), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10176174715161324), 'actor_loss': np.float64(-0.9301036715507507), 'hyper_actor_loss': np.float64(0.01650000922381878), 'behavior_loss': np.float64(2.7108163118362425)}

tensor([False, False, False, False,  True, False, False, False, False, False,
         True,  True, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False,  True, False, False, False,
        False, False, False,  True, False, False,  True,  True, False, False,
         True, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False,  True, False,  True,  True, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False,  True, False, False,  True, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False,  True, False, False, False,  True, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
Episode step 3580, time diff 0.8417849540710449, total time dif 305.338148355484)
step: 3580 @ episode report: {'average_total_reward': np.float32(4.711111), 'reward_variance': np.float32(1.656889), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.0444448), 'average_n_step': np.float32(6.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09480262845754624), 'actor_loss': np.float64(-0.9123006522655487), 'hyper_actor_loss': np.float64(0.01655862629413605), 'behavior_loss': np.float64(2.7944042444229127)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
         True,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False,  True, False, False,  True,  True, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False,  True, False, False,  True, False,  True, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True,  True, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False,  True, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
Episode step 3590, time diff 0.7907848358154297, total time dif 306.17993330955505)
step: 3590 @ episode report: {'average_total_reward': np.float32(5.2722225), 'reward_variance': np.float32(1.4809695), 'max_total_reward': np.float32(6.655556), 'min_total_reward': np.float32(3.1666667), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10343398451805115), 'actor_loss': np.float64(-0.9281697034835815), 'hyper_actor_loss': np.float64(0.016059604845941065), 'behavior_loss': np.float64(2.7424336194992067)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True,  True, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True,  True,  True, False,  True, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3600, time diff 0.8470094203948975, total time dif 306.9707181453705)
step: 3600 @ episode report: {'average_total_reward': np.float32(4.8988886), 'reward_variance': np.float32(0.6570481), 'max_total_reward': np.float32(6.5333333), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10912071838974953), 'actor_loss': np.float64(-0.9203042626380921), 'hyper_actor_loss': np.float64(0.016466525569558143), 'behavior_loss': np.float64(2.8310237407684324)}

tensor([False, False, False,  True, False, False, False,  True,  True, False,
        False, False, False,  True, False,  True, False, False, False,  True,
        False, False, False, False, False, False,  True,  True, False, False,
         True,  True])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False,  True, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True,  True,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False, False,  True,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
Episode step 3610, time diff 0.8181800842285156, total time dif 307.8177275657654)
step: 3610 @ episode report: {'average_total_reward': np.float32(5.9333334), 'reward_variance': np.float32(1.4075806), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10829048454761506), 'actor_loss': np.float64(-0.9147177159786224), 'hyper_actor_loss': np.float64(0.016055819392204285), 'behavior_loss': np.float64(3.0231744766235353)}

tensor([False,  True,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False,  True,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False,  True,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True,  True, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False,  True,  True, False, False,  True, False, False, False, False,
        False, False])
Episode step 3620, time diff 0.7961549758911133, total time dif 308.6359076499939)
step: 3620 @ episode report: {'average_total_reward': np.float32(5.335555), 'reward_variance': np.float32(1.1381929), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(4.1666665), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11216259971261025), 'actor_loss': np.float64(-0.9272796154022217), 'hyper_actor_loss': np.float64(0.015614475309848785), 'behavior_loss': np.float64(3.2240021228790283)}

tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False,  True,
         True, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False,  True,  True,  True, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False,  True,  True, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False,  True,  True,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True, False, False, False,  True,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
Episode step 3630, time diff 0.8070471286773682, total time dif 309.432062625885)
step: 3630 @ episode report: {'average_total_reward': np.float32(5.096667), 'reward_variance': np.float32(0.7754086), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09221433289349079), 'actor_loss': np.float64(-0.906082135438919), 'hyper_actor_loss': np.float64(0.015103495586663485), 'behavior_loss': np.float64(3.486815905570984)}

tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False,  True, False, False,  True, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False,  True, False, False,  True, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False,  True, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True,  True,  True, False, False, False,  True, False, False,  True,
        False, False])
Episode step 3640, time diff 0.7739808559417725, total time dif 310.2391097545624)
step: 3640 @ episode report: {'average_total_reward': np.float32(5.4722223), 'reward_variance': np.float32(0.8341545), 'max_total_reward': np.float32(7.5333343), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0891275230795145), 'actor_loss': np.float64(-0.9120175778865814), 'hyper_actor_loss': np.float64(0.014938670117408038), 'behavior_loss': np.float64(3.1809794425964357)}

tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False,  True,  True, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True,  True, False, False, False, False,  True, False,
         True, False])
tensor([False, False,  True, False, False,  True,  True, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3650, time diff 0.7993454933166504, total time dif 311.01309061050415)
step: 3650 @ episode report: {'average_total_reward': np.float32(5.2844443), 'reward_variance': np.float32(1.5101535), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10342696979641915), 'actor_loss': np.float64(-0.9248610615730286), 'hyper_actor_loss': np.float64(0.01475132554769516), 'behavior_loss': np.float64(3.493875002861023)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False,  True, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
         True, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
Episode step 3660, time diff 0.7745885848999023, total time dif 311.8124361038208)
step: 3660 @ episode report: {'average_total_reward': np.float32(5.123334), 'reward_variance': np.float32(1.158283), 'max_total_reward': np.float32(7.28889), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10272828415036202), 'actor_loss': np.float64(-0.9181968152523041), 'hyper_actor_loss': np.float64(0.014384526759386063), 'behavior_loss': np.float64(3.3346705198287965)}

tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False, False,  True,  True, False, False, False,  True, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3670, time diff 0.8203675746917725, total time dif 312.5870246887207)
step: 3670 @ episode report: {'average_total_reward': np.float32(5.3966665), 'reward_variance': np.float32(2.4459527), 'max_total_reward': np.float32(8.777779), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10811555311083794), 'actor_loss': np.float64(-0.946966004371643), 'hyper_actor_loss': np.float64(0.014351494982838631), 'behavior_loss': np.float64(3.498837423324585)}

tensor([ True,  True, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True,  True, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
Episode step 3680, time diff 0.8421499729156494, total time dif 313.4073922634125)
step: 3680 @ episode report: {'average_total_reward': np.float32(5.533334), 'reward_variance': np.float32(1.7172348), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10468573123216629), 'actor_loss': np.float64(-0.9009570181369781), 'hyper_actor_loss': np.float64(0.014309337083250284), 'behavior_loss': np.float64(3.6744885444641113)}

tensor([False, False, False,  True,  True, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True,  True])
tensor([False,  True, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
         True, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 3690, time diff 0.8132152557373047, total time dif 314.2495422363281)
step: 3690 @ episode report: {'average_total_reward': np.float32(5.996667), 'reward_variance': np.float32(2.938224), 'max_total_reward': np.float32(8.777779), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(7.5), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10166210979223252), 'actor_loss': np.float64(-0.9280386090278625), 'hyper_actor_loss': np.float64(0.014312530308961869), 'behavior_loss': np.float64(3.8810917854309084)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True,  True,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3700, time diff 0.8747587203979492, total time dif 315.06275749206543)
step: 3700 @ episode report: {'average_total_reward': np.float32(5.584445), 'reward_variance': np.float32(1.1622024), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(4.0444446), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08887332789599896), 'actor_loss': np.float64(-0.8908929169178009), 'hyper_actor_loss': np.float64(0.014032368268817662), 'behavior_loss': np.float64(4.119137310981751)}

tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
         True,  True, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True,  True, False,  True, False,
        False,  True,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False,  True, False,  True,
        False,  True])
Episode step 3710, time diff 1.0690946578979492, total time dif 315.9375162124634)
step: 3710 @ episode report: {'average_total_reward': np.float32(5.4722223), 'reward_variance': np.float32(1.8396606), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(2.9222226), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10479858964681625), 'actor_loss': np.float64(-0.9196122109889984), 'hyper_actor_loss': np.float64(0.014042891841381789), 'behavior_loss': np.float64(4.0680488586425785)}

tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
         True, False,  True, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False,  True])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False,  True,  True, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
Episode step 3720, time diff 0.8076739311218262, total time dif 317.0066108703613)
step: 3720 @ episode report: {'average_total_reward': np.float32(5.408889), 'reward_variance': np.float32(0.57278526), 'max_total_reward': np.float32(6.655556), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09124434515833854), 'actor_loss': np.float64(-0.9281326353549957), 'hyper_actor_loss': np.float64(0.013394267298281193), 'behavior_loss': np.float64(3.735572338104248)}

tensor([False,  True, False, False, False, False,  True,  True, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False,  True,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True,  True, False,
         True, False, False, False, False,  True, False,  True,  True,  True,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 3730, time diff 0.9558799266815186, total time dif 317.81428480148315)
step: 3730 @ episode report: {'average_total_reward': np.float32(4.7377777), 'reward_variance': np.float32(2.491289), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10833223089575768), 'actor_loss': np.float64(-0.8935848474502563), 'hyper_actor_loss': np.float64(0.013234711438417434), 'behavior_loss': np.float64(4.336630868911743)}

tensor([ True, False, False,  True, False, False, False, False, False,  True,
        False, False,  True, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False,  True, False,  True,
        False, False])
tensor([False,  True, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False,  True,  True, False,  True, False, False, False, False,
        False,  True,  True,  True,  True, False,  True, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 3740, time diff 0.8389599323272705, total time dif 318.7701647281647)
step: 3740 @ episode report: {'average_total_reward': np.float32(5.284445), 'reward_variance': np.float32(1.0123751), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09645459875464439), 'actor_loss': np.float64(-0.9325571179389953), 'hyper_actor_loss': np.float64(0.012824669945985079), 'behavior_loss': np.float64(4.401528596878052)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([ True, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False,  True,  True, False, False,  True,  True, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False,  True, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
Episode step 3750, time diff 0.8216979503631592, total time dif 319.60912466049194)
step: 3750 @ episode report: {'average_total_reward': np.float32(5.5111113), 'reward_variance': np.float32(1.909457), 'max_total_reward': np.float32(7.533334), 'min_total_reward': np.float32(3.1666667), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10300006940960885), 'actor_loss': np.float64(-0.8742521464824676), 'hyper_actor_loss': np.float64(0.012462242506444454), 'behavior_loss': np.float64(4.694847679138183)}

tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True,  True,  True, False,  True, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False,  True,  True, False, False,  True,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True,  True,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False,  True, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False, False,  True, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3760, time diff 0.8292720317840576, total time dif 320.4308226108551)
step: 3760 @ episode report: {'average_total_reward': np.float32(5.608889), 'reward_variance': np.float32(1.2010317), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0931728534400463), 'actor_loss': np.float64(-0.9453598320484161), 'hyper_actor_loss': np.float64(0.012334627006202937), 'behavior_loss': np.float64(4.835508060455322)}

tensor([False,  True, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False,  True, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False,  True, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([ True, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False,  True, False, False, False,  True, False,  True, False, False,
        False, False])
Episode step 3770, time diff 0.8322908878326416, total time dif 321.26009464263916)
step: 3770 @ episode report: {'average_total_reward': np.float32(5.6722226), 'reward_variance': np.float32(2.1268706), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09538257867097855), 'actor_loss': np.float64(-0.8753744304180145), 'hyper_actor_loss': np.float64(0.011921302694827319), 'behavior_loss': np.float64(4.4556539297103885)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False,  True, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False,  True, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False,  True, False,
        False,  True])
tensor([False,  True, False,  True, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False,  True, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
Episode step 3780, time diff 0.7915592193603516, total time dif 322.0923855304718)
step: 3780 @ episode report: {'average_total_reward': np.float32(5.46), 'reward_variance': np.float32(1.2015849), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09508453458547592), 'actor_loss': np.float64(-0.8945833265781402), 'hyper_actor_loss': np.float64(0.011562083102762698), 'behavior_loss': np.float64(4.867872405052185)}

tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False,  True, False, False,  True, False, False,  True, False,  True,
         True, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3790, time diff 0.8079738616943359, total time dif 322.88394474983215)
step: 3790 @ episode report: {'average_total_reward': np.float32(5.0477777), 'reward_variance': np.float32(0.75476664), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09919533729553223), 'actor_loss': np.float64(-0.9038760662078857), 'hyper_actor_loss': np.float64(0.01134547321125865), 'behavior_loss': np.float64(4.823814940452576)}

tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False,  True, False, False,  True, False, False, False, False,  True,
        False, False, False, False,  True, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True,  True, False, False, False,  True, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False,  True, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False,  True,  True, False, False,
        False, False])
Episode step 3800, time diff 0.8122878074645996, total time dif 323.6919186115265)
step: 3800 @ episode report: {'average_total_reward': np.float32(6.3333335), 'reward_variance': np.float32(2.0313334), 'max_total_reward': np.float32(8.900001), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.8), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09265203103423118), 'actor_loss': np.float64(-0.8860649824142456), 'hyper_actor_loss': np.float64(0.010872421320527792), 'behavior_loss': np.float64(5.054103040695191)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False,  True,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
         True, False])
Episode step 3810, time diff 0.9267446994781494, total time dif 324.5042064189911)
step: 3810 @ episode report: {'average_total_reward': np.float32(4.786667), 'reward_variance': np.float32(1.3681431), 'max_total_reward': np.float32(7.4111114), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09653770476579666), 'actor_loss': np.float64(-0.9087428510189056), 'hyper_actor_loss': np.float64(0.010397795122116804), 'behavior_loss': np.float64(5.192017316818237)}

tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False,  True])
tensor([False,  True, False, False, False, False, False,  True,  True, False,
        False,  True, False, False, False, False, False, False,  True,  True,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False,  True,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False,  True,  True, False,  True, False, False, False, False,  True,
         True,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3820, time diff 0.8373198509216309, total time dif 325.43095111846924)
step: 3820 @ episode report: {'average_total_reward': np.float32(5.5822225), 'reward_variance': np.float32(0.8769189), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(4.5333333), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09945806264877319), 'actor_loss': np.float64(-0.9066289365291595), 'hyper_actor_loss': np.float64(0.010030099097639323), 'behavior_loss': np.float64(5.4897136211395265)}

tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False,  True,  True, False, False,  True,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False,  True,  True,
        False,  True,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False,  True,  True,  True,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True,  True])
Episode step 3830, time diff 0.8481261730194092, total time dif 326.26827096939087)
step: 3830 @ episode report: {'average_total_reward': np.float32(5.4333334), 'reward_variance': np.float32(2.1493828), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09864358678460121), 'actor_loss': np.float64(-0.9101226449012756), 'hyper_actor_loss': np.float64(0.009721545316278935), 'behavior_loss': np.float64(5.815184259414673)}

tensor([False, False, False, False, False, False,  True, False,  True,  True,
        False,  True, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False,  True, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([ True, False,  True, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False,  True, False,  True, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False,  True, False, False,  True, False,
        False, False])
Episode step 3840, time diff 0.8522357940673828, total time dif 327.1163971424103)
step: 3840 @ episode report: {'average_total_reward': np.float32(5.0966673), 'reward_variance': np.float32(0.7235318), 'max_total_reward': np.float32(6.5333333), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0966279286891222), 'actor_loss': np.float64(-0.9060305774211883), 'hyper_actor_loss': np.float64(0.009262729436159134), 'behavior_loss': np.float64(5.308958292007446)}

tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True,  True, False,  True, False, False,
        False, False,  True, False, False,  True,  True, False, False,  True,
         True, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False,  True, False,
        False,  True])
tensor([False, False, False,  True, False, False, False,  True,  True, False,
         True, False,  True, False, False, False, False, False, False, False,
         True,  True,  True, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 3850, time diff 0.9515514373779297, total time dif 327.96863293647766)
step: 3850 @ episode report: {'average_total_reward': np.float32(5.6333337), 'reward_variance': np.float32(1.9693091), 'max_total_reward': np.float32(7.533334), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09434851706027984), 'actor_loss': np.float64(-0.8783210933208465), 'hyper_actor_loss': np.float64(0.009403484780341387), 'behavior_loss': np.float64(5.327068614959717)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
         True,  True, False, False, False,  True, False, False,  True, False,
        False,  True])
tensor([False,  True, False, False, False,  True, False,  True,  True, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False,  True,  True, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
Episode step 3860, time diff 0.8994631767272949, total time dif 328.9201843738556)
step: 3860 @ episode report: {'average_total_reward': np.float32(4.9722223), 'reward_variance': np.float32(1.0031173), 'max_total_reward': np.float32(6.533334), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09973867163062096), 'actor_loss': np.float64(-0.9113963723182679), 'hyper_actor_loss': np.float64(0.00890053240582347), 'behavior_loss': np.float64(5.222613096237183)}

tensor([False,  True, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False,  True, False, False, False, False, False,
         True, False, False,  True, False, False,  True,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False,  True, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False,  True, False, False,  True,  True, False, False, False, False,
        False,  True])
tensor([ True,  True, False, False,  True, False,  True, False, False,  True,
         True, False, False, False, False, False,  True, False,  True,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
Episode step 3870, time diff 0.8625226020812988, total time dif 329.8196475505829)
step: 3870 @ episode report: {'average_total_reward': np.float32(5.186667), 'reward_variance': np.float32(0.440341), 'max_total_reward': np.float32(6.1666675), 'min_total_reward': np.float32(4.0444446), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08283947482705116), 'actor_loss': np.float64(-0.9120734214782715), 'hyper_actor_loss': np.float64(0.008695801813155412), 'behavior_loss': np.float64(5.103026866912842)}

tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True,  True, False, False,  True, False,
        False, False])
tensor([False, False,  True, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False,  True, False, False,  True, False,  True, False, False, False,
         True, False,  True, False, False, False,  True, False, False,  True,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 3880, time diff 0.8439850807189941, total time dif 330.6821701526642)
step: 3880 @ episode report: {'average_total_reward': np.float32(5.533334), 'reward_variance': np.float32(1.4194567), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10358651056885719), 'actor_loss': np.float64(-0.9123803555965424), 'hyper_actor_loss': np.float64(0.00843334263190627), 'behavior_loss': np.float64(5.2907791376113895)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False,  True, False, False,  True, False, False,  True, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False,  True,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3890, time diff 0.7943179607391357, total time dif 331.5261552333832)
step: 3890 @ episode report: {'average_total_reward': np.float32(5.5577784), 'reward_variance': np.float32(1.4098964), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09600161388516426), 'actor_loss': np.float64(-0.9110115945339203), 'hyper_actor_loss': np.float64(0.0082729856017977), 'behavior_loss': np.float64(5.332584571838379)}

tensor([ True, False, False, False, False,  True, False,  True,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True,  True, False, False,  True, False, False, False,
         True,  True, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
         True,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 3900, time diff 0.8133037090301514, total time dif 332.3204731941223)
step: 3900 @ episode report: {'average_total_reward': np.float32(4.8599997), 'reward_variance': np.float32(0.69872093), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0997091293334961), 'actor_loss': np.float64(-0.9193414449691772), 'hyper_actor_loss': np.float64(0.008159095840528607), 'behavior_loss': np.float64(5.153783631324768)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False,  True, False,  True,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False,  True, False, False, False, False,  True,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 3910, time diff 0.7922921180725098, total time dif 333.13377690315247)
step: 3910 @ episode report: {'average_total_reward': np.float32(5.0233335), 'reward_variance': np.float32(2.5987766), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(2.1666667), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09373273476958274), 'actor_loss': np.float64(-0.8971935927867889), 'hyper_actor_loss': np.float64(0.008159229578450323), 'behavior_loss': np.float64(5.356127691268921)}

tensor([ True, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False,  True,
        False,  True, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False,  True, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 3920, time diff 0.8125307559967041, total time dif 333.926069021225)
step: 3920 @ episode report: {'average_total_reward': np.float32(4.96), 'reward_variance': np.float32(1.5084498), 'max_total_reward': np.float32(7.5333343), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09725504480302334), 'actor_loss': np.float64(-0.8658216536045075), 'hyper_actor_loss': np.float64(0.007739086821675301), 'behavior_loss': np.float64(5.312541246414185)}

tensor([False, False,  True,  True, False, False, False, False,  True, False,
        False,  True, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False,  True, False, False,
         True,  True, False,  True, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
Episode step 3930, time diff 0.7876336574554443, total time dif 334.7385997772217)
step: 3930 @ episode report: {'average_total_reward': np.float32(5.1233335), 'reward_variance': np.float32(1.8136902), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0948201522231102), 'actor_loss': np.float64(-0.9327373623847961), 'hyper_actor_loss': np.float64(0.008011003909632563), 'behavior_loss': np.float64(5.244968891143799)}

tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True,  True, False,  True, False, False,
         True, False, False, False, False,  True,  True,  True, False, False,
         True, False])
tensor([ True,  True, False, False, False, False, False, False,  True, False,
        False, False,  True,  True, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 3940, time diff 0.9686591625213623, total time dif 335.5262334346771)
step: 3940 @ episode report: {'average_total_reward': np.float32(4.9355555), 'reward_variance': np.float32(0.27330384), 'max_total_reward': np.float32(5.655556), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09610600471496582), 'actor_loss': np.float64(-0.8870030224323273), 'hyper_actor_loss': np.float64(0.007914541754871607), 'behavior_loss': np.float64(5.9363758087158205)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False,  True,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False,  True,  True, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True,  True, False, False,  True, False, False,
         True, False, False,  True, False, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
Episode step 3950, time diff 0.9428915977478027, total time dif 336.4948925971985)
step: 3950 @ episode report: {'average_total_reward': np.float32(5.1844444), 'reward_variance': np.float32(0.60370874), 'max_total_reward': np.float32(6.655556), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08902010321617126), 'actor_loss': np.float64(-0.9014912724494935), 'hyper_actor_loss': np.float64(0.007857256243005395), 'behavior_loss': np.float64(5.23033595085144)}

tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False,  True,  True, False,  True, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False,  True, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 3960, time diff 0.8571805953979492, total time dif 337.4377841949463)
step: 3960 @ episode report: {'average_total_reward': np.float32(5.186667), 'reward_variance': np.float32(0.6403409), 'max_total_reward': np.float32(6.533334), 'min_total_reward': np.float32(4.0444446), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09879558980464935), 'actor_loss': np.float64(-0.9136141240596771), 'hyper_actor_loss': np.float64(0.007648589508607984), 'behavior_loss': np.float64(5.658945035934448)}

tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
         True,  True, False, False,  True,  True, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
         True, False,  True, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False,  True, False,  True, False, False, False,
         True, False])
Episode step 3970, time diff 0.7884845733642578, total time dif 338.29496479034424)
step: 3970 @ episode report: {'average_total_reward': np.float32(4.723334), 'reward_variance': np.float32(1.7351964), 'max_total_reward': np.float32(6.411112), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(6.3), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10226614028215408), 'actor_loss': np.float64(-0.8935607612133026), 'hyper_actor_loss': np.float64(0.00732963215559721), 'behavior_loss': np.float64(5.3595727443695065)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False,  True, False,  True, False, False,
        False,  True])
tensor([False,  True, False,  True, False, False, False, False, False, False,
         True,  True, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
         True,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False,  True, False,  True, False, False,
         True, False, False, False, False, False,  True,  True, False,  True,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
Episode step 3980, time diff 0.9245564937591553, total time dif 339.0834493637085)
step: 3980 @ episode report: {'average_total_reward': np.float32(5.708889), 'reward_variance': np.float32(0.7397481), 'max_total_reward': np.float32(6.655556), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09564755111932755), 'actor_loss': np.float64(-0.9228409588336944), 'hyper_actor_loss': np.float64(0.006865582056343555), 'behavior_loss': np.float64(5.738282108306885)}

tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
         True, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([ True, False, False, False, False,  True,  True,  True, False, False,
         True, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True,  True, False, False, False, False,  True,  True, False,
        False, False])
Episode step 3990, time diff 0.8041439056396484, total time dif 340.00800585746765)
step: 3990 @ episode report: {'average_total_reward': np.float32(4.9333334), 'reward_variance': np.float32(0.5467409), 'max_total_reward': np.float32(6.655556), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09867096245288849), 'actor_loss': np.float64(-0.8965683102607727), 'hyper_actor_loss': np.float64(0.007126231584697962), 'behavior_loss': np.float64(5.562200832366943)}

tensor([False, False, False,  True,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True,  True])
tensor([ True,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True,  True,  True, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False,  True,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False,  True,  True, False, False, False, False,
         True,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 4000, time diff 0.8115527629852295, total time dif 340.8121497631073)
step: 4000 @ episode report: {'average_total_reward': np.float32(5.2744446), 'reward_variance': np.float32(0.7651124), 'max_total_reward': np.float32(7.411112), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10348060503602027), 'actor_loss': np.float64(-0.9332915067672729), 'hyper_actor_loss': np.float64(0.006995120318606496), 'behavior_loss': np.float64(5.572128343582153)}

tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False,  True, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True,  True,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 4010, time diff 0.8231947422027588, total time dif 341.62370252609253)
step: 4010 @ episode report: {'average_total_reward': np.float32(5.2211113), 'reward_variance': np.float32(1.299789), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.1666667), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09830790981650353), 'actor_loss': np.float64(-0.9069903433322907), 'hyper_actor_loss': np.float64(0.007040842203423381), 'behavior_loss': np.float64(5.423092794418335)}

tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False,  True,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False,  True,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False,  True, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False,  True,  True, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True])
Episode step 4020, time diff 0.8653445243835449, total time dif 342.4468972682953)
step: 4020 @ episode report: {'average_total_reward': np.float32(5.845556), 'reward_variance': np.float32(0.9351961), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(4.411112), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09391513168811798), 'actor_loss': np.float64(-0.8869522631168365), 'hyper_actor_loss': np.float64(0.007164753787219524), 'behavior_loss': np.float64(5.842872476577758)}

tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False,  True, False, False,  True,
        False, False])
tensor([False,  True,  True, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False,  True, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False,  True, False, False, False, False,
         True, False, False,  True,  True, False, False, False, False, False,
        False,  True])
tensor([False,  True,  True,  True,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
Episode step 4030, time diff 0.9452614784240723, total time dif 343.31224179267883)
step: 4030 @ episode report: {'average_total_reward': np.float32(5.7966666), 'reward_variance': np.float32(2.6227171), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10032906904816627), 'actor_loss': np.float64(-0.882606703042984), 'hyper_actor_loss': np.float64(0.007248400896787644), 'behavior_loss': np.float64(5.2964111328125)}

tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True,  True, False,  True, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False,  True, False,  True, False, False, False,  True,  True,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False,  True,  True, False,  True, False, False, False,
         True, False])
tensor([ True, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
Episode step 4040, time diff 0.9117615222930908, total time dif 344.2575032711029)
step: 4040 @ episode report: {'average_total_reward': np.float32(5.262222), 'reward_variance': np.float32(0.593536), 'max_total_reward': np.float32(6.533334), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.07762572541832924), 'actor_loss': np.float64(-0.8988226771354675), 'hyper_actor_loss': np.float64(0.007335163140669465), 'behavior_loss': np.float64(5.509123182296753)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False,  True,  True,  True, False, False, False, False,
        False, False])
tensor([ True, False,  True, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
         True, False,  True, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
         True,  True, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 4050, time diff 0.8775582313537598, total time dif 345.169264793396)
step: 4050 @ episode report: {'average_total_reward': np.float32(5.0233335), 'reward_variance': np.float32(1.2157147), 'max_total_reward': np.float32(6.5333333), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.1026595376431942), 'actor_loss': np.float64(-0.9408790051937104), 'hyper_actor_loss': np.float64(0.007277171872556209), 'behavior_loss': np.float64(5.488156938552857)}

tensor([ True, False,  True, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
         True, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False,  True])
Episode step 4060, time diff 0.8584723472595215, total time dif 346.04682302474976)
step: 4060 @ episode report: {'average_total_reward': np.float32(5.496667), 'reward_variance': np.float32(1.1677295), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10114984959363937), 'actor_loss': np.float64(-0.9297726213932037), 'hyper_actor_loss': np.float64(0.0074736587703228), 'behavior_loss': np.float64(4.975344586372375)}

tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True,  True, False,  True,  True,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False,  True,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 4070, time diff 0.87261962890625, total time dif 346.9052953720093)
step: 4070 @ episode report: {'average_total_reward': np.float32(5.372222), 'reward_variance': np.float32(1.437142), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09842655062675476), 'actor_loss': np.float64(-0.9125161051750184), 'hyper_actor_loss': np.float64(0.00761996740475297), 'behavior_loss': np.float64(5.838698101043701)}

tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False,  True, False, False, False,  True, False,  True, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 4080, time diff 0.8729922771453857, total time dif 347.7779150009155)
step: 4080 @ episode report: {'average_total_reward': np.float32(5.672222), 'reward_variance': np.float32(1.621587), 'max_total_reward': np.float32(7.5333343), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09044395685195923), 'actor_loss': np.float64(-0.8915840029716492), 'hyper_actor_loss': np.float64(0.007746234023943544), 'behavior_loss': np.float64(5.511400556564331)}

tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True,  True, False, False,
        False,  True])
tensor([False, False, False,  True, False,  True,  True, False, False, False,
         True, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True,  True, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False,  True,
         True, False])
tensor([False, False, False,  True,  True, False, False, False, False,  True,
         True, False, False, False, False,  True, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 4090, time diff 0.8600165843963623, total time dif 348.6509072780609)
step: 4090 @ episode report: {'average_total_reward': np.float32(5.1966667), 'reward_variance': np.float32(1.305384), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10390009433031082), 'actor_loss': np.float64(-0.9222076952457428), 'hyper_actor_loss': np.float64(0.007963991165161133), 'behavior_loss': np.float64(5.445321941375733)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False,  True,
         True, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False,  True,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True,  True, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True,  True, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False,  True,
        False, False])
Episode step 4100, time diff 0.797595739364624, total time dif 349.5109238624573)
step: 4100 @ episode report: {'average_total_reward': np.float32(4.908889), 'reward_variance': np.float32(0.52577275), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08998598605394363), 'actor_loss': np.float64(-0.8902464628219604), 'hyper_actor_loss': np.float64(0.008273885492235422), 'behavior_loss': np.float64(5.693870306015015)}

tensor([False, False, False, False, False, False, False,  True, False,  True,
        False,  True, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
         True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False,  True, False,  True,  True, False, False, False, False, False,
         True, False])
Episode step 4110, time diff 0.9055554866790771, total time dif 350.3085196018219)
step: 4110 @ episode report: {'average_total_reward': np.float32(5.572222), 'reward_variance': np.float32(1.1772904), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10260020419955254), 'actor_loss': np.float64(-0.9288596034049987), 'hyper_actor_loss': np.float64(0.008226778358221054), 'behavior_loss': np.float64(5.574587297439575)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True,  True, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False,  True, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False,  True, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False,  True,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 4120, time diff 0.9435892105102539, total time dif 351.214075088501)
step: 4120 @ episode report: {'average_total_reward': np.float32(5.3088884), 'reward_variance': np.float32(1.3890074), 'max_total_reward': np.float32(7.288889), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0998099334537983), 'actor_loss': np.float64(-0.911100047826767), 'hyper_actor_loss': np.float64(0.008123261202126742), 'behavior_loss': np.float64(5.625945234298706)}

tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
         True,  True, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
         True, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 4130, time diff 0.8443975448608398, total time dif 352.15766429901123)
step: 4130 @ episode report: {'average_total_reward': np.float32(4.784445), 'reward_variance': np.float32(1.5112642), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(6.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09619839936494827), 'actor_loss': np.float64(-0.9059808671474456), 'hyper_actor_loss': np.float64(0.008194724284112453), 'behavior_loss': np.float64(5.680913496017456)}

tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False,  True,  True, False, False,  True,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False,  True])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True,  True, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False,  True,  True, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 4140, time diff 0.9465954303741455, total time dif 353.00206184387207)
step: 4140 @ episode report: {'average_total_reward': np.float32(5.5355554), 'reward_variance': np.float32(1.8550818), 'max_total_reward': np.float32(8.411112), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09750709310173988), 'actor_loss': np.float64(-0.8956611752510071), 'hyper_actor_loss': np.float64(0.008136592339724302), 'behavior_loss': np.float64(5.777116584777832)}

tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
         True, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
         True, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False,  True, False,
        False, False])
Episode step 4150, time diff 0.8803565502166748, total time dif 353.9486572742462)
step: 4150 @ episode report: {'average_total_reward': np.float32(4.9744444), 'reward_variance': np.float32(0.8955569), 'max_total_reward': np.float32(6.533334), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09065028354525566), 'actor_loss': np.float64(-0.9020639777183532), 'hyper_actor_loss': np.float64(0.007780216820538044), 'behavior_loss': np.float64(5.191826057434082)}

tensor([False,  True, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True,  True, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False,  True,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False,  True, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 4160, time diff 0.8325917720794678, total time dif 354.8290138244629)
step: 4160 @ episode report: {'average_total_reward': np.float32(4.9600005), 'reward_variance': np.float32(3.0302029), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09824697375297546), 'actor_loss': np.float64(-0.9118737936019897), 'hyper_actor_loss': np.float64(0.008061549346894025), 'behavior_loss': np.float64(5.608027362823487)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False,  True,
         True, False,  True,  True, False, False,  True, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False,  True,
         True, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False,  True,  True,
        False, False])
Episode step 4170, time diff 0.8134825229644775, total time dif 355.66160559654236)
step: 4170 @ episode report: {'average_total_reward': np.float32(5.108889), 'reward_variance': np.float32(0.7265879), 'max_total_reward': np.float32(6.533334), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10066312998533249), 'actor_loss': np.float64(-0.9123051702976227), 'hyper_actor_loss': np.float64(0.00797210680320859), 'behavior_loss': np.float64(5.161172914505005)}

tensor([ True, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False,  True, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False,  True, False,
        False, False, False, False, False,  True,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False,  True, False,  True, False,
         True, False])
tensor([False,  True, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False,  True,
        False,  True])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 4180, time diff 1.0158052444458008, total time dif 356.47508811950684)
step: 4180 @ episode report: {'average_total_reward': np.float32(5.635556), 'reward_variance': np.float32(2.0588841), 'max_total_reward': np.float32(8.777778), 'min_total_reward': np.float32(3.0444443), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0884947095066309), 'actor_loss': np.float64(-0.90090052485466), 'hyper_actor_loss': np.float64(0.00791610386222601), 'behavior_loss': np.float64(5.253676319122315)}

tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False,  True,  True, False, False, False,  True, False, False,
        False,  True, False,  True,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False,  True,  True, False, False,
         True, False])
tensor([False,  True, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False,  True, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False,  True, False, False, False, False,  True,  True, False, False,
        False, False])
Episode step 4190, time diff 0.8194971084594727, total time dif 357.49089336395264)
step: 4190 @ episode report: {'average_total_reward': np.float32(5.198889), 'reward_variance': np.float32(1.2387515), 'max_total_reward': np.float32(7.411111), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08306743279099464), 'actor_loss': np.float64(-0.8548280477523804), 'hyper_actor_loss': np.float64(0.0078786029946059), 'behavior_loss': np.float64(6.034825563430786)}

tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True,  True, False, False,  True, False, False, False, False, False,
        False,  True,  True,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False,  True, False,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
Episode step 4200, time diff 0.8357634544372559, total time dif 358.3103904724121)
step: 4200 @ episode report: {'average_total_reward': np.float32(5.757777), 'reward_variance': np.float32(0.86234075), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09759691208600998), 'actor_loss': np.float64(-0.9238863348960876), 'hyper_actor_loss': np.float64(0.00775240296497941), 'behavior_loss': np.float64(5.486379718780517)}

tensor([ True, False,  True, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False,  True,  True,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False,  True,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True,  True,
         True, False, False, False,  True, False,  True, False, False,  True,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 4210, time diff 0.8111567497253418, total time dif 359.14615392684937)
step: 4210 @ episode report: {'average_total_reward': np.float32(5.0477777), 'reward_variance': np.float32(1.1362976), 'max_total_reward': np.float32(7.533334), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09236227609217167), 'actor_loss': np.float64(-0.9002692699432373), 'hyper_actor_loss': np.float64(0.007762288022786379), 'behavior_loss': np.float64(5.56806116104126)}

tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False,  True, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False,  True,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False,  True,  True, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False,  True,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 4220, time diff 0.8202219009399414, total time dif 359.9573106765747)
step: 4220 @ episode report: {'average_total_reward': np.float32(5.7822227), 'reward_variance': np.float32(1.8218819), 'max_total_reward': np.float32(8.777779), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10384939685463905), 'actor_loss': np.float64(-0.9245921492576599), 'hyper_actor_loss': np.float64(0.007855996349826455), 'behavior_loss': np.float64(5.116647005081177)}

tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False,  True,  True,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False,  True,  True,  True, False, False,  True, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True,  True, False,  True, False,  True,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
Episode step 4230, time diff 0.8604795932769775, total time dif 360.77753257751465)
step: 4230 @ episode report: {'average_total_reward': np.float32(5.935556), 'reward_variance': np.float32(0.7526124), 'max_total_reward': np.float32(7.4111114), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.5), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.1010778196156025), 'actor_loss': np.float64(-0.9085712373256684), 'hyper_actor_loss': np.float64(0.0077353420201689005), 'behavior_loss': np.float64(5.563821268081665)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True,  True,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True,  True])
tensor([ True, False, False, False, False, False,  True,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False,  True, False, False, False,
         True, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
Episode step 4240, time diff 0.8269126415252686, total time dif 361.6380121707916)
step: 4240 @ episode report: {'average_total_reward': np.float32(5.0233335), 'reward_variance': np.float32(1.0675914), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.1666665), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09106393605470657), 'actor_loss': np.float64(-0.8982504606246948), 'hyper_actor_loss': np.float64(0.007788945408537984), 'behavior_loss': np.float64(5.475617599487305)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True,  True,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False,  True])
tensor([False, False,  True, False,  True, False,  True,  True, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 4250, time diff 0.9950313568115234, total time dif 362.4649248123169)
step: 4250 @ episode report: {'average_total_reward': np.float32(4.8477774), 'reward_variance': np.float32(1.1145694), 'max_total_reward': np.float32(6.533334), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0885129600763321), 'actor_loss': np.float64(-0.926543927192688), 'hyper_actor_loss': np.float64(0.007742081303149462), 'behavior_loss': np.float64(5.610412454605102)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([ True,  True, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
         True, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False,  True,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False,  True,  True, False,  True, False, False,  True, False,
        False, False])
Episode step 4260, time diff 0.9894516468048096, total time dif 363.4599561691284)
step: 4260 @ episode report: {'average_total_reward': np.float32(4.523333), 'reward_variance': np.float32(0.7682086), 'max_total_reward': np.float32(5.533334), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.1), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0898051206022501), 'actor_loss': np.float64(-0.9015125453472137), 'hyper_actor_loss': np.float64(0.007649218803271652), 'behavior_loss': np.float64(5.323772192001343)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True,  True,  True,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False,  True,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False,  True,
        False, False])
Episode step 4270, time diff 0.9394726753234863, total time dif 364.4494078159332)
step: 4270 @ episode report: {'average_total_reward': np.float32(5.5477777), 'reward_variance': np.float32(1.2120011), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09400142021477223), 'actor_loss': np.float64(-0.9196605145931244), 'hyper_actor_loss': np.float64(0.007860606024041771), 'behavior_loss': np.float64(5.5684685707092285)}

tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False,  True, False,  True,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False,  True,  True,  True,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False,  True,
         True,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
         True, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
         True, False, False, False,  True, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
Episode step 4280, time diff 1.0469884872436523, total time dif 365.3888804912567)
step: 4280 @ episode report: {'average_total_reward': np.float32(5.8866673), 'reward_variance': np.float32(2.8469336), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(2.8000002), 'average_n_step': np.float32(7.5), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09712415263056755), 'actor_loss': np.float64(-0.8966810584068299), 'hyper_actor_loss': np.float64(0.007772448379546404), 'behavior_loss': np.float64(5.861413288116455)}

tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True,  True, False,  True, False,  True, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False,  True,  True, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False,  True,
         True, False])
tensor([ True, False, False,  True,  True, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True,  True, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False])
Episode step 4290, time diff 0.9196054935455322, total time dif 366.43586897850037)
step: 4290 @ episode report: {'average_total_reward': np.float32(5.657778), 'reward_variance': np.float32(1.5832789), 'max_total_reward': np.float32(8.777778), 'min_total_reward': np.float32(4.1666665), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09861347675323487), 'actor_loss': np.float64(-0.9111055970191956), 'hyper_actor_loss': np.float64(0.007843919144943357), 'behavior_loss': np.float64(5.418646121025086)}

tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False,  True, False, False, False, False, False,
         True, False])
tensor([ True, False,  True, False,  True, False, False, False, False, False,
        False,  True,  True, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 4300, time diff 0.9976928234100342, total time dif 367.3554744720459)
step: 4300 @ episode report: {'average_total_reward': np.float32(5.508889), 'reward_variance': np.float32(0.92108166), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08805729448795319), 'actor_loss': np.float64(-0.9071403622627259), 'hyper_actor_loss': np.float64(0.007842846028506757), 'behavior_loss': np.float64(5.441801929473877)}

tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
         True, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([ True, False,  True, False, False, False, False,  True, False, False,
        False, False,  True, False, False,  True, False, False, False,  True,
         True, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([ True,  True, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
Episode step 4310, time diff 0.9212501049041748, total time dif 368.35316729545593)
step: 4310 @ episode report: {'average_total_reward': np.float32(4.8599997), 'reward_variance': np.float32(1.0698326), 'max_total_reward': np.float32(6.6555567), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0954490564763546), 'actor_loss': np.float64(-0.8967863738536834), 'hyper_actor_loss': np.float64(0.008130426611751318), 'behavior_loss': np.float64(5.6621410846710205)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
         True, False, False, False,  True, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True,  True,  True, False,  True, False,  True,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True,  True,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 4320, time diff 0.9066104888916016, total time dif 369.2744174003601)
step: 4320 @ episode report: {'average_total_reward': np.float32(5.06), 'reward_variance': np.float32(0.71311605), 'max_total_reward': np.float32(6.4111114), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09557456225156784), 'actor_loss': np.float64(-0.9171955466270447), 'hyper_actor_loss': np.float64(0.00806585056707263), 'behavior_loss': np.float64(5.558850622177124)}

tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True,  True, False,  True, False,  True, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True,  True,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
Episode step 4330, time diff 0.906794548034668, total time dif 370.1810278892517)
step: 4330 @ episode report: {'average_total_reward': np.float32(5.857778), 'reward_variance': np.float32(1.2585632), 'max_total_reward': np.float32(8.533334), 'min_total_reward': np.float32(4.2888894), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09968669489026069), 'actor_loss': np.float64(-0.9003729283809662), 'hyper_actor_loss': np.float64(0.008208568627014756), 'behavior_loss': np.float64(5.440922403335572)}

tensor([False, False,  True, False, False,  True, False,  True, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True, False,  True,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False,  True,
         True, False])
tensor([False, False,  True, False, False, False,  True,  True,  True, False,
         True,  True,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True,  True,  True, False, False,  True, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
Episode step 4340, time diff 0.965909481048584, total time dif 371.0878224372864)
step: 4340 @ episode report: {'average_total_reward': np.float32(5.7966666), 'reward_variance': np.float32(0.7019518), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.533334), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.1052245743572712), 'actor_loss': np.float64(-0.9183554649353027), 'hyper_actor_loss': np.float64(0.008397224079817533), 'behavior_loss': np.float64(5.531027364730835)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False,  True,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True,  True,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 4350, time diff 0.9099109172821045, total time dif 372.05373191833496)
step: 4350 @ episode report: {'average_total_reward': np.float32(4.9722223), 'reward_variance': np.float32(1.676451), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08733054921030999), 'actor_loss': np.float64(-0.9259102046489716), 'hyper_actor_loss': np.float64(0.00813396917656064), 'behavior_loss': np.float64(5.5504051685333256)}

tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False,  True, False,  True, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
         True, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False,  True, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False,  True, False,  True,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 4360, time diff 0.8119893074035645, total time dif 372.96364283561707)
step: 4360 @ episode report: {'average_total_reward': np.float32(5.6844454), 'reward_variance': np.float32(1.6360054), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10431875288486481), 'actor_loss': np.float64(-0.9031000077724457), 'hyper_actor_loss': np.float64(0.008366972487419844), 'behavior_loss': np.float64(5.628064060211182)}

tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
         True,  True])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
Episode step 4370, time diff 0.8140566349029541, total time dif 373.77563214302063)
step: 4370 @ episode report: {'average_total_reward': np.float32(5.6966667), 'reward_variance': np.float32(1.5882978), 'max_total_reward': np.float32(7.533334), 'min_total_reward': np.float32(3.1666667), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09493658691644669), 'actor_loss': np.float64(-0.9398964703083038), 'hyper_actor_loss': np.float64(0.008572419453412295), 'behavior_loss': np.float64(5.3798987865448)}

tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False, False,  True, False, False, False, False, False, False,
        False,  True, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False,  True,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 4380, time diff 0.8490478992462158, total time dif 374.5896887779236)
step: 4380 @ episode report: {'average_total_reward': np.float32(4.7722225), 'reward_variance': np.float32(0.79054946), 'max_total_reward': np.float32(5.655556), 'min_total_reward': np.float32(3.1666667), 'average_n_step': np.float32(6.3), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10468172878026963), 'actor_loss': np.float64(-0.8951936960220337), 'hyper_actor_loss': np.float64(0.008375972975045443), 'behavior_loss': np.float64(5.773372411727905)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True,  True, False, False, False,  True, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
         True, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 4390, time diff 0.7886488437652588, total time dif 375.4387366771698)
step: 4390 @ episode report: {'average_total_reward': np.float32(5.496667), 'reward_variance': np.float32(0.99217397), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0918111864477396), 'actor_loss': np.float64(-0.9185757637023926), 'hyper_actor_loss': np.float64(0.0086275321431458), 'behavior_loss': np.float64(5.550374841690063)}

tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False,  True,  True,  True, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False,  True,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True,  True, False, False, False,  True, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False,  True,
        False, False])
Episode step 4400, time diff 0.8187046051025391, total time dif 376.22738552093506)
step: 4400 @ episode report: {'average_total_reward': np.float32(5.4844446), 'reward_variance': np.float32(1.0654128), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(3.9222226), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09155523665249347), 'actor_loss': np.float64(-0.9150262832641601), 'hyper_actor_loss': np.float64(0.00841204272583127), 'behavior_loss': np.float64(5.977304267883301)}

tensor([False, False, False,  True, False, False,  True, False, False,  True,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False,  True, False,  True,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True,  True,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
Episode step 4410, time diff 0.7931716442108154, total time dif 377.0460901260376)
step: 4410 @ episode report: {'average_total_reward': np.float32(5.7211113), 'reward_variance': np.float32(0.96124583), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(4.2888894), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0848356157541275), 'actor_loss': np.float64(-0.885911375284195), 'hyper_actor_loss': np.float64(0.008330580778419971), 'behavior_loss': np.float64(5.769424724578857)}

tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
         True, False, False, False,  True, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
         True, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
Episode step 4420, time diff 0.9839859008789062, total time dif 377.8392617702484)
step: 4420 @ episode report: {'average_total_reward': np.float32(5.4844446), 'reward_variance': np.float32(0.7133137), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09304077327251434), 'actor_loss': np.float64(-0.9259929597377777), 'hyper_actor_loss': np.float64(0.008416578359901904), 'behavior_loss': np.float64(5.671438932418823)}

tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False,  True,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False,  True, False,  True,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 4430, time diff 0.854759931564331, total time dif 378.8232476711273)
step: 4430 @ episode report: {'average_total_reward': np.float32(5.4722223), 'reward_variance': np.float32(2.8686233), 'max_total_reward': np.float32(10.0222225), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(11.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09615407958626747), 'actor_loss': np.float64(-0.9152151942253113), 'hyper_actor_loss': np.float64(0.008779097720980645), 'behavior_loss': np.float64(5.68121371269226)}

tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False,  True, False, False, False,  True,  True, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False,  True,  True,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 4440, time diff 0.8347315788269043, total time dif 379.67800760269165)
step: 4440 @ episode report: {'average_total_reward': np.float32(5.3966665), 'reward_variance': np.float32(1.5207417), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10817360132932663), 'actor_loss': np.float64(-0.921014279127121), 'hyper_actor_loss': np.float64(0.008863689191639424), 'behavior_loss': np.float64(5.714395332336426)}

tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False,  True,  True,  True, False, False, False,  True, False,  True,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False,  True,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True,  True, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
         True, False,  True,  True, False, False, False, False, False, False,
        False,  True])
Episode step 4450, time diff 0.8130476474761963, total time dif 380.51273918151855)
step: 4450 @ episode report: {'average_total_reward': np.float32(5.4722223), 'reward_variance': np.float32(1.847636), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10144531652331353), 'actor_loss': np.float64(-0.9445106983184814), 'hyper_actor_loss': np.float64(0.008894828706979751), 'behavior_loss': np.float64(5.537142109870911)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
         True, False, False, False, False,  True,  True, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False,  True, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
         True, False])
Episode step 4460, time diff 0.8447434902191162, total time dif 381.32578682899475)
step: 4460 @ episode report: {'average_total_reward': np.float32(4.425555), 'reward_variance': np.float32(0.92019874), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(2.9222226), 'average_n_step': np.float32(6.1), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10472489446401596), 'actor_loss': np.float64(-0.9237012326717376), 'hyper_actor_loss': np.float64(0.009742474555969239), 'behavior_loss': np.float64(5.715057802200318)}

tensor([False, False,  True, False, False, False, False, False,  True, False,
        False,  True, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False,  True,  True, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False,  True, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True,  True, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
         True, False,  True, False, False, False, False, False, False, False,
        False,  True])
Episode step 4470, time diff 0.8210389614105225, total time dif 382.17053031921387)
step: 4470 @ episode report: {'average_total_reward': np.float32(4.9722223), 'reward_variance': np.float32(1.054994), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.1666667), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10028942376375198), 'actor_loss': np.float64(-0.9554639160633087), 'hyper_actor_loss': np.float64(0.010481529403477907), 'behavior_loss': np.float64(5.241268873214722)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True,  True,
         True, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
Episode step 4480, time diff 0.8068532943725586, total time dif 382.9915692806244)
step: 4480 @ episode report: {'average_total_reward': np.float32(5.372222), 'reward_variance': np.float32(0.9149197), 'max_total_reward': np.float32(7.411111), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09642149768769741), 'actor_loss': np.float64(-0.9082464277744293), 'hyper_actor_loss': np.float64(0.011256765760481357), 'behavior_loss': np.float64(5.391337251663208)}

tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True,  True, False,  True,
        False, False,  True,  True, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
         True, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False,  True])
Episode step 4490, time diff 0.8311617374420166, total time dif 383.79842257499695)
step: 4490 @ episode report: {'average_total_reward': np.float32(5.421111), 'reward_variance': np.float32(1.0290481), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09228497296571732), 'actor_loss': np.float64(-0.9229953587055206), 'hyper_actor_loss': np.float64(0.011562595702707767), 'behavior_loss': np.float64(5.54416971206665)}

tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False,  True, False, False,  True,
         True, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False,  True,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 4500, time diff 0.7968282699584961, total time dif 384.62958431243896)
step: 4500 @ episode report: {'average_total_reward': np.float32(4.9844446), 'reward_variance': np.float32(0.9633137), 'max_total_reward': np.float32(6.655556), 'min_total_reward': np.float32(3.4111116), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09948469549417496), 'actor_loss': np.float64(-0.9423631250858306), 'hyper_actor_loss': np.float64(0.011636630911380053), 'behavior_loss': np.float64(5.904088926315308)}

tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False,  True,  True,  True, False, False, False,
         True, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False,  True,  True,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False,  True,  True,  True, False, False, False, False, False, False,
        False, False,  True, False,  True,  True,  True,  True,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False,  True,  True, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False,  True])
tensor([ True, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 4510, time diff 0.8012301921844482, total time dif 385.42641258239746)
step: 4510 @ episode report: {'average_total_reward': np.float32(4.686667), 'reward_variance': np.float32(0.6265136), 'max_total_reward': np.float32(6.4111114), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.3), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10239792317152023), 'actor_loss': np.float64(-0.9104412317276), 'hyper_actor_loss': np.float64(0.011566604394465685), 'behavior_loss': np.float64(5.601103591918945)}

tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True,  True, False,  True, False, False,  True, False, False,
        False, False,  True, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False,  True])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False,  True,  True, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False,  True, False,  True,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 4520, time diff 0.8122591972351074, total time dif 386.2276427745819)
step: 4520 @ episode report: {'average_total_reward': np.float32(5.796667), 'reward_variance': np.float32(2.7443962), 'max_total_reward': np.float32(8.900001), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08128490783274174), 'actor_loss': np.float64(-0.9047041952610015), 'hyper_actor_loss': np.float64(0.011527670174837112), 'behavior_loss': np.float64(5.353656244277954)}

tensor([False, False, False,  True, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False,  True, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False,  True, False, False, False, False,  True,  True, False,
        False, False])
tensor([ True,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True,  True, False, False, False,  True,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
         True, False, False,  True, False,  True, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
         True, False])
Episode step 4530, time diff 0.816392183303833, total time dif 387.039901971817)
step: 4530 @ episode report: {'average_total_reward': np.float32(5.4233336), 'reward_variance': np.float32(2.112061), 'max_total_reward': np.float32(8.777779), 'min_total_reward': np.float32(3.1666667), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10613591596484184), 'actor_loss': np.float64(-0.94919513463974), 'hyper_actor_loss': np.float64(0.011532607302069665), 'behavior_loss': np.float64(5.848264074325561)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False,  True, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False,  True, False,  True, False,
        False, False,  True,  True, False,  True, False, False,  True, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
         True, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
Episode step 4540, time diff 0.8812530040740967, total time dif 387.85629415512085)
step: 4540 @ episode report: {'average_total_reward': np.float32(4.9111114), 'reward_variance': np.float32(0.46493816), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09247089326381683), 'actor_loss': np.float64(-0.9210390090942383), 'hyper_actor_loss': np.float64(0.01163734532892704), 'behavior_loss': np.float64(5.570593404769897)}

tensor([False,  True,  True, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True,  True,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
         True, False, False, False,  True,  True, False, False, False,  True,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True,  True,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True,  True, False, False,  True,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([ True, False, False, False,  True, False, False, False,  True, False,
         True, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True,  True])
Episode step 4550, time diff 0.841578483581543, total time dif 388.73754715919495)
step: 4550 @ episode report: {'average_total_reward': np.float32(4.9111114), 'reward_variance': np.float32(0.51681495), 'max_total_reward': np.float32(6.533334), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10114612802863121), 'actor_loss': np.float64(-0.9123856782913208), 'hyper_actor_loss': np.float64(0.01220965562388301), 'behavior_loss': np.float64(5.259072732925415)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False,  True, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False,  True,
        False,  True, False, False, False, False,  True, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True,  True,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
Episode step 4560, time diff 0.7922797203063965, total time dif 389.5791256427765)
step: 4560 @ episode report: {'average_total_reward': np.float32(4.298889), 'reward_variance': np.float32(0.8809248), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(5.9), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09032902643084526), 'actor_loss': np.float64(-0.9185820758342743), 'hyper_actor_loss': np.float64(0.012251892033964396), 'behavior_loss': np.float64(5.534772634506226)}

tensor([ True, False, False,  True,  True, False,  True, False, False, False,
        False, False, False, False,  True,  True, False, False, False,  True,
        False,  True, False, False,  True, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False,  True, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False,  True, False,
        False, False, False,  True,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
         True, False])
Episode step 4570, time diff 0.7850522994995117, total time dif 390.3714053630829)
step: 4570 @ episode report: {'average_total_reward': np.float32(4.4355555), 'reward_variance': np.float32(1.1610079), 'max_total_reward': np.float32(6.6555567), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.0), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09158961921930313), 'actor_loss': np.float64(-0.8973232984542847), 'hyper_actor_loss': np.float64(0.012666017841547727), 'behavior_loss': np.float64(5.225712251663208)}

tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False,  True, False, False, False,
        False, False])
tensor([False,  True, False,  True,  True,  True,  True, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False,  True,  True,  True, False, False, False,
         True, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False,  True, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True,  True, False, False, False,  True, False,
        False, False])
tensor([False,  True, False,  True,  True, False, False, False,  True, False,
         True, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
Episode step 4580, time diff 0.8138887882232666, total time dif 391.1564576625824)
step: 4580 @ episode report: {'average_total_reward': np.float32(4.9355555), 'reward_variance': np.float32(1.1316987), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09428592473268509), 'actor_loss': np.float64(-0.9236853539943695), 'hyper_actor_loss': np.float64(0.012394495401531458), 'behavior_loss': np.float64(5.74600658416748)}

tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False,  True, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False,  True, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([False, False,  True,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False,  True, False,  True, False, False,  True,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False,  True,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False,  True, False,  True, False,  True, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
Episode step 4590, time diff 0.82387375831604, total time dif 391.97034645080566)
step: 4590 @ episode report: {'average_total_reward': np.float32(4.074445), 'reward_variance': np.float32(0.27343336), 'max_total_reward': np.float32(4.533334), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(5.7), 'max_n_step': np.float32(6.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09282533526420593), 'actor_loss': np.float64(-0.8970626175403595), 'hyper_actor_loss': np.float64(0.011644613463431597), 'behavior_loss': np.float64(5.458359670639038)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([ True, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False,  True,  True, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
         True,  True,  True,  True, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True,  True, False,  True, False,  True,  True, False,  True, False,
        False, False, False, False,  True, False, False, False, False,  True,
         True, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False,  True, False,  True, False, False, False,
        False, False])
Episode step 4600, time diff 0.8315248489379883, total time dif 392.7942202091217)
step: 4600 @ episode report: {'average_total_reward': np.float32(4.511111), 'reward_variance': np.float32(1.5798029), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(6.1), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10190428681671619), 'actor_loss': np.float64(-0.9178255438804627), 'hyper_actor_loss': np.float64(0.011520629469305276), 'behavior_loss': np.float64(5.865809631347656)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False,  True,  True, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False,  True, False, False,  True,  True,  True, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False,  True, False,  True,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True,  True, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 4610, time diff 0.7835233211517334, total time dif 393.6257450580597)
step: 4610 @ episode report: {'average_total_reward': np.float32(4.4111114), 'reward_variance': np.float32(3.0668893), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(2.1666667), 'average_n_step': np.float32(6.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09742927849292755), 'actor_loss': np.float64(-0.9266125857830048), 'hyper_actor_loss': np.float64(0.011373247671872377), 'behavior_loss': np.float64(5.670915412902832)}

tensor([ True, False,  True, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True,  True])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False,  True, False, False, False, False,  True, False,  True, False,
         True,  True, False, False,  True, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False,  True,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False,  True, False,  True,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False,  True,  True, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
Episode step 4620, time diff 0.8076984882354736, total time dif 394.4092683792114)
step: 4620 @ episode report: {'average_total_reward': np.float32(4.572222), 'reward_variance': np.float32(0.5667964), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.1), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09022987894713878), 'actor_loss': np.float64(-0.8957368314266205), 'hyper_actor_loss': np.float64(0.01155923241749406), 'behavior_loss': np.float64(5.514697408676147)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False,  True,
        False, False,  True, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True,  True, False,  True, False, False,  True, False,
        False, False, False,  True, False, False, False, False,  True, False,
         True,  True, False, False,  True, False, False, False,  True, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True,  True, False, False, False,
        False, False,  True,  True, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True,  True, False,  True, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False,  True])
Episode step 4630, time diff 0.8214995861053467, total time dif 395.2169668674469)
step: 4630 @ episode report: {'average_total_reward': np.float32(4.386667), 'reward_variance': np.float32(0.44476047), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.0), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10317754410207272), 'actor_loss': np.float64(-0.9303474485874176), 'hyper_actor_loss': np.float64(0.012370338663458824), 'behavior_loss': np.float64(5.479942798614502)}

tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True, False, False,  True, False, False,  True, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False,  True,
         True,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False,  True,  True, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False,  True, False, False,  True,  True,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False,  True, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False,  True, False, False,  True,
        False, False, False, False,  True, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
Episode step 4640, time diff 0.8202600479125977, total time dif 396.03846645355225)
step: 4640 @ episode report: {'average_total_reward': np.float32(4.6477776), 'reward_variance': np.float32(0.4247914), 'max_total_reward': np.float32(5.533334), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.2), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09798238798975945), 'actor_loss': np.float64(-0.9264014363288879), 'hyper_actor_loss': np.float64(0.013761994522064924), 'behavior_loss': np.float64(5.84316668510437)}

tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
         True, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True,  True, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False,  True,  True, False, False,  True, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
Episode step 4650, time diff 0.9957888126373291, total time dif 396.85872650146484)
step: 4650 @ episode report: {'average_total_reward': np.float32(4.276666), 'reward_variance': np.float32(1.3184803), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(2.677778), 'average_n_step': np.float32(6.0), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10497617572546006), 'actor_loss': np.float64(-0.9256288588047028), 'hyper_actor_loss': np.float64(0.015429987106472254), 'behavior_loss': np.float64(5.483227014541626)}

tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False,  True,  True, False,  True, False,  True, False,
        False, False])
tensor([ True, False,  True, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
         True,  True, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True,  True, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True,  True, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False,  True,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
Episode step 4660, time diff 0.8261857032775879, total time dif 397.8545153141022)
step: 4660 @ episode report: {'average_total_reward': np.float32(4.4866667), 'reward_variance': np.float32(1.1945136), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(6.1), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11008018925786019), 'actor_loss': np.float64(-0.9307326197624206), 'hyper_actor_loss': np.float64(0.016168247908353806), 'behavior_loss': np.float64(5.250762987136841)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False,  True,  True, False, False, False,  True, False,
         True, False])
tensor([ True,  True, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False,  True, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False,  True,  True,  True, False, False,
        False, False,  True, False,  True, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True,  True, False, False, False, False,
         True, False])
Episode step 4670, time diff 0.8352327346801758, total time dif 398.68070101737976)
step: 4670 @ episode report: {'average_total_reward': np.float32(4.2744446), 'reward_variance': np.float32(0.29775444), 'max_total_reward': np.float32(5.4111114), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(5.9), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08974007070064545), 'actor_loss': np.float64(-0.9245691120624542), 'hyper_actor_loss': np.float64(0.01579063506796956), 'behavior_loss': np.float64(5.293664598464966)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False,  True, False,  True,  True,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False,  True,  True, False,  True, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False,  True, False, False, False, False, False, False,
         True,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False,  True, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False,  True, False,
        False, False, False, False, False,  True, False, False,  True, False,
         True, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False,  True, False,  True, False,  True, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 4680, time diff 0.8322880268096924, total time dif 399.51593375205994)
step: 4680 @ episode report: {'average_total_reward': np.float32(4.4866667), 'reward_variance': np.float32(1.3501431), 'max_total_reward': np.float32(6.5333333), 'min_total_reward': np.float32(2.9222226), 'average_n_step': np.float32(6.1), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11191428527235985), 'actor_loss': np.float64(-0.9144002497196198), 'hyper_actor_loss': np.float64(0.015118099842220544), 'behavior_loss': np.float64(5.580868339538574)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
         True, False])
tensor([False, False,  True, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False,  True,  True,
         True, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False,  True, False,  True, False,  True, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([ True, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False,  True, False, False, False,  True,
         True, False, False, False, False,  True, False, False,  True, False,
        False,  True])
Episode step 4690, time diff 0.8127248287200928, total time dif 400.34822177886963)
step: 4690 @ episode report: {'average_total_reward': np.float32(4.911111), 'reward_variance': np.float32(1.1961231), 'max_total_reward': np.float32(7.533333), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09273509085178375), 'actor_loss': np.float64(-0.9392432034015655), 'hyper_actor_loss': np.float64(0.014202575292438268), 'behavior_loss': np.float64(5.367574310302734)}

tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True,  True,  True,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False,  True, False,  True,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False,  True, False, False,  True,  True,
         True, False])
tensor([ True, False,  True, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False,  True, False, False, False,  True,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True,  True, False, False,  True, False,  True, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
Episode step 4700, time diff 0.8220107555389404, total time dif 401.1609466075897)
step: 4700 @ episode report: {'average_total_reward': np.float32(4.411112), 'reward_variance': np.float32(0.6852839), 'max_total_reward': np.float32(5.533334), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.0), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09743057042360306), 'actor_loss': np.float64(-0.877432519197464), 'hyper_actor_loss': np.float64(0.01324137207120657), 'behavior_loss': np.float64(5.62096152305603)}

tensor([False, False,  True,  True,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False, False,  True, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False,  True,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
         True,  True, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 4710, time diff 0.7827718257904053, total time dif 401.98295736312866)
step: 4710 @ episode report: {'average_total_reward': np.float32(4.613333), 'reward_variance': np.float32(1.6810076), 'max_total_reward': np.float32(7.533334), 'min_total_reward': np.float32(3.1666667), 'average_n_step': np.float32(6.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10727924332022667), 'actor_loss': np.float64(-0.9212535381317138), 'hyper_actor_loss': np.float64(0.012773408927023411), 'behavior_loss': np.float64(5.544270277023315)}

tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False,  True,  True, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True,  True, False,  True, False, False,  True, False, False,  True,
         True, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True,  True, False,
        False, False, False, False, False,  True, False,  True, False,  True,
        False, False,  True, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False,  True,  True, False, False, False, False, False,
        False,  True])
Episode step 4720, time diff 0.8076622486114502, total time dif 402.76572918891907)
step: 4720 @ episode report: {'average_total_reward': np.float32(4.3622227), 'reward_variance': np.float32(0.7163013), 'max_total_reward': np.float32(5.533334), 'min_total_reward': np.float32(3.1666667), 'average_n_step': np.float32(6.0), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09321229755878449), 'actor_loss': np.float64(-0.9339659333229064), 'hyper_actor_loss': np.float64(0.012488568387925624), 'behavior_loss': np.float64(5.189776349067688)}

tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True,  True, False, False, False, False,  True, False,  True,  True,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False,  True, False, False,
        False,  True, False, False, False,  True,  True, False, False,  True,
        False,  True, False,  True, False,  True,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
Episode step 4730, time diff 0.8283376693725586, total time dif 403.5733914375305)
step: 4730 @ episode report: {'average_total_reward': np.float32(4.337778), 'reward_variance': np.float32(0.43699265), 'max_total_reward': np.float32(5.533334), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(6.0), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10658320412039757), 'actor_loss': np.float64(-0.9118968725204468), 'hyper_actor_loss': np.float64(0.012489622645080089), 'behavior_loss': np.float64(5.458513450622559)}

tensor([False, False, False,  True, False, False,  True,  True, False, False,
        False, False,  True, False, False,  True, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False,  True, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True,  True, False,
        False, False,  True, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False,  True])
Episode step 4740, time diff 0.7934038639068604, total time dif 404.4017291069031)
step: 4740 @ episode report: {'average_total_reward': np.float32(4.6622224), 'reward_variance': np.float32(1.2045233), 'max_total_reward': np.float32(6.5333333), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(6.3), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10297278091311454), 'actor_loss': np.float64(-0.9421197533607483), 'hyper_actor_loss': np.float64(0.012659411411732435), 'behavior_loss': np.float64(5.379273414611816)}

tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True,  True, False, False,
        False, False, False,  True, False,  True, False, False,  True, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False,  True, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False,  True, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False,  True, False, False, False,  True, False, False, False,
        False,  True, False, False,  True, False,  True, False, False,  True,
         True, False])
Episode step 4750, time diff 0.8283460140228271, total time dif 405.19513297080994)
step: 4750 @ episode report: {'average_total_reward': np.float32(4.201111), 'reward_variance': np.float32(0.80351764), 'max_total_reward': np.float32(6.5333343), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(5.9), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09992917254567146), 'actor_loss': np.float64(-0.8900469362735748), 'hyper_actor_loss': np.float64(0.012911847233772278), 'behavior_loss': np.float64(5.463901233673096)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False,  True, False,  True,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
         True,  True, False, False,  True, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True,  True, False,  True,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 4760, time diff 0.7913110256195068, total time dif 406.02347898483276)
step: 4760 @ episode report: {'average_total_reward': np.float32(4.623333), 'reward_variance': np.float32(0.89759123), 'max_total_reward': np.float32(5.655556), 'min_total_reward': np.float32(2.9222226), 'average_n_step': np.float32(6.2), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10324234291911125), 'actor_loss': np.float64(-0.9180806159973145), 'hyper_actor_loss': np.float64(0.01266274843364954), 'behavior_loss': np.float64(5.2111516952514645)}

tensor([False, False, False, False, False,  True,  True, False,  True, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False,  True,  True,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False,  True, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False,  True,  True, False,
        False, False, False,  True, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False,  True, False,  True, False,
        False, False])
Episode step 4770, time diff 0.8580312728881836, total time dif 406.81479001045227)
step: 4770 @ episode report: {'average_total_reward': np.float32(3.9744446), 'reward_variance': np.float32(0.744989), 'max_total_reward': np.float32(5.533334), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(5.6), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09838664531707764), 'actor_loss': np.float64(-0.910076129436493), 'hyper_actor_loss': np.float64(0.012394365388900042), 'behavior_loss': np.float64(5.397536420822144)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False,  True,  True,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False,  True,  True, False, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True,  True, False,
        False,  True, False, False, False, False, False, False,  True,  True,
        False,  True])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False,  True, False, False,  True,  True, False, False,
        False, False])
Episode step 4780, time diff 0.8365323543548584, total time dif 407.67282128334045)
step: 4780 @ episode report: {'average_total_reward': np.float32(4.9355555), 'reward_variance': np.float32(1.4549086), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10277237519621849), 'actor_loss': np.float64(-0.8869810342788697), 'hyper_actor_loss': np.float64(0.012159164808690549), 'behavior_loss': np.float64(5.4930579662323)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False,  True,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False,  True, False, False, False, False, False, False,  True,
         True, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False,  True,  True, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False,  True,
        False,  True])
tensor([False, False, False,  True, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 4790, time diff 0.8651421070098877, total time dif 408.5093536376953)
step: 4790 @ episode report: {'average_total_reward': np.float32(4.301111), 'reward_variance': np.float32(0.44072723), 'max_total_reward': np.float32(5.4111114), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.0), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10250506326556205), 'actor_loss': np.float64(-0.9022810220718384), 'hyper_actor_loss': np.float64(0.011576454807072877), 'behavior_loss': np.float64(5.530697536468506)}

tensor([ True, False, False, False,  True,  True, False, False, False, False,
        False,  True, False,  True, False,  True, False, False, False,  True,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True,  True,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True,  True,  True,  True, False, False,
        False,  True, False, False, False, False,  True, False, False,  True,
         True, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False,  True, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
         True, False])
Episode step 4800, time diff 0.8078055381774902, total time dif 409.3744957447052)
step: 4800 @ episode report: {'average_total_reward': np.float32(4.2988887), 'reward_variance': np.float32(1.5711961), 'max_total_reward': np.float32(6.5333333), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(5.9), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09856648780405522), 'actor_loss': np.float64(-0.9313513040542603), 'hyper_actor_loss': np.float64(0.01093596126884222), 'behavior_loss': np.float64(5.383481502532959)}

tensor([ True, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True,  True,
         True, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True,  True,  True, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True,  True, False,
         True, False, False, False,  True, False, False, False,  True, False,
         True,  True])
tensor([False,  True, False,  True, False,  True, False,  True,  True,  True,
        False,  True, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False,  True,  True, False,  True,  True, False, False, False,
        False, False])
Episode step 4810, time diff 0.8404567241668701, total time dif 410.1823012828827)
step: 4810 @ episode report: {'average_total_reward': np.float32(4.1988893), 'reward_variance': np.float32(0.5025791), 'max_total_reward': np.float32(5.4111114), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(5.8), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09751821011304855), 'actor_loss': np.float64(-0.88307284116745), 'hyper_actor_loss': np.float64(0.009946196060627698), 'behavior_loss': np.float64(5.552630805969239)}

tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False,  True,  True,  True,
        False, False, False, False,  True, False, False, False,  True, False,
         True, False])
tensor([False,  True, False,  True,  True,  True, False,  True,  True, False,
        False,  True, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False,  True,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False,  True, False, False, False, False,  True,  True, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
Episode step 4820, time diff 0.8098757266998291, total time dif 411.02275800704956)
step: 4820 @ episode report: {'average_total_reward': np.float32(4.1133337), 'reward_variance': np.float32(1.0828841), 'max_total_reward': np.float32(5.533334), 'min_total_reward': np.float32(1.9222224), 'average_n_step': np.float32(5.8), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10886772871017455), 'actor_loss': np.float64(-0.9229792356491089), 'hyper_actor_loss': np.float64(0.00913898553699255), 'behavior_loss': np.float64(5.658175134658814)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False,  True,  True, False, False, False, False, False, False,
        False,  True,  True,  True, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False,  True,  True,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False,  True,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True,  True, False, False, False,  True,  True, False,
        False,  True,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 4830, time diff 0.8138270378112793, total time dif 411.8326337337494)
step: 4830 @ episode report: {'average_total_reward': np.float32(3.9644446), 'reward_variance': np.float32(0.7194025), 'max_total_reward': np.float32(5.5333333), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(5.7), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.11088071316480637), 'actor_loss': np.float64(-0.9309948444366455), 'hyper_actor_loss': np.float64(0.008677390031516552), 'behavior_loss': np.float64(5.67339596748352)}

tensor([False, False, False, False,  True, False,  True,  True,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False,  True,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False,  True, False,  True, False, False, False,  True, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
         True, False, False, False,  True,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 4840, time diff 0.8186824321746826, total time dif 412.64646077156067)
step: 4840 @ episode report: {'average_total_reward': np.float32(4.298889), 'reward_variance': np.float32(1.001616), 'max_total_reward': np.float32(5.5333333), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(5.9), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09274222701787949), 'actor_loss': np.float64(-0.8693082511425019), 'hyper_actor_loss': np.float64(0.0082037759013474), 'behavior_loss': np.float64(5.5831530570983885)}

tensor([False, False,  True, False, False, False, False, False,  True, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False,  True, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
         True, False, False,  True, False,  True, False, False, False, False,
         True, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True,  True,
         True, False, False, False, False,  True, False, False, False,  True,
        False, False,  True,  True, False,  True, False, False, False,  True,
        False, False])
Episode step 4850, time diff 0.8057196140289307, total time dif 413.46514320373535)
step: 4850 @ episode report: {'average_total_reward': np.float32(4.086667), 'reward_variance': np.float32(1.3867607), 'max_total_reward': np.float32(5.411112), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(5.7), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09784973561763763), 'actor_loss': np.float64(-0.9100988686084748), 'hyper_actor_loss': np.float64(0.007692476874217391), 'behavior_loss': np.float64(5.743825006484985)}

tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False,  True, False, False,  True, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
         True, False, False,  True, False, False, False,  True, False, False,
         True, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False,  True, False,  True,
        False,  True])
Episode step 4860, time diff 0.8107254505157471, total time dif 414.2708628177643)
step: 4860 @ episode report: {'average_total_reward': np.float32(4.2011113), 'reward_variance': np.float32(1.9591469), 'max_total_reward': np.float32(6.411111), 'min_total_reward': np.float32(2.0444443), 'average_n_step': np.float32(5.9), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08431980460882187), 'actor_loss': np.float64(-0.9031161725521087), 'hyper_actor_loss': np.float64(0.007333275536075235), 'behavior_loss': np.float64(5.896226263046264)}

tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False,  True, False,  True,  True, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False,  True])
tensor([False, False, False, False,  True, False, False,  True,  True, False,
        False, False, False, False,  True, False, False, False,  True,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True,  True, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False,  True,
         True,  True, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False,  True, False,
        False,  True])
Episode step 4870, time diff 0.8157618045806885, total time dif 415.08158826828003)
step: 4870 @ episode report: {'average_total_reward': np.float32(3.8255558), 'reward_variance': np.float32(0.5017544), 'max_total_reward': np.float32(5.288889), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(5.5), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09459701776504517), 'actor_loss': np.float64(-0.8516121208667755), 'hyper_actor_loss': np.float64(0.0071401902940124275), 'behavior_loss': np.float64(5.996897864341736)}

tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False,  True,  True, False,  True,  True, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False,  True, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False,  True,
         True, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False,  True, False, False, False, False,
         True, False])
tensor([ True,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
Episode step 4880, time diff 0.7997379302978516, total time dif 415.8973500728607)
step: 4880 @ episode report: {'average_total_reward': np.float32(4.174445), 'reward_variance': np.float32(0.6886187), 'max_total_reward': np.float32(5.533334), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(5.8), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0929468922317028), 'actor_loss': np.float64(-0.9072834610939026), 'hyper_actor_loss': np.float64(0.006704054726287723), 'behavior_loss': np.float64(5.656378650665284)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False,  True, False,  True, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
         True, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False,  True,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True, False,  True, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True,  True, False, False,  True, False, False,  True,
        False, False, False, False,  True, False,  True, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
         True, False])
Episode step 4890, time diff 1.0090065002441406, total time dif 416.69708800315857)
step: 4890 @ episode report: {'average_total_reward': np.float32(3.913334), 'reward_variance': np.float32(0.29480982), 'max_total_reward': np.float32(4.533334), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(5.6), 'max_n_step': np.float32(6.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09473761022090912), 'actor_loss': np.float64(-0.9140330493450165), 'hyper_actor_loss': np.float64(0.006154145067557693), 'behavior_loss': np.float64(5.652172327041626)}

tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
         True, False, False,  True, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False,  True,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False,  True,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False,  True,  True,  True, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False,  True, False, False, False, False,
         True, False, False, False, False, False, False,  True, False,  True,
        False, False])
Episode step 4900, time diff 0.7958002090454102, total time dif 417.7060945034027)
step: 4900 @ episode report: {'average_total_reward': np.float32(4.4500003), 'reward_variance': np.float32(1.4964508), 'max_total_reward': np.float32(7.166667), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09735423773527145), 'actor_loss': np.float64(-0.8952643632888794), 'hyper_actor_loss': np.float64(0.005761806294322014), 'behavior_loss': np.float64(5.668711757659912)}

tensor([False, False,  True,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False,  True, False,  True, False,
         True, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False,  True,  True,
         True,  True, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([ True, False, False,  True, False, False,  True, False, False, False,
        False,  True,  True, False,  True, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
Episode step 4910, time diff 0.8136439323425293, total time dif 418.5018947124481)
step: 4910 @ episode report: {'average_total_reward': np.float32(3.94), 'reward_variance': np.float32(0.4844741), 'max_total_reward': np.float32(5.0444446), 'min_total_reward': np.float32(2.9222221), 'average_n_step': np.float32(5.7), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0924688495695591), 'actor_loss': np.float64(-0.8912322103977204), 'hyper_actor_loss': np.float64(0.005379980942234397), 'behavior_loss': np.float64(5.594342565536499)}

tensor([False,  True, False, False,  True, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True,  True,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False,  True, False,  True,
        False, False, False,  True, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False,  True, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
Episode step 4920, time diff 0.8793380260467529, total time dif 419.31553864479065)
step: 4920 @ episode report: {'average_total_reward': np.float32(4.774444), 'reward_variance': np.float32(0.89637154), 'max_total_reward': np.float32(6.5333333), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08005148470401764), 'actor_loss': np.float64(-0.8816251695156098), 'hyper_actor_loss': np.float64(0.00513354055583477), 'behavior_loss': np.float64(5.545045518875122)}

tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
         True, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False,  True, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False,  True,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 4930, time diff 0.8395664691925049, total time dif 420.1948766708374)
step: 4930 @ episode report: {'average_total_reward': np.float32(4.672222), 'reward_variance': np.float32(0.15422842), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.2), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09548158422112465), 'actor_loss': np.float64(-0.9045163154602051), 'hyper_actor_loss': np.float64(0.004943437036126852), 'behavior_loss': np.float64(5.356901359558106)}

tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False,  True,  True, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False,  True])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False,  True, False,  True, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True,  True, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False,  True,  True, False, False, False, False, False,
        False, False])
Episode step 4940, time diff 0.8216602802276611, total time dif 421.0344431400299)
step: 4940 @ episode report: {'average_total_reward': np.float32(4.9988885), 'reward_variance': np.float32(0.27094942), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09660645201802254), 'actor_loss': np.float64(-0.8898555040359497), 'hyper_actor_loss': np.float64(0.0049244381953030825), 'behavior_loss': np.float64(5.428214263916016)}

tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False,  True,  True,  True, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False,  True,  True,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False,  True, False,  True, False, False, False,  True, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True,  True,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 4950, time diff 0.847062349319458, total time dif 421.85610342025757)
step: 4950 @ episode report: {'average_total_reward': np.float32(4.998889), 'reward_variance': np.float32(0.56220853), 'max_total_reward': np.float32(6.5333333), 'min_total_reward': np.float32(4.0444446), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09374508932232857), 'actor_loss': np.float64(-0.9097516775131226), 'hyper_actor_loss': np.float64(0.004832913167774677), 'behavior_loss': np.float64(5.688599920272827)}

tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False,  True, False,  True, False,  True, False, False, False,
        False, False, False,  True,  True, False,  True, False,  True, False,
        False, False])
tensor([False,  True, False,  True, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False,  True,  True, False,
         True, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False,  True, False,  True,  True, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
Episode step 4960, time diff 0.8112847805023193, total time dif 422.703165769577)
step: 4960 @ episode report: {'average_total_reward': np.float32(4.188889), 'reward_variance': np.float32(0.48945665), 'max_total_reward': np.float32(5.411111), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(5.9), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09253808632493019), 'actor_loss': np.float64(-0.8754129588603974), 'hyper_actor_loss': np.float64(0.0050463822670280935), 'behavior_loss': np.float64(5.4898473739624025)}

tensor([False,  True, False, False,  True, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False,  True,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False,  True,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False,  True,  True, False,  True, False,  True,  True, False, False,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
         True,  True])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
Episode step 4970, time diff 0.829770565032959, total time dif 423.51445055007935)
step: 4970 @ episode report: {'average_total_reward': np.float32(4.2988896), 'reward_variance': np.float32(1.5542586), 'max_total_reward': np.float32(6.6555567), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(5.9), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0871798723936081), 'actor_loss': np.float64(-0.8873689651489258), 'hyper_actor_loss': np.float64(0.005002715019509196), 'behavior_loss': np.float64(5.943352937698364)}

tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True,  True, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False,  True,  True,  True, False,
        False, False])
tensor([False,  True, False,  True, False,  True, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False,  True,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True,  True,  True, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True,  True, False, False, False, False,  True, False,
        False, False, False,  True, False,  True,  True, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
Episode step 4980, time diff 0.8230514526367188, total time dif 424.3442211151123)
step: 4980 @ episode report: {'average_total_reward': np.float32(4.4866667), 'reward_variance': np.float32(1.6109835), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(6.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09457777515053749), 'actor_loss': np.float64(-0.8685203552246094), 'hyper_actor_loss': np.float64(0.005180092481896281), 'behavior_loss': np.float64(5.859965181350708)}

tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False,  True, False,  True, False, False, False, False, False,
         True, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True,  True,  True, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False,  True,
         True, False])
tensor([False, False,  True, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False,  True, False, False, False,  True,  True, False, False, False,
         True, False, False, False, False, False,  True,  True, False, False,
         True, False])
Episode step 4990, time diff 0.8131523132324219, total time dif 425.167272567749)
step: 4990 @ episode report: {'average_total_reward': np.float32(4.023333), 'reward_variance': np.float32(0.5059866), 'max_total_reward': np.float32(5.533334), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(5.6), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10250149443745613), 'actor_loss': np.float64(-0.936727887392044), 'hyper_actor_loss': np.float64(0.0053678416647017), 'behavior_loss': np.float64(5.6398052215576175)}

tensor([False,  True,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True,  True, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False,  True])
tensor([ True,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False,  True,  True,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True,  True, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True])
Episode step 5000, time diff 0.8067424297332764, total time dif 425.98042488098145)
step: 5000 @ episode report: {'average_total_reward': np.float32(4.4377775), 'reward_variance': np.float32(1.0812643), 'max_total_reward': np.float32(6.411111), 'min_total_reward': np.float32(2.9222221), 'average_n_step': np.float32(6.1), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10011419504880906), 'actor_loss': np.float64(-0.9027163743972778), 'hyper_actor_loss': np.float64(0.005852274270728231), 'behavior_loss': np.float64(5.596931791305542)}

tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False,  True, False,  True, False, False, False,  True,
         True, False])
tensor([False, False, False, False,  True, False,  True, False,  True,  True,
        False,  True, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False,  True,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True,  True, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
Episode step 5010, time diff 0.8230350017547607, total time dif 426.7871673107147)
step: 5010 @ episode report: {'average_total_reward': np.float32(4.523334), 'reward_variance': np.float32(1.5357891), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(6.1), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08327411636710166), 'actor_loss': np.float64(-0.8837770283222198), 'hyper_actor_loss': np.float64(0.006214020261541009), 'behavior_loss': np.float64(5.783156633377075)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True,  True,  True,
        False, False, False,  True, False, False,  True,  True, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True,  True,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False,  True,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False,  True])
tensor([ True,  True, False,  True, False, False, False, False, False, False,
         True, False,  True, False, False,  True,  True, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5020, time diff 0.8154690265655518, total time dif 427.6102023124695)
step: 5020 @ episode report: {'average_total_reward': np.float32(4.101111), 'reward_variance': np.float32(1.4819372), 'max_total_reward': np.float32(6.533334), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(5.8), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09615426287055015), 'actor_loss': np.float64(-0.9023761749267578), 'hyper_actor_loss': np.float64(0.00619596391916275), 'behavior_loss': np.float64(5.608707094192505)}

tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False,  True,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True,  True, False, False, False, False, False, False,
         True, False, False, False, False,  True,  True, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True,  True, False,  True, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False,  True, False, False,  True,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False,  True, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False,  True])
Episode step 5030, time diff 0.8194122314453125, total time dif 428.42567133903503)
step: 5030 @ episode report: {'average_total_reward': np.float32(4.3377776), 'reward_variance': np.float32(0.6035852), 'max_total_reward': np.float32(5.4111114), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.0), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10275090262293815), 'actor_loss': np.float64(-0.8904475212097168), 'hyper_actor_loss': np.float64(0.005982833867892623), 'behavior_loss': np.float64(5.651786375045776)}

tensor([False, False, False,  True,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True,  True, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True,  True,  True, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
         True, False,  True, False,  True,  True, False, False, False,  True,
        False,  True])
tensor([ True, False, False,  True,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5040, time diff 0.8281466960906982, total time dif 429.24508357048035)
step: 5040 @ episode report: {'average_total_reward': np.float32(4.1622224), 'reward_variance': np.float32(0.25674576), 'max_total_reward': np.float32(4.533334), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(5.8), 'max_n_step': np.float32(6.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09727586209774017), 'actor_loss': np.float64(-0.9069335877895355), 'hyper_actor_loss': np.float64(0.00552918235771358), 'behavior_loss': np.float64(5.9024893283844)}

tensor([False,  True,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False,  True, False,
         True, False,  True, False, False, False,  True, False, False,  True,
        False, False])
tensor([ True, False, False,  True,  True,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False,  True, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True,  True, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
         True,  True, False, False,  True, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False,  True, False,
        False, False])
Episode step 5050, time diff 0.8026847839355469, total time dif 430.07323026657104)
step: 5050 @ episode report: {'average_total_reward': np.float32(3.9766667), 'reward_variance': np.float32(0.41894937), 'max_total_reward': np.float32(5.288889), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(5.7), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0956020213663578), 'actor_loss': np.float64(-0.8934665322303772), 'hyper_actor_loss': np.float64(0.0050882295239716765), 'behavior_loss': np.float64(5.809496355056763)}

tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False,  True, False,  True,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False,  True, False, False,  True, False,  True,
        False,  True,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([ True,  True, False, False, False, False,  True, False,  True, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False,  True,  True, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
Episode step 5060, time diff 0.8722763061523438, total time dif 430.8759150505066)
step: 5060 @ episode report: {'average_total_reward': np.float32(4.6133337), 'reward_variance': np.float32(1.2341186), 'max_total_reward': np.float32(6.4111114), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(6.3), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10050576031208039), 'actor_loss': np.float64(-0.9044882774353027), 'hyper_actor_loss': np.float64(0.004739940539002419), 'behavior_loss': np.float64(5.768624687194825)}

tensor([False, False, False,  True, False, False, False, False, False, False,
         True,  True,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
         True, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True,  True, False, False, False, False, False, False,  True,
        False,  True])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False,  True, False, False,
        False,  True,  True, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True,  True, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 5070, time diff 0.8499770164489746, total time dif 431.74819135665894)
step: 5070 @ episode report: {'average_total_reward': np.float32(4.537778), 'reward_variance': np.float32(1.7435604), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(3.0444443), 'average_n_step': np.float32(6.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10628675818443298), 'actor_loss': np.float64(-0.8883291244506836), 'hyper_actor_loss': np.float64(0.004584483988583088), 'behavior_loss': np.float64(5.818458938598633)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True,  True, False,  True,  True, False,
        False,  True,  True, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False,  True,
         True, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False,  True,  True, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True,  True, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
Episode step 5080, time diff 0.7950348854064941, total time dif 432.5981683731079)
step: 5080 @ episode report: {'average_total_reward': np.float32(3.5744445), 'reward_variance': np.float32(0.7668407), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(2.1666667), 'average_n_step': np.float32(5.2), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08699630685150624), 'actor_loss': np.float64(-0.9161810457706452), 'hyper_actor_loss': np.float64(0.004401248134672642), 'behavior_loss': np.float64(5.824093532562256)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True,  True, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False,  True, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False,  True])
tensor([False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True,  True,  True,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False,  True, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5090, time diff 0.8194494247436523, total time dif 433.3932032585144)
step: 5090 @ episode report: {'average_total_reward': np.float32(4.4377775), 'reward_variance': np.float32(1.6863258), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(2.9222224), 'average_n_step': np.float32(6.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09503701031208038), 'actor_loss': np.float64(-0.8823053121566773), 'hyper_actor_loss': np.float64(0.004301637457683682), 'behavior_loss': np.float64(5.548070621490479)}

tensor([False, False, False,  True,  True,  True, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False,  True,  True, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False,  True, False,
         True, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False,  True,  True, False,  True,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
Episode step 5100, time diff 0.8104879856109619, total time dif 434.21265268325806)
step: 5100 @ episode report: {'average_total_reward': np.float32(3.8011112), 'reward_variance': np.float32(0.62761605), 'max_total_reward': np.float32(4.533334), 'min_total_reward': np.float32(2.166667), 'average_n_step': np.float32(5.5), 'max_n_step': np.float32(6.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09652937650680542), 'actor_loss': np.float64(-0.9159502208232879), 'hyper_actor_loss': np.float64(0.0042712276335805655), 'behavior_loss': np.float64(5.507683038711548)}

tensor([False, False, False, False, False,  True,  True, False,  True, False,
        False,  True,  True,  True,  True, False, False, False, False, False,
         True, False, False, False, False, False,  True, False,  True, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False,  True,  True, False, False, False,  True, False,
         True,  True,  True, False,  True, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True,  True, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
Episode step 5110, time diff 0.834306001663208, total time dif 435.023140668869)
step: 5110 @ episode report: {'average_total_reward': np.float32(4.45), 'reward_variance': np.float32(1.5218828), 'max_total_reward': np.float32(6.1666665), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(6.1), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09246834143996238), 'actor_loss': np.float64(-0.871834671497345), 'hyper_actor_loss': np.float64(0.0042870290577411655), 'behavior_loss': np.float64(5.958013200759888)}

tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False,  True,  True,
        False,  True, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False,  True,  True, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True,  True,
        False, False, False,  True, False, False, False,  True,  True, False,
        False, False])
tensor([ True,  True, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False,  True,
         True,  True])
tensor([False, False,  True, False, False,  True,  True, False, False,  True,
        False,  True, False, False,  True, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 5120, time diff 0.9930129051208496, total time dif 435.8574466705322)
step: 5120 @ episode report: {'average_total_reward': np.float32(4.3744445), 'reward_variance': np.float32(1.2071123), 'max_total_reward': np.float32(6.5333333), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.0), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09354260787367821), 'actor_loss': np.float64(-0.9007789075374604), 'hyper_actor_loss': np.float64(0.004048403748311102), 'behavior_loss': np.float64(5.389503908157349)}

tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False,  True, False,  True,  True, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False,  True, False,
         True,  True, False,  True, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
         True, False])
tensor([False,  True, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True,  True, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([ True, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
Episode step 5130, time diff 0.8071072101593018, total time dif 436.8504595756531)
step: 5130 @ episode report: {'average_total_reward': np.float32(3.8644447), 'reward_variance': np.float32(0.4133285), 'max_total_reward': np.float32(5.166667), 'min_total_reward': np.float32(3.1666667), 'average_n_step': np.float32(5.6), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08857559822499753), 'actor_loss': np.float64(-0.8907908260822296), 'hyper_actor_loss': np.float64(0.004050154937431216), 'behavior_loss': np.float64(5.6256308317184445)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
         True, False])
tensor([ True,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False,  True,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
Episode step 5140, time diff 0.8428752422332764, total time dif 437.6575667858124)
step: 5140 @ episode report: {'average_total_reward': np.float32(4.2744446), 'reward_variance': np.float32(0.97108775), 'max_total_reward': np.float32(5.655556), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(5.9), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10593975149095058), 'actor_loss': np.float64(-0.886084258556366), 'hyper_actor_loss': np.float64(0.003943929634988308), 'behavior_loss': np.float64(5.410195541381836)}

tensor([False,  True, False,  True, False, False,  True, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False,  True,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 5150, time diff 0.8124394416809082, total time dif 438.50044202804565)
step: 5150 @ episode report: {'average_total_reward': np.float32(5.074445), 'reward_variance': np.float32(1.8988655), 'max_total_reward': np.float32(8.533334), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0942608244717121), 'actor_loss': np.float64(-0.9342611134052277), 'hyper_actor_loss': np.float64(0.004156242357566953), 'behavior_loss': np.float64(5.457806491851807)}

tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True,  True,
        False,  True, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False,  True,  True, False,  True, False,
        False, False,  True,  True, False, False,  True, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
Episode step 5160, time diff 0.8497400283813477, total time dif 439.31288146972656)
step: 5160 @ episode report: {'average_total_reward': np.float32(4.3622217), 'reward_variance': np.float32(0.89185685), 'max_total_reward': np.float32(5.533334), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(6.0), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09828766733407975), 'actor_loss': np.float64(-0.889844822883606), 'hyper_actor_loss': np.float64(0.004255625838413835), 'behavior_loss': np.float64(5.732495069503784)}

tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True,  True, False, False, False,  True, False,  True,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 5170, time diff 0.8394527435302734, total time dif 440.1626214981079)
step: 5170 @ episode report: {'average_total_reward': np.float32(4.9477777), 'reward_variance': np.float32(2.0160012), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(2.1666667), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09686400666832924), 'actor_loss': np.float64(-0.8817039012908936), 'hyper_actor_loss': np.float64(0.004290609061717987), 'behavior_loss': np.float64(5.44982213973999)}

tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True,  True,  True, False, False, False,  True,
        False,  True,  True,  True, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False,  True,
        False,  True, False,  True, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
Episode step 5180, time diff 0.8190991878509521, total time dif 441.0020742416382)
step: 5180 @ episode report: {'average_total_reward': np.float32(4.823333), 'reward_variance': np.float32(2.3213692), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0928481288254261), 'actor_loss': np.float64(-0.9043085038661957), 'hyper_actor_loss': np.float64(0.004222602001391351), 'behavior_loss': np.float64(5.274848628044128)}

tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True,  True, False, False, False,  True, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False,  True, False, False,  True,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 5190, time diff 0.8311660289764404, total time dif 441.82117342948914)
step: 5190 @ episode report: {'average_total_reward': np.float32(4.7599998), 'reward_variance': np.float32(0.4331407), 'max_total_reward': np.float32(5.533334), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.3), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09187926203012467), 'actor_loss': np.float64(-0.8908310055732727), 'hyper_actor_loss': np.float64(0.00404560964088887), 'behavior_loss': np.float64(5.564337539672851)}

tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True,  True,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False,  True,  True,  True, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False,  True, False,  True,
         True, False])
tensor([False, False,  True,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True,  True, False, False, False, False,
        False, False])
Episode step 5200, time diff 0.8411483764648438, total time dif 442.6523394584656)
step: 5200 @ episode report: {'average_total_reward': np.float32(5.6477776), 'reward_variance': np.float32(0.6152854), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09266328290104867), 'actor_loss': np.float64(-0.8764830529689789), 'hyper_actor_loss': np.float64(0.004248616844415664), 'behavior_loss': np.float64(5.889599418640136)}

tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False,  True, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
         True, False,  True, False, False, False, False, False, False,  True,
         True, False])
tensor([ True, False,  True,  True, False, False,  True,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False,  True, False, False,
         True, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 5210, time diff 0.8041505813598633, total time dif 443.4934878349304)
step: 5210 @ episode report: {'average_total_reward': np.float32(4.8988886), 'reward_variance': np.float32(1.5408757), 'max_total_reward': np.float32(6.5333343), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(6.5), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09821556657552719), 'actor_loss': np.float64(-0.901107519865036), 'hyper_actor_loss': np.float64(0.004613174730911851), 'behavior_loss': np.float64(5.615076494216919)}

tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True,  True, False, False, False,  True, False,  True,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False,  True, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False,  True])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False,  True, False,  True, False, False,  True, False,  True,
         True, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
Episode step 5220, time diff 0.858583927154541, total time dif 444.2976384162903)
step: 5220 @ episode report: {'average_total_reward': np.float32(6.145556), 'reward_variance': np.float32(0.93341875), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(4.533334), 'average_n_step': np.float32(7.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0970501385629177), 'actor_loss': np.float64(-0.9302437841892243), 'hyper_actor_loss': np.float64(0.00490996902808547), 'behavior_loss': np.float64(5.907399988174438)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True,  True, False, False, False,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False,  True, False,
        False, False, False,  True,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False,  True,  True,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5230, time diff 0.8214414119720459, total time dif 445.1562223434448)
step: 5230 @ episode report: {'average_total_reward': np.float32(4.398889), 'reward_variance': np.float32(0.6347519), 'max_total_reward': np.float32(5.533334), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.0), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09491531923413277), 'actor_loss': np.float64(-0.8732575416564942), 'hyper_actor_loss': np.float64(0.005250901076942682), 'behavior_loss': np.float64(6.037690687179565)}

tensor([False,  True,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False,  True,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
Episode step 5240, time diff 0.8279297351837158, total time dif 445.97766375541687)
step: 5240 @ episode report: {'average_total_reward': np.float32(5.5722227), 'reward_variance': np.float32(1.3069445), 'max_total_reward': np.float32(6.655556), 'min_total_reward': np.float32(3.4111116), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08722575083374977), 'actor_loss': np.float64(-0.9142671883106231), 'hyper_actor_loss': np.float64(0.005334138358011842), 'behavior_loss': np.float64(5.714706468582153)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False,  True,  True, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False,  True,  True, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False,  True,  True, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5250, time diff 0.8170204162597656, total time dif 446.8055934906006)
step: 5250 @ episode report: {'average_total_reward': np.float32(5.1211114), 'reward_variance': np.float32(0.7108752), 'max_total_reward': np.float32(6.5333333), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08880960792303086), 'actor_loss': np.float64(-0.8772004127502442), 'hyper_actor_loss': np.float64(0.0051849483978003265), 'behavior_loss': np.float64(5.730959463119507)}

tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False,  True, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True,  True, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False,  True, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False,  True, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False,  True, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5260, time diff 0.828993558883667, total time dif 447.62261390686035)
step: 5260 @ episode report: {'average_total_reward': np.float32(6.208889), 'reward_variance': np.float32(2.4296741), 'max_total_reward': np.float32(9.655556), 'min_total_reward': np.float32(4.411111), 'average_n_step': np.float32(7.7), 'max_n_step': np.float32(11.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08790593445301056), 'actor_loss': np.float64(-0.8840900599956513), 'hyper_actor_loss': np.float64(0.005080496706068516), 'behavior_loss': np.float64(5.79852557182312)}

tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True,  True, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False,  True,  True, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 5270, time diff 0.8392210006713867, total time dif 448.451607465744)
step: 5270 @ episode report: {'average_total_reward': np.float32(5.9211116), 'reward_variance': np.float32(2.2920365), 'max_total_reward': np.float32(8.411112), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.1020463228225708), 'actor_loss': np.float64(-0.8963099360466004), 'hyper_actor_loss': np.float64(0.0049682390876114365), 'behavior_loss': np.float64(5.811551117897034)}

tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False,  True, False,  True, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
         True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True,  True, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False,  True, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False,  True, False, False,  True,  True, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 5280, time diff 0.827427864074707, total time dif 449.2908284664154)
step: 5280 @ episode report: {'average_total_reward': np.float32(5.621111), 'reward_variance': np.float32(0.7730972), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09303929805755615), 'actor_loss': np.float64(-0.897868013381958), 'hyper_actor_loss': np.float64(0.004843562142923474), 'behavior_loss': np.float64(5.883680152893066)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False,  True, False, False,
         True, False, False,  True, False, False,  True,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True])
Episode step 5290, time diff 0.8329169750213623, total time dif 450.1182563304901)
step: 5290 @ episode report: {'average_total_reward': np.float32(4.884444), 'reward_variance': np.float32(0.26422718), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(6.4), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.07431399039924144), 'actor_loss': np.float64(-0.9011297345161438), 'hyper_actor_loss': np.float64(0.004741032095625997), 'behavior_loss': np.float64(5.768092203140259)}

tensor([False, False,  True,  True,  True, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
         True, False, False,  True, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False,  True, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False,  True])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True,  True,  True, False,
        False, False, False,  True, False,  True,  True, False,  True,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 5300, time diff 0.8410964012145996, total time dif 450.9511733055115)
step: 5300 @ episode report: {'average_total_reward': np.float32(5.46), 'reward_variance': np.float32(1.0644244), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09894786700606346), 'actor_loss': np.float64(-0.8918397903442383), 'hyper_actor_loss': np.float64(0.004836512869223953), 'behavior_loss': np.float64(5.434739208221435)}

tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False,  True])
tensor([ True, False,  True,  True,  True, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False,  True,  True, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True,  True])
Episode step 5310, time diff 0.8530900478363037, total time dif 451.7922697067261)
step: 5310 @ episode report: {'average_total_reward': np.float32(4.998889), 'reward_variance': np.float32(0.655468), 'max_total_reward': np.float32(6.2888894), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09651097804307937), 'actor_loss': np.float64(-0.9215654253959655), 'hyper_actor_loss': np.float64(0.004938128404319286), 'behavior_loss': np.float64(5.866879415512085)}

tensor([False, False, False, False, False,  True, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True,  True])
tensor([False, False, False, False, False,  True, False,  True, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True,  True, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 5320, time diff 0.8341324329376221, total time dif 452.6453597545624)
step: 5320 @ episode report: {'average_total_reward': np.float32(5.5233335), 'reward_variance': np.float32(1.5662086), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0834812369197607), 'actor_loss': np.float64(-0.8686936855316162), 'hyper_actor_loss': np.float64(0.004631040804088116), 'behavior_loss': np.float64(5.5094362735748295)}

tensor([ True,  True, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
         True,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False,  True, False, False,  True, False, False,  True, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False,  True])
Episode step 5330, time diff 0.7970438003540039, total time dif 453.4794921875)
step: 5330 @ episode report: {'average_total_reward': np.float32(5.4844446), 'reward_variance': np.float32(0.71032596), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0756588637828827), 'actor_loss': np.float64(-0.870698618888855), 'hyper_actor_loss': np.float64(0.004891981510445476), 'behavior_loss': np.float64(5.8249382972717285)}

tensor([False, False, False, False, False, False, False,  True, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
         True,  True, False, False,  True, False, False, False, False, False,
        False, False, False,  True,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True,  True, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
Episode step 5340, time diff 0.7851498126983643, total time dif 454.276535987854)
step: 5340 @ episode report: {'average_total_reward': np.float32(4.7722225), 'reward_variance': np.float32(1.1875618), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.3), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08198068514466286), 'actor_loss': np.float64(-0.8953194677829742), 'hyper_actor_loss': np.float64(0.004947440791875124), 'behavior_loss': np.float64(5.496889400482178)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True,  True,  True, False, False,  True,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5350, time diff 0.9929215908050537, total time dif 455.06168580055237)
step: 5350 @ episode report: {'average_total_reward': np.float32(5.547778), 'reward_variance': np.float32(0.95859396), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0872990570962429), 'actor_loss': np.float64(-0.9025434374809265), 'hyper_actor_loss': np.float64(0.004843554738909006), 'behavior_loss': np.float64(5.385721969604492)}

tensor([False, False,  True, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True,  True,  True, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True,  True, False, False,
        False, False, False, False, False, False,  True,  True, False,  True,
        False, False, False, False, False, False,  True, False,  True, False,
         True, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False,  True, False,
         True, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False,  True, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 5360, time diff 0.8094282150268555, total time dif 456.0546073913574)
step: 5360 @ episode report: {'average_total_reward': np.float32(5.3233337), 'reward_variance': np.float32(0.4668015), 'max_total_reward': np.float32(6.5333343), 'min_total_reward': np.float32(4.0444446), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08999956175684928), 'actor_loss': np.float64(-0.9203091204166413), 'hyper_actor_loss': np.float64(0.00474321716465056), 'behavior_loss': np.float64(5.882639646530151)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False,  True, False,  True,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True,  True,  True,  True,
         True, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False,  True, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
Episode step 5370, time diff 0.8196160793304443, total time dif 456.8640356063843)
step: 5370 @ episode report: {'average_total_reward': np.float32(5.745556), 'reward_variance': np.float32(1.8766785), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09063564836978913), 'actor_loss': np.float64(-0.8801220059394836), 'hyper_actor_loss': np.float64(0.004703383799642325), 'behavior_loss': np.float64(6.090589189529419)}

tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
         True,  True])
tensor([False, False, False,  True, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False,  True,
        False, False,  True, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True,  True, False,
         True, False, False,  True, False, False, False,  True, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False,  True,
        False, False,  True, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5380, time diff 0.8104276657104492, total time dif 457.6836516857147)
step: 5380 @ episode report: {'average_total_reward': np.float32(5.233334), 'reward_variance': np.float32(0.2768148), 'max_total_reward': np.float32(5.6555557), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08584896698594094), 'actor_loss': np.float64(-0.920658391714096), 'hyper_actor_loss': np.float64(0.004812060156837106), 'behavior_loss': np.float64(5.745072507858277)}

tensor([False, False, False,  True,  True,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True,  True, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True,  True, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True,  True, False, False, False,  True, False,
        False, False])
Episode step 5390, time diff 0.8386220932006836, total time dif 458.49407935142517)
step: 5390 @ episode report: {'average_total_reward': np.float32(5.608889), 'reward_variance': np.float32(1.9880689), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(2.9222224), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09268084913492203), 'actor_loss': np.float64(-0.9096142947673798), 'hyper_actor_loss': np.float64(0.004926905408501625), 'behavior_loss': np.float64(6.141065359115601)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False,  True, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False,  True, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False,  True,  True,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 5400, time diff 0.8297348022460938, total time dif 459.33270144462585)
step: 5400 @ episode report: {'average_total_reward': np.float32(4.6111107), 'reward_variance': np.float32(1.3001481), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(6.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0842420693486929), 'actor_loss': np.float64(-0.8847704291343689), 'hyper_actor_loss': np.float64(0.004989329399541021), 'behavior_loss': np.float64(5.851699733734131)}

tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
         True,  True])
tensor([False,  True, False, False, False, False, False,  True, False, False,
         True, False,  True, False, False, False, False, False, False, False,
         True, False,  True, False,  True, False, False, False,  True,  True,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False, False,  True, False,  True,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False,  True, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False,  True,
        False, False, False,  True, False, False, False, False, False,  True,
         True, False])
Episode step 5410, time diff 0.8355498313903809, total time dif 460.16243624687195)
step: 5410 @ episode report: {'average_total_reward': np.float32(5.821111), 'reward_variance': np.float32(1.2136903), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08758389987051488), 'actor_loss': np.float64(-0.8825684368610383), 'hyper_actor_loss': np.float64(0.004955868516117334), 'behavior_loss': np.float64(6.337126207351685)}

tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False,  True,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False,  True, False, False, False,  True, False, False,
        False,  True,  True, False,  True, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False,  True])
Episode step 5420, time diff 0.8415448665618896, total time dif 460.99798607826233)
step: 5420 @ episode report: {'average_total_reward': np.float32(5.5722227), 'reward_variance': np.float32(2.9967473), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09701582342386246), 'actor_loss': np.float64(-0.9085591256618499), 'hyper_actor_loss': np.float64(0.005270531168207526), 'behavior_loss': np.float64(6.182305574417114)}

tensor([ True, False, False,  True, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False,  True, False, False,  True, False, False, False, False, False,
         True, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False,  True,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 5430, time diff 0.8220911026000977, total time dif 461.8395309448242)
step: 5430 @ episode report: {'average_total_reward': np.float32(4.535556), 'reward_variance': np.float32(0.97577316), 'max_total_reward': np.float32(6.5333343), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(6.1), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08487795181572437), 'actor_loss': np.float64(-0.8667650818824768), 'hyper_actor_loss': np.float64(0.0055613421369344), 'behavior_loss': np.float64(6.0240813255310055)}

tensor([False, False,  True, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False,  True, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False,  True, False,  True, False, False, False, False,  True,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True,  True])
Episode step 5440, time diff 0.8435080051422119, total time dif 462.6616220474243)
step: 5440 @ episode report: {'average_total_reward': np.float32(5.1355557), 'reward_variance': np.float32(1.339773), 'max_total_reward': np.float32(7.5333343), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08203338459134102), 'actor_loss': np.float64(-0.8959163129329681), 'hyper_actor_loss': np.float64(0.005818747403100133), 'behavior_loss': np.float64(5.679913139343261)}

tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False,  True,
        False,  True, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False,  True,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
Episode step 5450, time diff 0.841148853302002, total time dif 463.5051300525665)
step: 5450 @ episode report: {'average_total_reward': np.float32(5.545556), 'reward_variance': np.float32(1.3355175), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08451500870287418), 'actor_loss': np.float64(-0.9073445975780488), 'hyper_actor_loss': np.float64(0.0057454205118119715), 'behavior_loss': np.float64(5.768876361846924)}

tensor([False, False,  True, False, False, False,  True, False, False, False,
         True, False, False, False, False,  True, False,  True, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True,  True, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False,  True, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5460, time diff 0.8124701976776123, total time dif 464.34627890586853)
step: 5460 @ episode report: {'average_total_reward': np.float32(5.4844446), 'reward_variance': np.float32(0.99262226), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08984582275152206), 'actor_loss': np.float64(-0.8982265830039978), 'hyper_actor_loss': np.float64(0.005619904398918152), 'behavior_loss': np.float64(5.998080539703369)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False,  True, False, False, False,  True,  True, False,
        False,  True])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True,  True,  True,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True,  True, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False,  True,  True, False,
         True, False])
tensor([False, False, False, False,  True,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
Episode step 5470, time diff 0.8311691284179688, total time dif 465.15874910354614)
step: 5470 @ episode report: {'average_total_reward': np.float32(5.908889), 'reward_variance': np.float32(1.8938967), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08910085707902908), 'actor_loss': np.float64(-0.8861267507076264), 'hyper_actor_loss': np.float64(0.005410406598821282), 'behavior_loss': np.float64(6.099601745605469)}

tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True,  True,
        False, False, False, False, False,  True,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False,  True,  True, False, False, False,  True,
        False, False])
tensor([False, False,  True,  True, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True,  True,
        False, False, False, False,  True,  True,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5480, time diff 0.7973003387451172, total time dif 465.9899182319641)
step: 5480 @ episode report: {'average_total_reward': np.float32(5.0600004), 'reward_variance': np.float32(0.63180745), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0910018678754568), 'actor_loss': np.float64(-0.8913297832012177), 'hyper_actor_loss': np.float64(0.005079232901334762), 'behavior_loss': np.float64(6.03626012802124)}

tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False,  True,  True, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False,  True,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False,  True, False, False,  True,
        False,  True, False,  True,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True,  True, False, False, False, False,
        False, False])
Episode step 5490, time diff 0.83103346824646, total time dif 466.78721857070923)
step: 5490 @ episode report: {'average_total_reward': np.float32(5.26), 'reward_variance': np.float32(0.41953573), 'max_total_reward': np.float32(6.411111), 'min_total_reward': np.float32(4.1666665), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08375431671738624), 'actor_loss': np.float64(-0.9216041922569275), 'hyper_actor_loss': np.float64(0.00466901077888906), 'behavior_loss': np.float64(6.0461663722991945)}

tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False,  True, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False,  True, False, False, False,  True,  True, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False,  True,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True,  True,  True, False, False, False, False, False, False,
        False, False,  True, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
Episode step 5500, time diff 0.8124866485595703, total time dif 467.6182520389557)
step: 5500 @ episode report: {'average_total_reward': np.float32(5.608889), 'reward_variance': np.float32(2.1427114), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08013156279921532), 'actor_loss': np.float64(-0.8650191426277161), 'hyper_actor_loss': np.float64(0.004545770306140185), 'behavior_loss': np.float64(6.418285465240478)}

tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True,  True,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False,  True, False,  True,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False,  True,
         True, False,  True, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
         True, False])
Episode step 5510, time diff 0.8204219341278076, total time dif 468.43073868751526)
step: 5510 @ episode report: {'average_total_reward': np.float32(5.421111), 'reward_variance': np.float32(3.3557892), 'max_total_reward': np.float32(8.777779), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.07931259162724018), 'actor_loss': np.float64(-0.888923168182373), 'hyper_actor_loss': np.float64(0.004519072780385614), 'behavior_loss': np.float64(5.630243182182312)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True,  True,
         True, False,  True,  True,  True, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False,  True, False,
        False,  True, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5520, time diff 0.7953758239746094, total time dif 469.25116062164307)
step: 5520 @ episode report: {'average_total_reward': np.float32(5.111111), 'reward_variance': np.float32(1.4264692), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08243092596530914), 'actor_loss': np.float64(-0.9112744688987732), 'hyper_actor_loss': np.float64(0.004502661060541868), 'behavior_loss': np.float64(6.035126495361328)}

tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True,  True,
        False,  True, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([ True, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False,  True, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True,  True,
         True, False, False, False, False, False,  True, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
Episode step 5530, time diff 0.853675365447998, total time dif 470.0465364456177)
step: 5530 @ episode report: {'average_total_reward': np.float32(5.29889), 'reward_variance': np.float32(2.3328023), 'max_total_reward': np.float32(8.411113), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08409094884991646), 'actor_loss': np.float64(-0.8864678680896759), 'hyper_actor_loss': np.float64(0.004424427123740316), 'behavior_loss': np.float64(5.772905397415161)}

tensor([ True, False, False, False,  True, False,  True,  True, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False,  True,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False,  True, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False,  True,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False,  True,  True,  True, False,
         True, False])
tensor([ True, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
Episode step 5540, time diff 0.8371055126190186, total time dif 470.9002118110657)
step: 5540 @ episode report: {'average_total_reward': np.float32(5.821111), 'reward_variance': np.float32(1.389246), 'max_total_reward': np.float32(8.777779), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08188453987240792), 'actor_loss': np.float64(-0.898012924194336), 'hyper_actor_loss': np.float64(0.004305003816261888), 'behavior_loss': np.float64(6.0468912601470945)}

tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
         True, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False,  True, False, False, False, False,
         True, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False,  True,
         True,  True, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 5550, time diff 0.8216695785522461, total time dif 471.7373173236847)
step: 5550 @ episode report: {'average_total_reward': np.float32(5.6966667), 'reward_variance': np.float32(1.9912853), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.07884667217731475), 'actor_loss': np.float64(-0.8849190711975098), 'hyper_actor_loss': np.float64(0.0043596472591161724), 'behavior_loss': np.float64(5.804308986663818)}

tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False,  True,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False,  True, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
         True, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
Episode step 5560, time diff 0.8129794597625732, total time dif 472.55898690223694)
step: 5560 @ episode report: {'average_total_reward': np.float32(5.06), 'reward_variance': np.float32(1.7480549), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09279207810759545), 'actor_loss': np.float64(-0.8977586030960083), 'hyper_actor_loss': np.float64(0.004519614903256297), 'behavior_loss': np.float64(6.463816785812378)}

tensor([ True, False, False,  True,  True, False, False,  True, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False,  True,  True, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False,  True, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False,  True, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
Episode step 5570, time diff 0.8296918869018555, total time dif 473.3719663619995)
step: 5570 @ episode report: {'average_total_reward': np.float32(5.0355554), 'reward_variance': np.float32(0.7472297), 'max_total_reward': np.float32(6.411111), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08946087434887887), 'actor_loss': np.float64(-0.9275664865970612), 'hyper_actor_loss': np.float64(0.00474287923425436), 'behavior_loss': np.float64(6.129562330245972)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True,  True, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False,  True, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5580, time diff 0.8067781925201416, total time dif 474.20165824890137)
step: 5580 @ episode report: {'average_total_reward': np.float32(5.2211113), 'reward_variance': np.float32(0.29527038), 'max_total_reward': np.float32(5.655556), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(7.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.07646164670586586), 'actor_loss': np.float64(-0.8746734619140625), 'hyper_actor_loss': np.float64(0.005027762521058321), 'behavior_loss': np.float64(6.059224224090576)}

tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False,  True,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False,  True,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False,  True, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
         True, False, False,  True, False, False, False,  True, False, False,
        False, False])
Episode step 5590, time diff 1.0359351634979248, total time dif 475.0084364414215)
step: 5590 @ episode report: {'average_total_reward': np.float32(5.46), 'reward_variance': np.float32(1.6988194), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.07940324544906616), 'actor_loss': np.float64(-0.8825914561748505), 'hyper_actor_loss': np.float64(0.005678446730598807), 'behavior_loss': np.float64(6.216625308990478)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False,  True,  True, False, False, False,
        False,  True])
tensor([False,  True, False,  True,  True, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False,  True,
         True, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 5600, time diff 0.811760663986206, total time dif 476.04437160491943)
step: 5600 @ episode report: {'average_total_reward': np.float32(5.396667), 'reward_variance': np.float32(1.4688655), 'max_total_reward': np.float32(7.5333343), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08372417315840722), 'actor_loss': np.float64(-0.9149063289165497), 'hyper_actor_loss': np.float64(0.005888087116181851), 'behavior_loss': np.float64(6.382497072219849)}

tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
Episode step 5610, time diff 0.7879412174224854, total time dif 476.85613226890564)
step: 5610 @ episode report: {'average_total_reward': np.float32(5.596667), 'reward_variance': np.float32(1.4895078), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08414220102131367), 'actor_loss': np.float64(-0.8733668148517608), 'hyper_actor_loss': np.float64(0.005942218331620097), 'behavior_loss': np.float64(5.9467689037323)}

tensor([False,  True, False, False, False, False, False, False,  True, False,
         True,  True,  True, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 5620, time diff 0.7989835739135742, total time dif 477.6440734863281)
step: 5620 @ episode report: {'average_total_reward': np.float32(6.008889), 'reward_variance': np.float32(1.4229581), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.5), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09229918271303177), 'actor_loss': np.float64(-0.930498731136322), 'hyper_actor_loss': np.float64(0.006461569108068943), 'behavior_loss': np.float64(5.93871693611145)}

tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
         True,  True, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True,  True, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
Episode step 5630, time diff 0.8160243034362793, total time dif 478.4430570602417)
step: 5630 @ episode report: {'average_total_reward': np.float32(5.696667), 'reward_variance': np.float32(2.166298), 'max_total_reward': np.float32(8.533334), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08719510212540627), 'actor_loss': np.float64(-0.9135683834552765), 'hyper_actor_loss': np.float64(0.0061302919872105125), 'behavior_loss': np.float64(6.099464082717896)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True,  True,  True, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False,  True, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True,  True, False,  True, False, False,  True, False, False,  True,
         True, False])
Episode step 5640, time diff 0.8264679908752441, total time dif 479.259081363678)
step: 5640 @ episode report: {'average_total_reward': np.float32(6.182223), 'reward_variance': np.float32(1.2856845), 'max_total_reward': np.float32(7.5333343), 'min_total_reward': np.float32(3.411111), 'average_n_step': np.float32(7.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08429469428956508), 'actor_loss': np.float64(-0.9001636326313018), 'hyper_actor_loss': np.float64(0.005757004162296653), 'behavior_loss': np.float64(6.093946409225464)}

tensor([ True, False, False, False,  True,  True, False, False, False,  True,
        False, False, False,  True, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False,  True, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False,  True,  True, False, False,  True, False,  True, False,  True,
         True, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
Episode step 5650, time diff 0.8320944309234619, total time dif 480.0855493545532)
step: 5650 @ episode report: {'average_total_reward': np.float32(5.608889), 'reward_variance': np.float32(1.3461677), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09401392787694932), 'actor_loss': np.float64(-0.9373165726661682), 'hyper_actor_loss': np.float64(0.005704513052478433), 'behavior_loss': np.float64(5.8554774761199955)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False,  True, False,  True, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
         True,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True,  True, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False,  True, False,  True, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
Episode step 5660, time diff 0.8146748542785645, total time dif 480.9176437854767)
step: 5660 @ episode report: {'average_total_reward': np.float32(5.845556), 'reward_variance': np.float32(2.4190235), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.07582676783204079), 'actor_loss': np.float64(-0.890324467420578), 'hyper_actor_loss': np.float64(0.005585263110697269), 'behavior_loss': np.float64(5.769088935852051)}

tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False,  True, False, False,  True, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False,  True,
        False,  True,  True, False,  True, False, False, False, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
Episode step 5670, time diff 0.8427972793579102, total time dif 481.73231863975525)
step: 5670 @ episode report: {'average_total_reward': np.float32(5.5844445), 'reward_variance': np.float32(1.2110918), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0877343848347664), 'actor_loss': np.float64(-0.8981346547603607), 'hyper_actor_loss': np.float64(0.005341435968875885), 'behavior_loss': np.float64(6.08247480392456)}

tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False,  True, False, False,  True,  True, False, False,
         True,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False,  True, False,  True,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False,  True,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False,  True])
tensor([ True, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5680, time diff 0.8046443462371826, total time dif 482.57511591911316)
step: 5680 @ episode report: {'average_total_reward': np.float32(6.096667), 'reward_variance': np.float32(1.332495), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09405487403273582), 'actor_loss': np.float64(-0.9161687672138215), 'hyper_actor_loss': np.float64(0.005008060298860073), 'behavior_loss': np.float64(5.820800113677978)}

tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True,  True, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False,  True, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
Episode step 5690, time diff 0.8188056945800781, total time dif 483.37976026535034)
step: 5690 @ episode report: {'average_total_reward': np.float32(5.7355556), 'reward_variance': np.float32(2.9483652), 'max_total_reward': np.float32(8.533334), 'min_total_reward': np.float32(2.9222224), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10113384798169137), 'actor_loss': np.float64(-0.9097192645072937), 'hyper_actor_loss': np.float64(0.00484913638792932), 'behavior_loss': np.float64(6.17255482673645)}

tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False,  True,
        False, False,  True,  True, False, False, False,  True, False, False,
         True, False])
tensor([ True, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 5700, time diff 0.8296139240264893, total time dif 484.1985659599304)
step: 5700 @ episode report: {'average_total_reward': np.float32(5.4722223), 'reward_variance': np.float32(2.8112411), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08618038073182106), 'actor_loss': np.float64(-0.9244021356105805), 'hyper_actor_loss': np.float64(0.004636008199304343), 'behavior_loss': np.float64(5.473620080947876)}

tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True,  True, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False,  True,
         True, False,  True, False, False, False, False,  True, False, False,
        False,  True])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False,  True,  True,  True, False, False,  True, False,
         True, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False,  True,
        False,  True,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
Episode step 5710, time diff 0.7936396598815918, total time dif 485.0281798839569)
step: 5710 @ episode report: {'average_total_reward': np.float32(5.36), 'reward_variance': np.float32(1.9118569), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.0444446), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09249665401875973), 'actor_loss': np.float64(-0.9068041265010833), 'hyper_actor_loss': np.float64(0.004655434284359217), 'behavior_loss': np.float64(5.523022794723511)}

tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False,  True,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True,  True, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5720, time diff 0.7929892539978027, total time dif 485.8218195438385)
step: 5720 @ episode report: {'average_total_reward': np.float32(5.1111116), 'reward_variance': np.float32(0.64883935), 'max_total_reward': np.float32(6.5333333), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08462438806891441), 'actor_loss': np.float64(-0.8860234558582306), 'hyper_actor_loss': np.float64(0.004687495343387127), 'behavior_loss': np.float64(6.28890323638916)}

tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False,  True, False,  True,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([False, False,  True, False, False,  True, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False,  True,  True,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 5730, time diff 0.8312563896179199, total time dif 486.6148087978363)
step: 5730 @ episode report: {'average_total_reward': np.float32(5.4844446), 'reward_variance': np.float32(2.1407456), 'max_total_reward': np.float32(7.411112), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08099973872303963), 'actor_loss': np.float64(-0.9033400774002075), 'hyper_actor_loss': np.float64(0.0046341725625097755), 'behavior_loss': np.float64(5.970742034912109)}

tensor([ True, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False,  True,  True, False,  True,
        False, False, False, False, False,  True, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False,  True, False,
         True, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False,  True,  True,  True, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False,  True, False, False,
        False, False])
Episode step 5740, time diff 0.8326821327209473, total time dif 487.4460651874542)
step: 5740 @ episode report: {'average_total_reward': np.float32(5.7966666), 'reward_variance': np.float32(1.2790385), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(3.1666667), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08851883523166179), 'actor_loss': np.float64(-0.9018335282802582), 'hyper_actor_loss': np.float64(0.004820537520572543), 'behavior_loss': np.float64(6.155047035217285)}

tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False,  True,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
         True,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
Episode step 5750, time diff 0.8001716136932373, total time dif 488.27874732017517)
step: 5750 @ episode report: {'average_total_reward': np.float32(5.3844447), 'reward_variance': np.float32(2.3676348), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08068972155451774), 'actor_loss': np.float64(-0.9031246066093445), 'hyper_actor_loss': np.float64(0.004808012023568153), 'behavior_loss': np.float64(6.055380058288574)}

tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True,  True, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False,  True, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False,  True,
        False, False])
Episode step 5760, time diff 0.8549208641052246, total time dif 489.0789189338684)
step: 5760 @ episode report: {'average_total_reward': np.float32(6.294445), 'reward_variance': np.float32(1.7646487), 'max_total_reward': np.float32(8.777779), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.7), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08958291858434678), 'actor_loss': np.float64(-0.8964168846607208), 'hyper_actor_loss': np.float64(0.004948759684339166), 'behavior_loss': np.float64(6.033520746231079)}

tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False,  True,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
         True, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False,  True, False, False,
        False,  True, False,  True, False, False, False, False,  True,  True,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False,  True, False, False,
        False,  True])
Episode step 5770, time diff 0.8056778907775879, total time dif 489.93383979797363)
step: 5770 @ episode report: {'average_total_reward': np.float32(5.9577785), 'reward_variance': np.float32(1.1904151), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(4.5333333), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10377931892871857), 'actor_loss': np.float64(-0.932288533449173), 'hyper_actor_loss': np.float64(0.005189872765913606), 'behavior_loss': np.float64(6.119310188293457)}

tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5780, time diff 0.8562791347503662, total time dif 490.7395176887512)
step: 5780 @ episode report: {'average_total_reward': np.float32(5.6377783), 'reward_variance': np.float32(4.2506723), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(2.9222221), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0831839207559824), 'actor_loss': np.float64(-0.9103573262691498), 'hyper_actor_loss': np.float64(0.005476390849798918), 'behavior_loss': np.float64(6.209279537200928)}

tensor([ True, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False,  True,  True, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False,  True])
tensor([False,  True, False, False,  True, False,  True, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False,  True, False,  True,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
Episode step 5790, time diff 0.8115699291229248, total time dif 491.5957968235016)
step: 5790 @ episode report: {'average_total_reward': np.float32(6.206667), 'reward_variance': np.float32(2.0274625), 'max_total_reward': np.float32(8.655557), 'min_total_reward': np.float32(4.5333333), 'average_n_step': np.float32(7.6), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08066800981760025), 'actor_loss': np.float64(-0.8747998118400574), 'hyper_actor_loss': np.float64(0.005678246961906552), 'behavior_loss': np.float64(6.052076053619385)}

tensor([False, False, False,  True, False,  True, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5800, time diff 0.8388197422027588, total time dif 492.4073667526245)
step: 5800 @ episode report: {'average_total_reward': np.float32(5.7333336), 'reward_variance': np.float32(2.999457), 'max_total_reward': np.float32(8.900001), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10195926167070865), 'actor_loss': np.float64(-0.9414388597011566), 'hyper_actor_loss': np.float64(0.005730742542073131), 'behavior_loss': np.float64(6.141154956817627)}

tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False,  True, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 5810, time diff 0.8156280517578125, total time dif 493.24618649482727)
step: 5810 @ episode report: {'average_total_reward': np.float32(5.87), 'reward_variance': np.float32(1.2260752), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09156180620193481), 'actor_loss': np.float64(-0.911948025226593), 'hyper_actor_loss': np.float64(0.0053629415109753605), 'behavior_loss': np.float64(6.5731439113616945)}

tensor([False, False,  True, False, False,  True, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True,  True,  True,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False,  True, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5820, time diff 0.7918951511383057, total time dif 494.0618145465851)
step: 5820 @ episode report: {'average_total_reward': np.float32(5.108889), 'reward_variance': np.float32(1.503674), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08160323351621628), 'actor_loss': np.float64(-0.8755151450634002), 'hyper_actor_loss': np.float64(0.004553500283509493), 'behavior_loss': np.float64(5.799212980270386)}

tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False,  True, False,  True,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False,  True, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True,  True, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True,  True, False,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 5830, time diff 1.0040886402130127, total time dif 494.8537096977234)
step: 5830 @ episode report: {'average_total_reward': np.float32(5.1966667), 'reward_variance': np.float32(1.3986433), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09583770707249642), 'actor_loss': np.float64(-0.9202642858028411), 'hyper_actor_loss': np.float64(0.004200019035488367), 'behavior_loss': np.float64(6.195261859893799)}

tensor([False, False, False, False,  True, False, False, False,  True, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True,  True, False, False,  True, False, False, False,
         True, False, False, False,  True, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False,  True,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5840, time diff 0.7970426082611084, total time dif 495.8577983379364)
step: 5840 @ episode report: {'average_total_reward': np.float32(5.647778), 'reward_variance': np.float32(2.9664702), 'max_total_reward': np.float32(9.777778), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(11.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09380923472344875), 'actor_loss': np.float64(-0.9123960077762604), 'hyper_actor_loss': np.float64(0.004415761493146419), 'behavior_loss': np.float64(6.043437051773071)}

tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True,  True,
         True, False])
tensor([False, False,  True, False, False,  True, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
Episode step 5850, time diff 0.8195650577545166, total time dif 496.6548409461975)
step: 5850 @ episode report: {'average_total_reward': np.float32(5.3622217), 'reward_variance': np.float32(0.7437332), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08405385240912437), 'actor_loss': np.float64(-0.8945192873477936), 'hyper_actor_loss': np.float64(0.004444724973291158), 'behavior_loss': np.float64(5.907692527770996)}

tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False,  True, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False,  True, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True,  True, False, False, False, False,
        False,  True])
tensor([ True, False,  True, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True,  True,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5860, time diff 0.8701248168945312, total time dif 497.474406003952)
step: 5860 @ episode report: {'average_total_reward': np.float32(5.435556), 'reward_variance': np.float32(0.78192127), 'max_total_reward': np.float32(6.6555567), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09072153866291047), 'actor_loss': np.float64(-0.9162259995937347), 'hyper_actor_loss': np.float64(0.004457003297284245), 'behavior_loss': np.float64(5.872278356552124)}

tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False, False,  True, False,  True, False, False,  True, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([ True,  True, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False,  True, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
Episode step 5870, time diff 0.8185286521911621, total time dif 498.34453082084656)
step: 5870 @ episode report: {'average_total_reward': np.float32(5.408889), 'reward_variance': np.float32(0.77278507), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08806747309863568), 'actor_loss': np.float64(-0.9164108872413635), 'hyper_actor_loss': np.float64(0.004637474240735173), 'behavior_loss': np.float64(5.921573352813721)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False,  True, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([ True,  True, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
         True,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 5880, time diff 0.8160912990570068, total time dif 499.1630594730377)
step: 5880 @ episode report: {'average_total_reward': np.float32(5.8333335), 'reward_variance': np.float32(0.5346667), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(5.166667), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(7.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08337741829454899), 'actor_loss': np.float64(-0.9121604323387146), 'hyper_actor_loss': np.float64(0.005023741303011775), 'behavior_loss': np.float64(5.721794700622558)}

tensor([False,  True, False, False,  True, False, False, False,  True, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
         True, False])
tensor([False, False,  True, False,  True, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False,  True, False, False,
        False, False])
Episode step 5890, time diff 0.8176290988922119, total time dif 499.9791507720947)
step: 5890 @ episode report: {'average_total_reward': np.float32(6.208889), 'reward_variance': np.float32(1.4306619), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(4.0444446), 'average_n_step': np.float32(7.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08203675560653209), 'actor_loss': np.float64(-0.9004404485225678), 'hyper_actor_loss': np.float64(0.005567566817626357), 'behavior_loss': np.float64(5.587935304641723)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False,  True,  True,
         True, False])
tensor([False, False, False, False, False, False, False,  True,  True,  True,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False,  True, False, False, False,  True, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True,  True, False,
        False, False])
Episode step 5900, time diff 0.8173987865447998, total time dif 500.79677987098694)
step: 5900 @ episode report: {'average_total_reward': np.float32(5.6844444), 'reward_variance': np.float32(2.63156), 'max_total_reward': np.float32(8.9), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08389848284423351), 'actor_loss': np.float64(-0.9242140352725983), 'hyper_actor_loss': np.float64(0.005941997608169913), 'behavior_loss': np.float64(5.323747730255127)}

tensor([False, False,  True, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
         True, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
Episode step 5910, time diff 0.8683245182037354, total time dif 501.61417865753174)
step: 5910 @ episode report: {'average_total_reward': np.float32(6.257778), 'reward_variance': np.float32(1.1856742), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08594166785478592), 'actor_loss': np.float64(-0.9189836382865906), 'hyper_actor_loss': np.float64(0.006365548772737384), 'behavior_loss': np.float64(5.845913600921631)}

tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False,  True,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
         True, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True,  True, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
         True, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5920, time diff 0.8400421142578125, total time dif 502.4825031757355)
step: 5920 @ episode report: {'average_total_reward': np.float32(5.372222), 'reward_variance': np.float32(1.3743026), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08287255726754665), 'actor_loss': np.float64(-0.9229924023151398), 'hyper_actor_loss': np.float64(0.006782773556187749), 'behavior_loss': np.float64(5.714060735702515)}

tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
         True,  True, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
Episode step 5930, time diff 0.8427221775054932, total time dif 503.3225452899933)
step: 5930 @ episode report: {'average_total_reward': np.float32(6.6333337), 'reward_variance': np.float32(3.426691), 'max_total_reward': np.float32(9.777777), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(8.1), 'max_n_step': np.float32(11.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08633492775261402), 'actor_loss': np.float64(-0.9245090067386628), 'hyper_actor_loss': np.float64(0.007038499927148223), 'behavior_loss': np.float64(5.752398061752319)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False,  True, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False,  True,  True,
         True, False, False,  True, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False,  True,
         True, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False,  True, False, False, False,
         True, False])
Episode step 5940, time diff 0.8349287509918213, total time dif 504.1652674674988)
step: 5940 @ episode report: {'average_total_reward': np.float32(5.6211114), 'reward_variance': np.float32(1.3406779), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09734347835183144), 'actor_loss': np.float64(-0.9485981822013855), 'hyper_actor_loss': np.float64(0.0077280788216739895), 'behavior_loss': np.float64(5.505245351791382)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False,  True,
         True,  True,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([ True,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True,  True,
        False, False])
Episode step 5950, time diff 0.8536217212677002, total time dif 505.0001962184906)
step: 5950 @ episode report: {'average_total_reward': np.float32(6.3577785), 'reward_variance': np.float32(1.5960696), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(3.4111116), 'average_n_step': np.float32(7.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08730377033352851), 'actor_loss': np.float64(-0.9353588044643402), 'hyper_actor_loss': np.float64(0.008540714252740144), 'behavior_loss': np.float64(6.002194738388061)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False,  True, False,  True, False, False, False,  True,  True,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False,  True,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False,  True, False, False, False,
        False,  True])
Episode step 5960, time diff 0.8288881778717041, total time dif 505.8538179397583)
step: 5960 @ episode report: {'average_total_reward': np.float32(6.6577783), 'reward_variance': np.float32(1.5268843), 'max_total_reward': np.float32(8.411112), 'min_total_reward': np.float32(4.533334), 'average_n_step': np.float32(8.1), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08514470085501671), 'actor_loss': np.float64(-0.9291078746318817), 'hyper_actor_loss': np.float64(0.008775155618786811), 'behavior_loss': np.float64(6.133444881439209)}

tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False,  True, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False,  True, False,
         True, False, False, False,  True, False, False,  True, False,  True,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
Episode step 5970, time diff 0.836993932723999, total time dif 506.68270611763)
step: 5970 @ episode report: {'average_total_reward': np.float32(6.3455553), 'reward_variance': np.float32(2.3902087), 'max_total_reward': np.float32(8.900001), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.8), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09191301241517066), 'actor_loss': np.float64(-0.9133337438106537), 'hyper_actor_loss': np.float64(0.009696656558662652), 'behavior_loss': np.float64(5.919619464874268)}

tensor([False, False, False, False,  True, False, False,  True,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False,  True,  True,
         True, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False,  True])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 5980, time diff 0.8367266654968262, total time dif 507.519700050354)
step: 5980 @ episode report: {'average_total_reward': np.float32(5.708889), 'reward_variance': np.float32(2.1487112), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09140810295939446), 'actor_loss': np.float64(-0.9456014990806579), 'hyper_actor_loss': np.float64(0.010413164272904396), 'behavior_loss': np.float64(5.953122854232788)}

tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True,  True,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False,  True, False,  True,
        False, False,  True, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 5990, time diff 0.8409748077392578, total time dif 508.35642671585083)
step: 5990 @ episode report: {'average_total_reward': np.float32(5.9066668), 'reward_variance': np.float32(1.3955603), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08933259434998035), 'actor_loss': np.float64(-0.9380613625049591), 'hyper_actor_loss': np.float64(0.010282546002417802), 'behavior_loss': np.float64(5.7800257205963135)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False,  True,  True, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False,  True, False, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
Episode step 6000, time diff 0.8180217742919922, total time dif 509.1974015235901)
step: 6000 @ episode report: {'average_total_reward': np.float32(5.36), 'reward_variance': np.float32(1.064968), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.07843737676739693), 'actor_loss': np.float64(-0.9304893136024475), 'hyper_actor_loss': np.float64(0.00997929396107793), 'behavior_loss': np.float64(5.942619848251343)}

tensor([False, False, False,  True, False,  True, False, False, False, False,
         True, False, False, False, False, False,  True, False,  True, False,
        False,  True, False, False,  True, False, False,  True, False, False,
         True, False])
tensor([False,  True,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True,  True, False,  True, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False,  True, False, False,
         True, False, False, False,  True, False,  True, False,  True, False,
         True, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
Episode step 6010, time diff 0.8664231300354004, total time dif 510.0154232978821)
step: 6010 @ episode report: {'average_total_reward': np.float32(5.8844447), 'reward_variance': np.float32(1.5814615), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.07710311636328697), 'actor_loss': np.float64(-0.8959430992603302), 'hyper_actor_loss': np.float64(0.010424043517559767), 'behavior_loss': np.float64(5.769712734222412)}

tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False,  True, False, False,  True, False, False,  True,
        False, False,  True, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False,  True, False,  True,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 6020, time diff 0.8228628635406494, total time dif 510.8818464279175)
step: 6020 @ episode report: {'average_total_reward': np.float32(5.05), 'reward_variance': np.float32(0.83889514), 'max_total_reward': np.float32(6.4111114), 'min_total_reward': np.float32(2.9222224), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.07695692516863346), 'actor_loss': np.float64(-0.9443604588508606), 'hyper_actor_loss': np.float64(0.011462429631501436), 'behavior_loss': np.float64(5.416390466690063)}

tensor([False, False, False, False,  True,  True, False, False,  True, False,
        False, False,  True, False, False,  True,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False,  True, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
         True,  True, False, False, False,  True, False, False, False,  True,
        False, False])
Episode step 6030, time diff 0.8557271957397461, total time dif 511.70470929145813)
step: 6030 @ episode report: {'average_total_reward': np.float32(6.0211115), 'reward_variance': np.float32(1.5363573), 'max_total_reward': np.float32(8.655557), 'min_total_reward': np.float32(4.5333333), 'average_n_step': np.float32(7.5), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09355390965938568), 'actor_loss': np.float64(-0.9579066276550293), 'hyper_actor_loss': np.float64(0.0134049316868186), 'behavior_loss': np.float64(5.497288036346435)}

tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False,  True, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
Episode step 6040, time diff 0.8145923614501953, total time dif 512.5604364871979)
step: 6040 @ episode report: {'average_total_reward': np.float32(5.7355556), 'reward_variance': np.float32(1.5348839), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0830470684915781), 'actor_loss': np.float64(-0.9688604772090912), 'hyper_actor_loss': np.float64(0.015251709148287773), 'behavior_loss': np.float64(4.296962642669678)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False,  True, False,
        False,  True, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False,  True])
tensor([ True,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True,  True, False, False, False, False,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 6050, time diff 0.7931041717529297, total time dif 513.3750288486481)
step: 6050 @ episode report: {'average_total_reward': np.float32(5.7844443), 'reward_variance': np.float32(1.6868198), 'max_total_reward': np.float32(8.777778), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08552300594747067), 'actor_loss': np.float64(-0.9723322868347168), 'hyper_actor_loss': np.float64(0.015406710654497146), 'behavior_loss': np.float64(4.241038370132446)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False,  True, False, False, False, False, False,
         True, False, False,  True,  True,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
Episode step 6060, time diff 1.0063071250915527, total time dif 514.168133020401)
step: 6060 @ episode report: {'average_total_reward': np.float32(5.0722227), 'reward_variance': np.float32(1.0357592), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(3.166667), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08562134057283402), 'actor_loss': np.float64(-0.9624967575073242), 'hyper_actor_loss': np.float64(0.014830599445849657), 'behavior_loss': np.float64(4.78108286857605)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False,  True, False, False, False,  True, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 6070, time diff 0.8424968719482422, total time dif 515.1744401454926)
step: 6070 @ episode report: {'average_total_reward': np.float32(5.77), 'reward_variance': np.float32(2.1834085), 'max_total_reward': np.float32(8.533334), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08485548943281174), 'actor_loss': np.float64(-0.9681261360645295), 'hyper_actor_loss': np.float64(0.014906686265021563), 'behavior_loss': np.float64(4.3412199974060055)}

tensor([ True, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False,  True, False,  True, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False,  True,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False,  True,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False,  True, False,  True, False,  True, False, False, False, False,
        False, False])
Episode step 6080, time diff 0.8625998497009277, total time dif 516.0169370174408)
step: 6080 @ episode report: {'average_total_reward': np.float32(5.298889), 'reward_variance': np.float32(1.6714188), 'max_total_reward': np.float32(7.166667), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09257480278611183), 'actor_loss': np.float64(-0.9319438099861145), 'hyper_actor_loss': np.float64(0.014592444337904454), 'behavior_loss': np.float64(4.637492251396179)}

tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False,  True, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 6090, time diff 0.8454513549804688, total time dif 516.8795368671417)
step: 6090 @ episode report: {'average_total_reward': np.float32(5.5211115), 'reward_variance': np.float32(0.99934447), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.0444446), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09699326530098915), 'actor_loss': np.float64(-0.936138266324997), 'hyper_actor_loss': np.float64(0.01395913129672408), 'behavior_loss': np.float64(4.926857995986938)}

tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True,  True,
        False, False])
tensor([False,  True, False, False, False,  True,  True, False, False,  True,
        False, False, False, False, False, False, False,  True, False,  True,
         True,  True, False,  True, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False,  True, False, False,
         True, False,  True,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False,  True, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False,  True, False,
        False,  True, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 6100, time diff 0.8421115875244141, total time dif 517.7249882221222)
step: 6100 @ episode report: {'average_total_reward': np.float32(6.108889), 'reward_variance': np.float32(1.4303404), 'max_total_reward': np.float32(8.655555), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.6), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0958135224878788), 'actor_loss': np.float64(-0.9208406746387482), 'hyper_actor_loss': np.float64(0.012785391509532928), 'behavior_loss': np.float64(5.19735369682312)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False,  True,  True,  True, False,  True,  True,
        False,  True, False, False,  True, False,  True,  True, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 6110, time diff 0.8974330425262451, total time dif 518.5670998096466)
step: 6110 @ episode report: {'average_total_reward': np.float32(5.337778), 'reward_variance': np.float32(1.030474), 'max_total_reward': np.float32(7.411111), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0862599030137062), 'actor_loss': np.float64(-0.9385556519031525), 'hyper_actor_loss': np.float64(0.011946169566363097), 'behavior_loss': np.float64(5.157887697219849)}

tensor([ True,  True, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False,  True,  True,
        False, False])
tensor([False, False, False,  True, False, False,  True,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False,  True,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True,  True, False, False,  True,  True,
        False, False])
tensor([ True,  True, False, False, False, False,  True,  True, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 6120, time diff 0.8618433475494385, total time dif 519.4645328521729)
step: 6120 @ episode report: {'average_total_reward': np.float32(5.408889), 'reward_variance': np.float32(0.71792114), 'max_total_reward': np.float32(6.655556), 'min_total_reward': np.float32(4.5333333), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08741129003465176), 'actor_loss': np.float64(-0.915999561548233), 'hyper_actor_loss': np.float64(0.011902510933578015), 'behavior_loss': np.float64(5.360820007324219)}

tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False,  True, False, False,  True, False, False,
        False,  True])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False,  True,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
Episode step 6130, time diff 0.8673803806304932, total time dif 520.3263761997223)
step: 6130 @ episode report: {'average_total_reward': np.float32(5.46), 'reward_variance': np.float32(1.3681781), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(4.2888894), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08448904454708099), 'actor_loss': np.float64(-0.8978710651397706), 'hyper_actor_loss': np.float64(0.011207400355488062), 'behavior_loss': np.float64(5.173297595977783)}

tensor([False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False,  True])
tensor([ True,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True,  True, False, False, False, False, False,  True, False,
         True, False])
tensor([False, False,  True,  True, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False,  True, False, False, False,  True, False,  True,
        False, False])
Episode step 6140, time diff 0.8022871017456055, total time dif 521.1937565803528)
step: 6140 @ episode report: {'average_total_reward': np.float32(5.8333335), 'reward_variance': np.float32(1.0922967), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.07807154506444931), 'actor_loss': np.float64(-0.9032596826553345), 'hyper_actor_loss': np.float64(0.009835589211434126), 'behavior_loss': np.float64(5.600303983688354)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False,  True,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True, False,  True, False, False, False,  True,
         True, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True,  True, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False,  True, False,
        False,  True, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 6150, time diff 0.8636929988861084, total time dif 521.9960436820984)
step: 6150 @ episode report: {'average_total_reward': np.float32(5.496667), 'reward_variance': np.float32(1.2580013), 'max_total_reward': np.float32(7.533334), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09671367332339287), 'actor_loss': np.float64(-0.904144537448883), 'hyper_actor_loss': np.float64(0.008326803753152489), 'behavior_loss': np.float64(5.764156103134155)}

tensor([False, False, False,  True,  True, False,  True, False, False,  True,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True,  True,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
         True, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 6160, time diff 0.852609395980835, total time dif 522.8597366809845)
step: 6160 @ episode report: {'average_total_reward': np.float32(5.2966666), 'reward_variance': np.float32(1.2307668), 'max_total_reward': np.float32(7.4111114), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0879709456115961), 'actor_loss': np.float64(-0.9279451251029969), 'hyper_actor_loss': np.float64(0.007248842343688011), 'behavior_loss': np.float64(5.41809573173523)}

tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True,  True,  True, False,  True, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False,  True, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False,  True, False,  True,  True, False, False,  True,
        False, False, False, False,  True, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False,  True,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
Episode step 6170, time diff 0.8192405700683594, total time dif 523.7123460769653)
step: 6170 @ episode report: {'average_total_reward': np.float32(5.16), 'reward_variance': np.float32(1.0319557), 'max_total_reward': np.float32(6.655556), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08311828225851059), 'actor_loss': np.float64(-0.8859991014003754), 'hyper_actor_loss': np.float64(0.006542516918852925), 'behavior_loss': np.float64(5.701757621765137)}

tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False,  True,  True,  True, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([ True, False, False, False,  True, False, False, False,  True, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True,  True, False,  True, False, False,  True,
        False, False,  True, False, False, False,  True, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False,  True, False, False,
        False,  True,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False,  True, False, False,
        False,  True])
Episode step 6180, time diff 0.8366053104400635, total time dif 524.5315866470337)
step: 6180 @ episode report: {'average_total_reward': np.float32(5.223334), 'reward_variance': np.float32(0.7442334), 'max_total_reward': np.float32(7.1666675), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08158649615943432), 'actor_loss': np.float64(-0.9189158141613006), 'hyper_actor_loss': np.float64(0.006297724368050694), 'behavior_loss': np.float64(5.956976842880249)}

tensor([False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False,  True, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False,  True,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
Episode step 6190, time diff 0.8301906585693359, total time dif 525.3681919574738)
step: 6190 @ episode report: {'average_total_reward': np.float32(6.145556), 'reward_variance': np.float32(1.4705791), 'max_total_reward': np.float32(7.777779), 'min_total_reward': np.float32(4.533334), 'average_n_step': np.float32(7.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09428182877600193), 'actor_loss': np.float64(-0.8979264020919799), 'hyper_actor_loss': np.float64(0.0058449076022952795), 'behavior_loss': np.float64(6.1327873229980465)}

tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False, False,  True, False, False, False, False, False,  True,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False,  True,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False,  True,  True,  True, False,
        False, False, False, False, False,  True, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 6200, time diff 0.8399279117584229, total time dif 526.1983826160431)
step: 6200 @ episode report: {'average_total_reward': np.float32(5.1722226), 'reward_variance': np.float32(1.5082529), 'max_total_reward': np.float32(7.411111), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08751750960946084), 'actor_loss': np.float64(-0.9510554552078248), 'hyper_actor_loss': np.float64(0.005682695796713233), 'behavior_loss': np.float64(5.874506044387817)}

tensor([ True,  True, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
         True,  True])
tensor([ True, False, False, False, False, False,  True,  True, False,  True,
        False,  True, False, False, False,  True, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False,  True,  True, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
Episode step 6210, time diff 0.8445799350738525, total time dif 527.0383105278015)
step: 6210 @ episode report: {'average_total_reward': np.float32(5.5111113), 'reward_variance': np.float32(0.7967408), 'max_total_reward': np.float32(6.533334), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.078727238625288), 'actor_loss': np.float64(-0.8926875054836273), 'hyper_actor_loss': np.float64(0.005825711786746979), 'behavior_loss': np.float64(5.8521050930023195)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False,  True,  True, False, False, False,
         True, False,  True, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True,  True,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
Episode step 6220, time diff 0.8303835391998291, total time dif 527.8828904628754)
step: 6220 @ episode report: {'average_total_reward': np.float32(5.347778), 'reward_variance': np.float32(1.0101987), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(6.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08882118798792363), 'actor_loss': np.float64(-0.9151342749595642), 'hyper_actor_loss': np.float64(0.00569177633151412), 'behavior_loss': np.float64(5.453736400604248)}

tensor([ True, False,  True,  True, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False,  True, False,  True,  True,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False,  True,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False,  True, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 6230, time diff 0.8240692615509033, total time dif 528.7132740020752)
step: 6230 @ episode report: {'average_total_reward': np.float32(5.035556), 'reward_variance': np.float32(2.6171064), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(2.288889), 'average_n_step': np.float32(6.6), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(4.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10093949437141418), 'actor_loss': np.float64(-0.9618059575557709), 'hyper_actor_loss': np.float64(0.005941294459626078), 'behavior_loss': np.float64(6.131280946731567)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False,  True,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False,  True,  True, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([ True, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
Episode step 6240, time diff 0.7973718643188477, total time dif 529.5373432636261)
step: 6240 @ episode report: {'average_total_reward': np.float32(5.508889), 'reward_variance': np.float32(0.49663696), 'max_total_reward': np.float32(6.6555557), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.07808355763554573), 'actor_loss': np.float64(-0.9176347017288208), 'hyper_actor_loss': np.float64(0.006253901636227965), 'behavior_loss': np.float64(5.267397832870484)}

tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False,  True, False, False, False,  True,  True, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
         True,  True,  True, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False,  True, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False,  True, False, False,  True, False,
        False, False])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
Episode step 6250, time diff 0.9415740966796875, total time dif 530.334715127945)
step: 6250 @ episode report: {'average_total_reward': np.float32(5.508889), 'reward_variance': np.float32(1.136563), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0899258092045784), 'actor_loss': np.float64(-0.9383623659610748), 'hyper_actor_loss': np.float64(0.006765091978013516), 'behavior_loss': np.float64(5.736274671554566)}

tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
        False, False, False,  True, False, False,  True, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
         True, False])
tensor([ True,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False,  True, False,  True, False, False,  True, False, False,
        False, False])
Episode step 6260, time diff 0.8417997360229492, total time dif 531.2762892246246)
step: 6260 @ episode report: {'average_total_reward': np.float32(5.8233337), 'reward_variance': np.float32(1.4325545), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(4.044445), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09146300181746483), 'actor_loss': np.float64(-0.9070240974426269), 'hyper_actor_loss': np.float64(0.007054530642926693), 'behavior_loss': np.float64(6.07328953742981)}

tensor([False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
         True,  True])
tensor([False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True,  True, False,  True, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False,  True, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False,  True,
         True,  True])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 6270, time diff 0.8043720722198486, total time dif 532.1180889606476)
step: 6270 @ episode report: {'average_total_reward': np.float32(5.57), 'reward_variance': np.float32(0.6061246), 'max_total_reward': np.float32(7.5333333), 'min_total_reward': np.float32(4.533334), 'average_n_step': np.float32(7.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09802885502576827), 'actor_loss': np.float64(-0.9489784598350525), 'hyper_actor_loss': np.float64(0.007160505000501871), 'behavior_loss': np.float64(5.700262880325317)}

tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True,  True, False,
        False, False,  True, False, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False,  True, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 6280, time diff 0.8158144950866699, total time dif 532.9224610328674)
step: 6280 @ episode report: {'average_total_reward': np.float32(5.608889), 'reward_variance': np.float32(1.781106), 'max_total_reward': np.float32(8.777778), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08773490712046624), 'actor_loss': np.float64(-0.9056609332561493), 'hyper_actor_loss': np.float64(0.007900906912982463), 'behavior_loss': np.float64(5.548999643325805)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True])
tensor([ True, False,  True,  True, False, False,  True,  True, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False,  True, False,  True,  True, False,
         True, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False, False, False, False, False,  True,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True])
Episode step 6290, time diff 0.8218178749084473, total time dif 533.7382755279541)
step: 6290 @ episode report: {'average_total_reward': np.float32(5.7333336), 'reward_variance': np.float32(0.99639523), 'max_total_reward': np.float32(7.533334), 'min_total_reward': np.float32(4.5333333), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10252904370427132), 'actor_loss': np.float64(-0.9259360015392304), 'hyper_actor_loss': np.float64(0.009081572480499744), 'behavior_loss': np.float64(4.829715061187744)}

tensor([False, False, False,  True, False, False, False, False, False,  True,
         True, False,  True, False,  True,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True,  True,
        False, False])
tensor([False,  True,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False,  True,  True,
        False,  True])
tensor([False, False,  True,  True, False,  True, False, False, False,  True,
        False, False, False, False,  True,  True,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 6300, time diff 1.0240445137023926, total time dif 534.5600934028625)
step: 6300 @ episode report: {'average_total_reward': np.float32(5.247778), 'reward_variance': np.float32(1.1912853), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.1666665), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.07763804532587529), 'actor_loss': np.float64(-0.9532086312770843), 'hyper_actor_loss': np.float64(0.010129246581345796), 'behavior_loss': np.float64(3.728051543235779)}

tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False,  True,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False,  True,  True, False, False,  True,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False,  True, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 6310, time diff 0.8103392124176025, total time dif 535.5841379165649)
step: 6310 @ episode report: {'average_total_reward': np.float32(5.172222), 'reward_variance': np.float32(0.85637665), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(6.7), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08423487246036529), 'actor_loss': np.float64(-0.8924472272396088), 'hyper_actor_loss': np.float64(0.010249598417431116), 'behavior_loss': np.float64(3.736427140235901)}

tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
         True,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False,  True, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True,  True, False,  True, False, False,
         True, False, False, False,  True,  True, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
         True, False])
Episode step 6320, time diff 0.8384878635406494, total time dif 536.3944771289825)
step: 6320 @ episode report: {'average_total_reward': np.float32(6.0577784), 'reward_variance': np.float32(0.7072546), 'max_total_reward': np.float32(7.5333343), 'min_total_reward': np.float32(4.5333333), 'average_n_step': np.float32(7.5), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09280267879366874), 'actor_loss': np.float64(-0.9353213131427764), 'hyper_actor_loss': np.float64(0.010815318394452333), 'behavior_loss': np.float64(3.1752346038818358)}

tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
         True,  True, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
Episode step 6330, time diff 0.8592483997344971, total time dif 537.2329649925232)
step: 6330 @ episode report: {'average_total_reward': np.float32(5.882222), 'reward_variance': np.float32(1.3643259), 'max_total_reward': np.float32(7.7777777), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09194626808166503), 'actor_loss': np.float64(-0.9590068817138672), 'hyper_actor_loss': np.float64(0.012199528515338898), 'behavior_loss': np.float64(2.905315399169922)}

tensor([False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False])
Episode step 6340, time diff 0.8375730514526367, total time dif 538.0922133922577)
step: 6340 @ episode report: {'average_total_reward': np.float32(5.2844443), 'reward_variance': np.float32(1.2996595), 'max_total_reward': np.float32(6.5333343), 'min_total_reward': np.float32(3.2888892), 'average_n_step': np.float32(6.8), 'max_n_step': np.float32(8.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10027065351605416), 'actor_loss': np.float64(-0.916181766986847), 'hyper_actor_loss': np.float64(0.012529657408595084), 'behavior_loss': np.float64(2.687448191642761)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False,  True, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
         True,  True])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False,  True, False,  True,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
Episode step 6350, time diff 0.8329150676727295, total time dif 538.9297864437103)
step: 6350 @ episode report: {'average_total_reward': np.float32(5.7211113), 'reward_variance': np.float32(0.37818423), 'max_total_reward': np.float32(7.5333343), 'min_total_reward': np.float32(5.288889), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(7.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08769371025264264), 'actor_loss': np.float64(-0.9330228507518769), 'hyper_actor_loss': np.float64(0.011890196055173875), 'behavior_loss': np.float64(2.7931806087493896)}

tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True,  True, False, False,  True, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
Episode step 6360, time diff 0.8060922622680664, total time dif 539.762701511383)
step: 6360 @ episode report: {'average_total_reward': np.float32(6.2211113), 'reward_variance': np.float32(1.4648507), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(4.533334), 'average_n_step': np.float32(7.7), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09157592169940472), 'actor_loss': np.float64(-0.9092406034469604), 'hyper_actor_loss': np.float64(0.01151422392576933), 'behavior_loss': np.float64(2.7743816137313844)}

tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True,  True, False,  True, False,  True, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False,  True,
        False, False, False, False,  True,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False,  True,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 6370, time diff 0.8552007675170898, total time dif 540.5687937736511)
step: 6370 @ episode report: {'average_total_reward': np.float32(7.043334), 'reward_variance': np.float32(2.0950236), 'max_total_reward': np.float32(8.900001), 'min_total_reward': np.float32(4.533334), 'average_n_step': np.float32(8.4), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09570985212922097), 'actor_loss': np.float64(-0.9373666524887085), 'hyper_actor_loss': np.float64(0.011258519534021617), 'behavior_loss': np.float64(2.7377898693084717)}

tensor([False, False,  True,  True, False,  True, False, False,  True, False,
         True, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False,  True,  True, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False,  True, False,
         True,  True])
tensor([False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 6380, time diff 0.815302848815918, total time dif 541.4239945411682)
step: 6380 @ episode report: {'average_total_reward': np.float32(6.582222), 'reward_variance': np.float32(1.0369927), 'max_total_reward': np.float32(7.777778), 'min_total_reward': np.float32(4.533334), 'average_n_step': np.float32(8.0), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08550865761935711), 'actor_loss': np.float64(-0.9454083502292633), 'hyper_actor_loss': np.float64(0.011302725225687028), 'behavior_loss': np.float64(2.65536105632782)}

tensor([False, False,  True, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True,  True,
        False,  True, False,  True,  True, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([ True, False,  True, False,  True,  True, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
Episode step 6390, time diff 0.8245160579681396, total time dif 542.2392973899841)
step: 6390 @ episode report: {'average_total_reward': np.float32(6.918889), 'reward_variance': np.float32(1.815211), 'max_total_reward': np.float32(9.900001), 'min_total_reward': np.float32(4.533334), 'average_n_step': np.float32(8.3), 'max_n_step': np.float32(11.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08351436890661716), 'actor_loss': np.float64(-0.9153622627258301), 'hyper_actor_loss': np.float64(0.010610882751643657), 'behavior_loss': np.float64(2.6377197027206423)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False,  True, False,  True, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False,  True,  True,  True,  True, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True,  True, False,  True, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 6400, time diff 0.7999780178070068, total time dif 543.0638134479523)
step: 6400 @ episode report: {'average_total_reward': np.float32(7.2822227), 'reward_variance': np.float32(3.2579308), 'max_total_reward': np.float32(9.9), 'min_total_reward': np.float32(4.5333333), 'average_n_step': np.float32(8.7), 'max_n_step': np.float32(11.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09093990400433541), 'actor_loss': np.float64(-0.9322356522083283), 'hyper_actor_loss': np.float64(0.010513374488800764), 'behavior_loss': np.float64(2.717512583732605)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False,  True, False, False,  True,
        False, False,  True, False, False, False,  True,  True, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
Episode step 6410, time diff 0.8371396064758301, total time dif 543.8637914657593)
step: 6410 @ episode report: {'average_total_reward': np.float32(6.47), 'reward_variance': np.float32(2.9109643), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(3.2888894), 'average_n_step': np.float32(7.9), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.0895838774740696), 'actor_loss': np.float64(-0.954535162448883), 'hyper_actor_loss': np.float64(0.01242093974724412), 'behavior_loss': np.float64(2.5855712413787844)}

tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([ True, False, False, False,  True, False,  True, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False,  True, False, False,  True, False, False, False,
         True, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 6420, time diff 0.7882773876190186, total time dif 544.7009310722351)
step: 6420 @ episode report: {'average_total_reward': np.float32(6.3944445), 'reward_variance': np.float32(0.81561136), 'max_total_reward': np.float32(7.6555567), 'min_total_reward': np.float32(5.4111114), 'average_n_step': np.float32(7.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(7.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08723459616303444), 'actor_loss': np.float64(-0.996309369802475), 'hyper_actor_loss': np.float64(0.015270262770354748), 'behavior_loss': np.float64(2.5957627296447754)}

tensor([ True, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
         True,  True])
tensor([False,  True, False,  True, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True,  True,
        False, False])
tensor([ True, False,  True, False, False, False, False,  True, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False,  True])
Episode step 6430, time diff 0.82084059715271, total time dif 545.4892084598541)
step: 6430 @ episode report: {'average_total_reward': np.float32(6.545556), 'reward_variance': np.float32(2.8637147), 'max_total_reward': np.float32(9.777778), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(8.0), 'max_n_step': np.float32(11.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08947239294648171), 'actor_loss': np.float64(-0.9766235411167145), 'hyper_actor_loss': np.float64(0.016402064450085165), 'behavior_loss': np.float64(2.5247944831848144)}

tensor([False, False, False, False, False,  True, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False,  True,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
         True, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False,  True, False,  True, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
Episode step 6440, time diff 0.814885139465332, total time dif 546.3100490570068)
step: 6440 @ episode report: {'average_total_reward': np.float32(6.294445), 'reward_variance': np.float32(2.523266), 'max_total_reward': np.float32(8.900001), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(7.7), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10391712039709092), 'actor_loss': np.float64(-1.0206485509872436), 'hyper_actor_loss': np.float64(0.016588745824992656), 'behavior_loss': np.float64(2.620902442932129)}

tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False,  True,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([False,  True, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Episode step 6450, time diff 0.8327915668487549, total time dif 547.1249341964722)
step: 6450 @ episode report: {'average_total_reward': np.float32(5.7333336), 'reward_variance': np.float32(1.7156299), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08825162276625634), 'actor_loss': np.float64(-0.9666280925273896), 'hyper_actor_loss': np.float64(0.0163375036790967), 'behavior_loss': np.float64(2.5183030128479005)}

tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False,  True,  True,  True, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False,  True, False,  True,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False,  True,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False,  True, False,
        False, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False,  True,  True, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 6460, time diff 0.8264675140380859, total time dif 547.9577257633209)
step: 6460 @ episode report: {'average_total_reward': np.float32(5.8966665), 'reward_variance': np.float32(0.95775414), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(5.288889), 'average_n_step': np.float32(7.4), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(7.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08707652650773526), 'actor_loss': np.float64(-0.931991720199585), 'hyper_actor_loss': np.float64(0.015503036882728338), 'behavior_loss': np.float64(2.5855056047439575)}

tensor([False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False,  True, False, False, False,  True, False, False,  True,
        False, False,  True, False,  True,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False])
tensor([ True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True,  True, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
Episode step 6470, time diff 0.839400053024292, total time dif 548.784193277359)
step: 6470 @ episode report: {'average_total_reward': np.float32(5.757778), 'reward_variance': np.float32(1.1052547), 'max_total_reward': np.float32(7.655556), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.2), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08214911669492722), 'actor_loss': np.float64(-0.9169471681118011), 'hyper_actor_loss': np.float64(0.01426642518490553), 'behavior_loss': np.float64(2.672554850578308)}

tensor([False, False, False, False, False, False,  True,  True, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False,  True, False, False,  True, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True,  True,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False,  True, False, False,  True, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False,  True, False,  True,  True, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True])
Episode step 6480, time diff 0.8562295436859131, total time dif 549.6235933303833)
step: 6480 @ episode report: {'average_total_reward': np.float32(6.1577783), 'reward_variance': np.float32(2.4968839), 'max_total_reward': np.float32(8.655556), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.6), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09472457766532898), 'actor_loss': np.float64(-0.9595924258232117), 'hyper_actor_loss': np.float64(0.01310997549444437), 'behavior_loss': np.float64(2.6051241874694826)}

tensor([False, False, False, False, False,  True, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True,  True,  True, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False,  True,  True, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
Episode step 6490, time diff 0.9711928367614746, total time dif 550.4798228740692)
step: 6490 @ episode report: {'average_total_reward': np.float32(6.2822227), 'reward_variance': np.float32(1.3800788), 'max_total_reward': np.float32(8.777778), 'min_total_reward': np.float32(4.2888894), 'average_n_step': np.float32(7.7), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09085585922002792), 'actor_loss': np.float64(-0.9814669787883759), 'hyper_actor_loss': np.float64(0.012490200344473124), 'behavior_loss': np.float64(2.609347915649414)}

tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False,  True, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False,  True, False,  True,
        False, False])
tensor([False, False, False, False, False,  True,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
         True, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
Episode step 6500, time diff 1.1356139183044434, total time dif 551.4510157108307)
step: 6500 @ episode report: {'average_total_reward': np.float32(6.494445), 'reward_variance': np.float32(1.8506237), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(4.166667), 'average_n_step': np.float32(7.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10609038844704628), 'actor_loss': np.float64(-0.943919438123703), 'hyper_actor_loss': np.float64(0.011740106996148825), 'behavior_loss': np.float64(2.693185830116272)}

tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False,  True,  True, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False,  True, False, False, False,  True,
        False, False])
tensor([ True, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False,  True,  True,
        False, False])
Episode step 6510, time diff 1.093116044998169, total time dif 552.5866296291351)
step: 6510 @ episode report: {'average_total_reward': np.float32(5.8333335), 'reward_variance': np.float32(2.5900745), 'max_total_reward': np.float32(8.655557), 'min_total_reward': np.float32(3.288889), 'average_n_step': np.float32(7.3), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10014635398983955), 'actor_loss': np.float64(-1.0090477228164674), 'hyper_actor_loss': np.float64(0.011924010794609785), 'behavior_loss': np.float64(2.6874691009521485)}

tensor([False, False, False,  True, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False,  True,  True,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False,  True, False,
         True, False, False,  True, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False,  True,  True,
        False, False, False,  True, False,  True, False, False,  True, False,
        False, False, False,  True,  True, False, False, False, False, False,
         True, False])
Episode step 6520, time diff 0.8522229194641113, total time dif 553.6797456741333)
step: 6520 @ episode report: {'average_total_reward': np.float32(6.182223), 'reward_variance': np.float32(1.7236096), 'max_total_reward': np.float32(8.9), 'min_total_reward': np.float32(4.288889), 'average_n_step': np.float32(7.6), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09231970310211182), 'actor_loss': np.float64(-0.9225089848041534), 'hyper_actor_loss': np.float64(0.012149798404425382), 'behavior_loss': np.float64(2.5495197772979736)}

tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False])
tensor([False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
Episode step 6530, time diff 1.1253890991210938, total time dif 554.5319685935974)
step: 6530 @ episode report: {'average_total_reward': np.float32(6.2188888), 'reward_variance': np.float32(1.4213102), 'max_total_reward': np.float32(8.900001), 'min_total_reward': np.float32(4.5333333), 'average_n_step': np.float32(7.6), 'max_n_step': np.float32(10.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09157844260334969), 'actor_loss': np.float64(-0.9825907170772552), 'hyper_actor_loss': np.float64(0.01283717406913638), 'behavior_loss': np.float64(2.4483301639556885)}

tensor([False,  True, False, False, False, False,  True, False, False, False,
         True, False, False, False,  True, False, False,  True, False,  True,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([ True, False,  True, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False,  True, False,
        False,  True,  True, False, False, False, False, False, False,  True,
        False,  True])
tensor([False, False, False, False,  True, False, False, False,  True,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 6540, time diff 0.8907291889190674, total time dif 555.6573576927185)
step: 6540 @ episode report: {'average_total_reward': np.float32(6.306667), 'reward_variance': np.float32(2.8481534), 'max_total_reward': np.float32(10.0222225), 'min_total_reward': np.float32(3.4111114), 'average_n_step': np.float32(7.7), 'max_n_step': np.float32(11.0), 'min_n_step': np.float32(5.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.1044618010520935), 'actor_loss': np.float64(-0.9637376725673675), 'hyper_actor_loss': np.float64(0.0127248115837574), 'behavior_loss': np.float64(2.5992271184921263)}

tensor([False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False,  True, False, False, False,  True, False, False, False,
        False, False, False,  True,  True, False,  True, False,  True, False,
        False, False, False, False,  True,  True, False, False,  True,  True,
         True, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True,  True, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False,  True, False, False, False, False,
        False, False])
Episode step 6550, time diff 0.9153835773468018, total time dif 556.5480868816376)
step: 6550 @ episode report: {'average_total_reward': np.float32(6.2066665), 'reward_variance': np.float32(3.5357335), 'max_total_reward': np.float32(9.900001), 'min_total_reward': np.float32(4.4111114), 'average_n_step': np.float32(7.6), 'max_n_step': np.float32(11.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.08639981523156166), 'actor_loss': np.float64(-0.9168412089347839), 'hyper_actor_loss': np.float64(0.013040076568722725), 'behavior_loss': np.float64(2.4417081832885743)}

tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False,  True,  True, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False,  True,  True, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False,  True, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False])
Episode step 6560, time diff 0.9280438423156738, total time dif 557.4634704589844)
step: 6560 @ episode report: {'average_total_reward': np.float32(6.357778), 'reward_variance': np.float32(1.1367606), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(4.533334), 'average_n_step': np.float32(7.8), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.10402599796652794), 'actor_loss': np.float64(-0.9451467752456665), 'hyper_actor_loss': np.float64(0.013317503314465285), 'behavior_loss': np.float64(2.618212652206421)}

tensor([ True, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False,  True, False, False,
         True,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False])
tensor([False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False,  True, False, False,  True, False, False, False,  True,
         True, False])
tensor([False, False, False, False, False,  True, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False,  True, False,  True,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False])
tensor([ True,  True, False,  True,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False])
Episode step 6570, time diff 0.8856658935546875, total time dif 558.3915143013)
step: 6570 @ episode report: {'average_total_reward': np.float32(6.457778), 'reward_variance': np.float32(0.8129832), 'max_total_reward': np.float32(7.7777786), 'min_total_reward': np.float32(5.411111), 'average_n_step': np.float32(7.9), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(7.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09634602516889572), 'actor_loss': np.float64(-0.927735549211502), 'hyper_actor_loss': np.float64(0.013236715085804462), 'behavior_loss': np.float64(2.5083609104156492)}

tensor([False, False,  True, False, False, False, False,  True, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True,  True, False, False,  True, False, False, False,
        False, False])
tensor([ True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False])
tensor([False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False,  True,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True,  True,  True,
        False,  True])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False])
tensor([False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False])
Episode step 6580, time diff 0.9000644683837891, total time dif 559.2771801948547)
step: 6580 @ episode report: {'average_total_reward': np.float32(5.5477777), 'reward_variance': np.float32(1.1251867), 'max_total_reward': np.float32(7.6555557), 'min_total_reward': np.float32(4.411111), 'average_n_step': np.float32(7.1), 'max_n_step': np.float32(9.0), 'min_n_step': np.float32(6.0), 'buffer_size': 100000} @ step loss: {'critic_loss': np.float64(0.09673319011926651), 'actor_loss': np.float64(-0.9412551403045655), 'hyper_actor_loss': np.float64(0.014001961145550013), 'behavior_loss': np.float64(2.4117781639099123)}

tensor([ True, False, False, False, False, False, False,  True, False, False,
        False, False,  True,  True, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False])
tensor([False, False, False, False, False,  True,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False])
tensor([False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False])
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False])
tensor([False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False])
Early stop manually
Exit completely without evaluation? (y/n) (default n):